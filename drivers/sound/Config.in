dep_tristate 'ProAudioSpectrum 16 support' CONFIG_PAS $CONFIG_SOUND
dep_tristate '100% Sound Blaster compatibles (SB16/32/64, ESS, Jazz16) support' CONFIG_SB $CONFIG_SOUND
dep_tristate 'Generic OPL2/OPL3 FM synthesizer support' CONFIG_ADLIB $CONFIG_SOUND
dep_tristate 'Gravis Ultrasound support' CONFIG_GUS $CONFIG_SOUND
if [ "$CONFIG_GUS" != "n" ]; then
	bool '16 bit sampling option of GUS (_NOT_ GUS MAX)' CONFIG_GUS16 
	bool 'GUS MAX support' CONFIG_GUSMAX
fi
dep_tristate 'MPU-401 support (NOT for SB16)' CONFIG_MPU401 $CONFIG_SOUND
dep_tristate 'PSS (ECHO-ADI2111) support' CONFIG_PSS $CONFIG_SOUND
dep_tristate 'Microsoft Sound System support' CONFIG_MSS $CONFIG_SOUND
dep_tristate 'Ensoniq SoundScape support' CONFIG_SSCAPE $CONFIG_SOUND
dep_tristate 'MediaTrix AudioTrix Pro support' CONFIG_TRIX $CONFIG_SOUND
dep_tristate 'Support for OPTi MAD16 and/or Mozart based cards' CONFIG_MAD16 $CONFIG_SOUND
dep_tristate 'Support for Crystal CS4232 based (PnP) cards' CONFIG_CS4232 $CONFIG_SOUND
dep_tristate 'Support for Turtle Beach Wave Front (Maui, Tropez) synthesizers' CONFIG_MAUI $CONFIG_SOUND
dep_tristate 'Yamaha OPL3-SA1 audio controller' CONFIG_OPL3SA1 $CONFIG_SOUND
dep_tristate 'SoftOSS software wave table engine' CONFIG_SOFTOSS $CONFIG_SOUND
dep_tristate 'FM synthesizer (YM3812/OPL-3) support' CONFIG_YM3812 $CONFIG_SOUND

if [ "$CONFIG_AEDSP16" = "y" -o "$CONFIG_AEDSP16" = "m" ]; then
    hex 'I/O base for Audio Excel DSP 16 220 or 240' AEDSP16_BASE 220
fi

if [ "$CONFIG_SB" = "y" -o "$CONFIG_SB" = "m" ]; then
    hex 'I/O base for SB Check from manual of the card' SBC_BASE 220
    int 'Sound Blaster IRQ Check from manual of the card' SBC_IRQ 7
    int 'Sound Blaster DMA 0, 1 or 3' SBC_DMA 1
    int 'Sound Blaster 16 bit DMA (SB16, Jazz16, SMW) 5, 6 or 7 (use 1 for 8 bit cards)' SB_DMA2 5
    hex 'MPU401 I/O base of SB16, Jazz16 and ES1688 Check from manual of the card' SB_MPU_BASE 330
    comment 'MPU401 IRQ is only required with Jazz16, SM Wave and ESS1688.'
    comment 'Enter -1 to the following question if you have something else such as SB16/32.'
    int 'SB MPU401 IRQ (Jazz16, SM Wave and ES1688) Check from manual of the card' SB_MPU_IRQ -1
fi

if [ "$CONFIG_PAS" = "y" -o "$CONFIG_PAS" = "m" ]; then
    int 'PAS16 IRQ 3, 4, 5, 7, 9, 10, 11, 12, 14 or 15' PAS_IRQ 10
    int 'PAS16 DMA 0, 1, 3, 5, 6 or 7' PAS_DMA 3
fi

if [ "$CONFIG_GUS" = "y" -o "$CONFIG_GUS" = "m" ]; then
    hex 'I/O base for GUS 210, 220, 230, 240, 250 or 260' GUS_BASE 220
    int 'GUS IRQ 3, 5, 7, 9, 11, 12 or 15' GUS_IRQ 15
    int 'GUS DMA 1, 3, 5, 6 or 7' GUS_DMA 6
    int 'Second DMA channel for GUS 1, 3, 5, 6 or 7' GUS_DMA2 -1
fi

if [ "$CONFIG_GUS16" = "y" ]; then
    hex 'I/O base for the 16 bit daughtercard of GUS 530, 604, E80 or F40' GUS16_BASE 530
    int 'GUS 16 bit daughtercard IRQ 3, 4, 5, 7, or 9' GUS16_IRQ 7
    int 'GUS DMA 0, 1 or 3' GUS16_DMA 3
fi

if [ "$CONFIG_MPU401" = "y" -o "$CONFIG_MPU401" = "m" ]; then
    hex 'I/O base for MPU401 Check from manual of the card' MPU_BASE 330
    int 'MPU401 IRQ Check from manual of the card' MPU_IRQ 9
fi

if [ "$CONFIG_MAUI" = "y" -o "$CONFIG_MAUI" = "M" ]; then
    comment 'ERROR! You have to use old sound configuration method with Maui.'
    hex 'I/O base for Maui 210, 230, 260, 290, 300, 320, 338 or 330' MAUI_BASE 330
    int 'Maui IRQ 5, 9, 12 or 15' MAUI_IRQ 9
fi

if [ "$CONFIG_UART6850" = "y" -o "$CONFIG_UART6850" = "m" ]; then
    hex 'I/O base for UART 6850 MIDI port (Unknown)' U6850_BASE 0
    int 'UART6850 IRQ (Unknown)' U6850_IRQ -1
fi

if [ "$CONFIG_PSS" = "y" -o "$CONFIG_PSS" = "y" ]; then
    comment 'ERROR! You have to use old sound configuration method with PSS cards.'
    hex 'PSS I/O base 220 or 240' PSS_BASE 220
    hex 'PSS audio I/O base 530, 604, E80 or F40' PSS_MSS_BASE 530
    int 'PSS audio IRQ 7, 9, 10 or 11' PSS_MSS_IRQ 11
    int 'PSS audio DMA 0, 1 or 3' PSS_MSS_DMA 3
    hex 'PSS MIDI I/O base ' PSS_MPU_BASE 330
    int 'PSS MIDI IRQ 3, 4, 5, 7 or 9' PSS_MPU_IRQ 9
fi

if [ "$CONFIG_MSS" = "y" -o "$CONFIG_MSS" = "m" ]; then
    hex 'MSS/WSS I/O base 530, 604, E80 or F40' MSS_BASE 530
    int 'MSS/WSS IRQ 7, 9, 10 or 11' MSS_IRQ 11
    int 'MSS/WSS DMA 0, 1 or 3' MSS_DMA 3
    int 'MSS/WSS second DMA (if possible) 0, 1 or 3' MSS_DMA2 -1
fi

if [ "$CONFIG_SSCAPE" = "y" -o "$CONFIG_SSCAPE" = "m" ]; then
    hex 'SoundScape MIDI I/O base 320, 330, 340 or 350' SSCAPE_BASE 330
    int 'SoundScape MIDI IRQ ' SSCAPE_IRQ 9
    int 'SoundScape initialization DMA 0, 1 or 3' SSCAPE_DMA 3
    hex 'SoundScape audio I/O base 534, 608, E84 or F44' SSCAPE_MSS_BASE 534
    int 'SoundScape audio IRQ 7, 9, 10 or 11' SSCAPE_MSS_IRQ 11
fi

if [ "$CONFIG_TRIX" = "y" -o "$CONFIG_TRIX" = "m" ]; then
    comment 'ERROR! You have to use old sound configuration method with OPL3-SA1.'
    hex 'OPL3-SA1 audio I/O base 530, 604, E80 or F40' TRIX_BASE 530
    int 'OPL3-SA1 audio IRQ 7, 9, 10 or 11' TRIX_IRQ 11
    int 'OPL3-SA1 audio DMA 0, 1 or 3' TRIX_DMA 0
    int 'OPL3-SA1 second (duplex) DMA 0, 1 or 3' TRIX_DMA2 3
    hex 'OPL3-SA1 MIDI I/O base 330, 370, 3B0 or 3F0' TRIX_MPU_BASE 330
    int 'OPL3-SA1 MIDI IRQ 3, 4, 5, 7 or 9' TRIX_MPU_IRQ 9
    hex 'OPL3-SA1 SB I/O base 220, 210, 230, 240, 250, 260 or 270' TRIX_SB_BASE 220
    int 'OPL3-SA1 SB IRQ 3, 4, 5 or 7' TRIX_SB_IRQ 7
    int 'OPL3-SA1 SB DMA 1 or 3' TRIX_SB_DMA 1
fi

if [ "$CONFIG_OPL3SA1" = "y" -o "$CONFIG_OPL3SA1" = "m" ]; then
    hex 'OPL3-SA1 audio I/O base 530, 604, E80 or F40' OPL3SA1_BASE 530
    int 'OPL3-SA1 audio IRQ 7, 9, 10 or 11' OPL3SA1_IRQ 11
    int 'OPL3-SA1 audio DMA 0, 1 or 3' OPL3SA1_DMA 0
    int 'OPL3-SA1 second (duplex) DMA 0, 1 or 3' OPL3SA1_DMA2 3
    hex 'OPL3-SA1 MIDI I/O base 330, 370, 3B0 or 3F0' OPL3SA1_MPU_BASE 330
    int 'OPL3-SA1 MIDI IRQ 3, 4, 5, 7 or 9' OPL3SA1_MPU_IRQ 9
fi

if [ "$CONFIG_CS4232" = "y" -o "$CONFIG_CS4232" = "m" ]; then
    hex 'CS4232 audio I/O base 530, 604, E80 or F40' CS4232_BASE 530
    int 'CS4232 audio IRQ 5, 7, 9, 11, 12 or 15' CS4232_IRQ 11
    int 'CS4232 audio DMA 0, 1 or 3' CS4232_DMA 0
    int 'CS4232 second (duplex) DMA 0, 1 or 3' CS4232_DMA2 3
    hex 'CS4232 MIDI I/O base 330, 370, 3B0 or 3F0' CS4232_MPU_BASE 330
    int 'CS4232 MIDI IRQ 5, 7, 9, 11, 12 or 15' CS4232_MPU_IRQ 9
fi

if [ "$CONFIG_MAD16" = "y" -o "$CONFIG_MAD16" = "m" ]; then
    hex 'MAD16 audio I/O base 530, 604, E80 or F40' MAD16_BASE 530
    int 'MAD16 audio IRQ 7, 9, 10 or 11' MAD16_IRQ 11
    int 'MAD16 audio DMA 0, 1 or 3' MAD16_DMA 3
    int 'MAD16 second (duplex) DMA 0, 1 or 3' MAD16_DMA2 0
    hex 'MAD16 MIDI I/O base 300, 310, 320 or 330 (0 disables)' MAD16_MPU_BASE 330
    int 'MAD16 MIDI IRQ 5, 7, 9 or 10' MAD16_MPU_IRQ 9
fi

if [ "$CONFIG_SOFTOSS" = "y" -o "$CONFIG_SOFTOSS" = "m" ]; then
    int 'Sampling rate for SoftOSS 8000 to 48000' SOFTOSS_RATE 22050
    int 'Max # of concurrent voices for SoftOSS 4 to 32' SOFTOSS_VOICES 32
fi

#
$MAKE -C drivers/sound kernelconfig || exit 1
bool 'Additional low level drivers' CONFIG_LOWLEVEL_SOUND

if [ "$CONFIG_LOWLEVEL_SOUND" = "y" ]; then
   dep_tristate 'ACI mixer (miroPCM12)' CONFIG_ACI_MIXER $CONFIG_SOUND
   dep_tristate 'AWE32 synth' CONFIG_AWE32_SYNTH $CONFIG_SOUND
   bool 'Gallant Audio Cards (SC-6000 and SC-6600 based)' CONFIG_AEDSP16

   if [ "$CONFIG_AEDSP16" = "y" ]; then
      comment 'SC-6600 Audio Cards have no jumper switches at all'
      bool 'SC-6600 based audio cards (new Audio Excel DSP 16)' CONFIG_SC6600

      if [ "$CONFIG_SB" = "y" -o "$CONFIG_SB" = "m" -a "$CONFIG_AEDSP16_MSS" != "y" ]; then
         bool 'Audio Excel DSP 16 (SBPro emulation)' CONFIG_AEDSP16_SBPRO
         if [ "$CONFIG_AEDSP16_SBPRO" = "y" ]; then
	    comment 'Audio Excel DSP 16 [Sound Blaster Pro]'
            hex 'I/O base for Audio Excel DSP 16 220 or 240' \
	                                           AEDSP16_BASE $SBC_BASE
            int 'Audio Excel DSP 16 IRQ 5, 7, 9, 10, 11' \
	                                           AEDSP16_SBC_IRQ $SBC_IRQ
            int 'Audio Excel DSP 16 DMA 0, 1 or 3' AEDSP16_SBC_DMA $SBC_DMA
         fi
      fi
   
      if [ "$CONFIG_MSS" = "y" -o "$CONFIG_MSS" = "m" -a "$CONFIG_AEDSP16_SBPRO" != "y" ]; then
         bool 'Audio Excel DSP 16 (MSS emulation)' CONFIG_AEDSP16_MSS
         if [ "$CONFIG_AEDSP16_MSS" = "y" ]; then
	    comment 'Audio Excel DSP 16 [Microsoft Sound System]'
	    hex 'I/O base for Audio Excel DSP 16 220 or 240' AEDSP16_BASE 220
            int 'Audio Excel DSP 16 IRQ 5, 7, 9, 10, 11' \
	                                           AEDSP16_MSS_IRQ $MSS_IRQ
            int 'Audio Excel DSP 16 DMA 0, 1 or 3' AEDSP16_MSS_DMA $MSS_DMA
         fi
      fi

      if [ "$CONFIG_MPU401" = "y" -o "$CONFIG_MPU401" = "m" ]; then
         bool 'Audio Excel DSP 16 (MPU401 emulation)' CONFIG_AEDSP16_MPU401
         if [ "$CONFIG_AEDSP16_MPU401" = "y" ]; then
	    comment 'Audio Excel DSP 16 [MPU-401]'
	    if [ "$CONFIG_AEDSP16_SBPRO" != "y" \
	         -a "$CONFIG_AEDSP16_MSS" != "y" ]; then
	       hex 'I/O base for Audio Excel DSP 16 220 or 240' AEDSP16_BASE 220
	    fi
            int 'MPU401 IRQ for Audio Excel DSP 16 5, 7, 9, 10 or 0 (disable)' \
	    						AEDSP16_MPU_IRQ $MPU_IRQ
         fi
      fi

      if [ "$CONFIG_SC6600" = "y" ]; then
         comment 'SC-6600 specific configuration'
         bool 'Activate SC-6600 Joystick Interface' CONFIG_SC6600_JOY
         int 'SC-6600 CDROM Interface (4=None, 3=IDE, 1=Panasonic, 0=?Sony?)' \
	 					CONFIG_SC6600_CDROM 4
         hex 'SC-6600 CDROM Interface I/O Address' CONFIG_SC6600_CDROMBASE 0
      fi

   fi
fi

