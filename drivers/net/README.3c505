The address and IRQ used by the 3c505 driver can be configured at boot
time by typing 'ether=eth0,15,0x300' (replace IRQ and base address with
ones that tell how your adapter is jumpered). The driver does not yet
use DMA.

If no base address is given at the boot time, the driver will look for
a 3c505 adapter at addresses 0x300, 0x280 and 0x310 in this order,
possibly messing up any other hardware residing in these addresses.
If a base address is given, it will be verified.

The driver has two compile-time settings in the CONFIG file:
ELP_NEED_HARD_RESET
 Some DOS drivers seem to get the adapter to some irrecoverable state
 if the machine is "warm booted" from DOS to Linux. If you experience
 problems when warm booting, but "cold boot" works, #defining this
 to 1 may help. As of 3c505.c v0.8 the driver should be able to find
 out whether of not this is needed, but I'm not completely sure.
ELP_DEBUG
 The driver debug level.  It's probably best to leave it at 0 most of the time.
 If you are having trouble, setting it to 1 may give you more information.
 Any higher setting is too verbose for most purposes.

Known problems:
 The 3c505 is a slow card, mostly because of the way it talks to the host.
 Don't expect any great performance from it.

 I am seeing periodic "transmit timed out" and "timeout waiting for PCB
 acknowledge" messages under high load.  I'm not sure what's causing these -
 it seems that the 3c505 occasionally just loses a command.  They seem not to
 be fatal, anyway.

 There may be some initialisation problems still lurking, particularly when
 warm-booting from DOS (ELP_NEED_HARD_RESET seems not to help).

Authors:
 The driver is mainly written by Craig Southeren, email
 <craigs@ineluki.apana.org.au>.
 Parts of the driver (adapting the driver to 1.1.4+ kernels,
 IRQ/address detection, some changes) and this README by
 Juha Laiho <jlaiho@ichaos.nullnet.fi>.
 Philip Blundell <pjb27@cam.ac.uk> made some more changes.
