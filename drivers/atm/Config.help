CONFIG_ATM_TCP
  ATM over TCP driver. Useful mainly for development and for
  experiments. If unsure, say N.

CONFIG_ATM_ENI
  Driver for the Efficient Networks ENI155p series and SMC ATM
  Power155 155 Mbps ATM adapters. Both, the versions with 512KB and
  2MB on-board RAM (Efficient calls them "C" and "S", respectively),
  and the FPGA and the ASIC Tonga versions of the board are supported.
  The driver works with MMF (-MF or ...F) and UTP-5 (-U5 or ...D)
  adapters.

  This driver is also available as a module.  If you want to compile
  it as a module, say M here and read
  <file:Documentation/modules.txt>.  The module will be called eni.o.

CONFIG_ATM_ENI_DEBUG
  Extended debugging records various events and displays that list
  when an inconsistency is detected. This mechanism is faster than
  generally using printks, but still has some impact on performance.
  Note that extended debugging may create certain race conditions
  itself. Enable this ONLY if you suspect problems with the driver.

CONFIG_ATM_ENI_TUNE_BURST
  In order to obtain good throughput, the ENI NIC can transfer
  multiple words of data per PCI bus access cycle. Such a multi-word
  transfer is called a burst.

  The default settings for the burst sizes are suitable for most PCI
  chipsets. However, in some cases, large bursts may overrun buffers
  in the PCI chipset and cause data corruption. In such cases, large
  bursts must be disabled and only (slower) small bursts can be used.
  The burst sizes can be set independently in the send (TX) and
  receive (RX) direction.

  Note that enabling many different burst sizes in the same direction
  may increase the cost of setting up a transfer such that the
  resulting throughput is lower than when using only the largest
  available burst size.

  Also, sometimes larger bursts lead to lower throughput, e.g. on an
  Intel 440FX board, a drop from 135 Mbps to 103 Mbps was observed
  when going from 8W to 16W bursts.

CONFIG_ATM_ENI_BURST_TX_16W
  Burst sixteen words at once in the send direction. This may work
  with recent PCI chipsets, but is known to fail with older chipsets.

CONFIG_ATM_ENI_BURST_TX_8W
  Burst eight words at once in the send direction. This is the default
  setting.

CONFIG_ATM_ENI_BURST_TX_4W
  Burst four words at once in the send direction. You may want to try
  this if you have disabled 8W bursts. Enabling 4W if 8W is also set
  may or may not improve throughput.

CONFIG_ATM_ENI_BURST_TX_2W
  Burst two words at once in the send direction. You may want to try
  this if you have disabled 4W and 8W bursts. Enabling 2W if 4W or 8W
  are also set may or may not improve throughput.

CONFIG_ATM_ENI_BURST_RX_16W
  Burst sixteen words at once in the receive direction. This may work
  with recent PCI chipsets, but is known to fail with older chipsets.

CONFIG_ATM_ENI_BURST_RX_8W
  Burst eight words at once in the receive direction. This may work
  with recent PCI chipsets, but is known to fail with older chipsets,
  such as the Intel Neptune series.

CONFIG_ATM_ENI_BURST_RX_4W
  Burst four words at once in the receive direction. This is the
  default setting. Enabling 4W if 8W is also set may or may not
  improve throughput.

CONFIG_ATM_ENI_BURST_RX_2W
  Burst two words at once in the receive direction. You may want to
  try this if you have disabled 4W and 8W bursts. Enabling 2W if 4W or
  8W are also set may or may not improve throughput.

CONFIG_ATM_ZATM
  Driver for the ZeitNet ZN1221 (MMF) and ZN1225 (UTP-5) 155 Mbps ATM
  adapters.

  This driver is also available as a module.  If you want to compile
  it as a module, say M here and read
  <file:Documentation/modules.txt>.  The module will be called zatm.o.

CONFIG_ATM_ZATM_DEBUG
  Extended debugging records various events and displays that list
  when an inconsistency is detected. This mechanism is faster than
  generally using printks, but still has some impact on performance.
  Note that extended debugging may create certain race conditions
  itself. Enable this ONLY if you suspect problems with the driver.

CONFIG_ATM_FIRESTREAM
  Driver for the Fujitsu FireStream 155 (MB86697) and
  FireStream 50 (MB86695) ATM PCI chips.

  This driver is also available as a module.  If you want to compile
  it as a module, say M here and read
  <file:Documentation/modules.txt>.  The module will be called
  firestream.o.

CONFIG_ATM_ZATM_EXACT_TS
  The uPD98401 SAR chip supports a high-resolution timer (approx. 30
  MHz) that is used for very accurate reception timestamps. Because
  that timer overflows after 140 seconds, and also to avoid timer
  drift, time measurements need to be periodically synchronized with
  the normal system time. Enabling this feature will add some general
  overhead for timer synchronization and also per-packet overhead for
  time conversion.

CONFIG_ATM_NICSTAR
  The NICStAR chipset family is used in a large number of ATM NICs for
  25 and for 155 Mbps, including IDT cards and the Fore ForeRunnerLE
  series. Say Y if you have one of those.

  This driver is also available as a module.  If you want to compile
  it as a module, say M here and read
  <file:Documentation/modules.txt>. The module will be called
  nicstar.o.

CONFIG_ATM_NICSTAR_USE_SUNI
  Support for the S-UNI and compatible PHYsical layer chips. These are
  found in most 155Mbps NICStAR based ATM cards, namely in the
  ForeRunner LE155 cards. This driver provides detection of cable~
  removal and reinsertion and provides some statistics. This driver
  doesn't have removal capability when compiled as a module, so if you
  need that capability don't include S-UNI support (it's not needed to
  make the card work).

CONFIG_ATM_NICSTAR_USE_IDT77105
  Support for the PHYsical layer chip in ForeRunner LE25 cards. In
  addition to cable removal/reinsertion detection, this driver allows
  you to control the loopback mode of the chip via a dedicated IOCTL.
  This driver is required for proper handling of temporary carrier
  loss, so if you have a 25Mbps NICStAR based ATM card you must say Y.

CONFIG_ATM_IDT77252
  Driver for the IDT 77252 ATM PCI chips.

  This driver is also available as a module.  If you want to compile
  it as a module, say M here and read
  <file:Documentation/modules.txt>. The module will be called idt77252.o

CONFIG_ATM_IDT77252_DEBUG
  Somewhat useful debugging messages are available. The choice of
  messages is controlled by a bitmap.  This may be specified as a
  module argument.  See the file <file:drivers/atm/idt77252.h> for
  the meanings of the bits in the mask.

  When active, these messages can have a significant impact on the
  speed of the driver, and the size of your syslog files! When
  inactive, they will have only a modest impact on performance.

CONFIG_ATM_IDT77252_RCV_ALL
  Enable receiving of all cells on the ATM link, that do not match
  an open connection in the raw cell queue of the driver.  Useful
  for debugging or special applications only, so the safe answer is N.

CONFIG_ATM_AMBASSADOR
  This is a driver for ATMizer based ATM card produced by Madge
  Networks Ltd. Say Y (or M to compile as a module named ambassador.o)
  here if you have one of these cards.

CONFIG_ATM_AMBASSADOR_DEBUG
  Somewhat useful debugging messages are available. The choice of
  messages is controlled by a bitmap.  This may be specified as a
  module argument (kernel command line argument as well?), changed
  dynamically using an ioctl (not yet) or changed by sending the
  string "Dxxxx" to VCI 1023 (where x is a hex digit).  See the file
  <file:drivers/atm/ambassador.h> for the meanings of the bits in the
  mask.

  When active, these messages can have a significant impact on the
  speed of the driver, and the size of your syslog files! When
  inactive, they will have only a modest impact on performance.

CONFIG_ATM_HORIZON
  This is a driver for the Horizon chipset ATM adapter cards once
  produced by Madge Networks Ltd. Say Y (or M to compile as a module
  named horizon.o) here if you have one of these cards.

CONFIG_ATM_HORIZON_DEBUG
  Somewhat useful debugging messages are available. The choice of
  messages is controlled by a bitmap.  This may be specified as a
  module argument (kernel command line argument as well?), changed
  dynamically using an ioctl (not yet) or changed by sending the
  string "Dxxxx" to VCI 1023 (where x is a hex digit).  See the file
  <file:drivers/atm/horizon.h> for the meanings of the bits in the
  mask.

  When active, these messages can have a significant impact on the
  speed of the driver, and the size of your syslog files! When
  inactive, they will have only a modest impact on performance.

CONFIG_ATM_IA
  This is a driver for the Interphase (i)ChipSAR adapter cards
  which include a variety of variants in term of the size of the
  control memory (128K-1KVC, 512K-4KVC), the size of the packet
  memory (128K, 512K, 1M), and the PHY type (Single/Multi mode OC3,
  UTP155, UTP25, DS3 and E3). Go to:
  	<http://www.iphase.com/products/ClassSheet.cfm?ClassID=ATM>
  for more info about the cards. Say Y (or M to compile as a module
  named iphase.o) here if you have one of these cards.

  See the file <file:Documentation/networking/iphase.txt> for further
  details.

CONFIG_ATM_IA_DEBUG
  Somewhat useful debugging messages are available. The choice of
  messages is controlled by a bitmap. This may be specified as a
  module argument (kernel command line argument as well?), changed
  dynamically using an ioctl (Get the debug utility, iadbg, from
  <ftp://ftp.iphase.com/pub/atm/pci/>).

  See the file <file:drivers/atm/iphase.h> for the meanings of the
  bits in the mask.

  When active, these messages can have a significant impact on the
  speed of the driver, and the size of your syslog files! When
  inactive, they will have only a modest impact on performance.

CONFIG_ATM_FORE200E_MAYBE
  This is a driver for the FORE Systems 200E-series ATM adapter
  cards. It simultaneously supports PCA-200E and SBA-200E models
  on PCI and SBUS hosts. Say Y (or M to compile as a module
  named fore_200e.o) here if you have one of these ATM adapters.

  Note that the driver will actually be compiled only if you
  additionally enable the support for PCA-200E and/or SBA-200E
  cards.

  See the file <file:Documentation/networking/fore200e.txt> for
  further details.

CONFIG_ATM_FORE200E_PCA
  Say Y here if you want your PCA-200E cards to be probed.

CONFIG_ATM_FORE200E_PCA_DEFAULT_FW
  Use the default PCA-200E firmware data shipped with the driver.

  Normal users do not have to deal with the firmware stuff, so
  they should say Y here.

CONFIG_ATM_FORE200E_PCA_FW
  This defines the pathname of an alternative PCA-200E binary
  firmware image supplied by the user. This pathname may be
  absolute or relative to the drivers/atm directory.

  The driver comes with an adequate firmware image, so normal users do
  not have to supply an alternative one. They just say Y to "Use
  default PCA-200E firmware" instead.

CONFIG_ATM_FORE200E_SBA
  Say Y here if you want your SBA-200E cards to be probed.

CONFIG_ATM_FORE200E_SBA_DEFAULT_FW
  Use the default SBA-200E firmware data shipped with the driver.

  Normal users do not have to deal with the firmware stuff, so
  they should say Y here.

CONFIG_ATM_FORE200E_SBA_FW
  This defines the pathname of an alternative SBA-200E binary
  firmware image supplied by the user. This pathname may be
  absolute or relative to the drivers/atm directory.

  The driver comes with an adequate firmware image, so normal users do
  not have to supply an alternative one. They just say Y to "Use
  default SBA-200E firmware", above.

CONFIG_ATM_FORE200E_TX_RETRY
  Specifies the number of times the driver attempts to transmit
  a message before giving up, if the transmit queue of the ATM card
  is transiently saturated.

  Saturation of the transmit queue may occur only under extreme
  conditions, e.g. when a fast host continuously submits very small
  frames (<64 bytes) or raw AAL0 cells (48 bytes) to the ATM adapter.

  Note that under common conditions, it is unlikely that you encounter
  a saturation of the transmit queue, so the retry mechanism never
  comes into play.

CONFIG_ATM_FORE200E_DEBUG
  Specifies the level of debugging messages issued by the driver.
  The verbosity of the driver increases with the value of this
  parameter.

  When active, these messages can have a significant impact on
  the performances of the driver, and the size of your syslog files!
  Keep the debugging level to 0 during normal operations.

