CONFIG_INPUT
  Say Y here if you have any input device (mouse, keyboard, tablet,
  joystick, steering wheel ...) connected to your system and want
  it to be available to applications. This includes standard PS/2
  keyboard and mouse.

  Say N here if you have a headless (no monitor, no keyboard) system.

  More information is available: <file:Documentation/input/input.txt>

  If unsure, say Y.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called input.o. If you want to compile it as a
  module, say M here and read <file:Documentation/modules.txt>.

CONFIG_INPUT_MOUSEDEV
  Say Y here if you want your mouse to be accessible as char devices
  13:32+ - /dev/input/mouseX and 13:63 - /dev/input/mice as an
  emulated IntelliMouse Explorer PS/2 mouse. That way, all user space
  programs (includung SVGAlib, GPM and X) will be able to use your
  mouse.

  If unsure, say Y.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called mousedev.o. If you want to compile it as
  a module, say M here and read <file:Documentation/modules.txt>.

CONFIG_INPUT_MOUSEDEV_SCREEN_X
  If you're using a digitizer, or a graphic tablet, and want to use
  it as a mouse then the mousedev driver needs to know the X window
  screen resolution you are using to correctly scale the data. If
  you're not using a digitizer, this value is ignored.

CONFIG_INPUT_MOUSEDEV_SCREEN_Y
  If you're using a digitizer, or a graphic tablet, and want to use
  it as a mouse then the mousedev driver needs to know the X window
  screen resolution you are using to correctly scale the data. If
  you're not using a digitizer, this value is ignored.

CONFIG_INPUT_JOYDEV
  Say Y here if you want your joystick or gamepad to be
  accessible as char device 13:0+ - /dev/input/jsX device.

  If unsure, say Y.

  More information is available: <file:Documentation/input/joystick.txt>

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called joydev.o. If you want to compile it as a
  module, say M here and read <file:Documentation/modules.txt>.

CONFIG_INPUT_TSDEV
  Say Y here if you have an application that only can understand the
  Compaq touchscreen protocol for absolute pointer data. This is
  useful namely for embedded configurations.

  If unsure, say N.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called tsdev.o. If you want to compile it as a
  module, say M here and read <file:Documentation/modules.txt>.

CONFIG_INPUT_EVDEV
  Say Y here if you want your input device events be accessible
  under char device 13:64+ - /dev/input/eventX in a generic way.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called evdev.o. If you want to compile it as a
  module, say M here and read <file:Documentation/modules.txt>.

CONFIG_INPUT_EVBUG
  Say Y here if you have a problem with the input subsystem and
  want all events (keypresses, mouse movements), to be output to
  the system log. While this is useful for debugging, it's also
  a security threat - your keypresses include your passwords, of
  course.

  If unsure, say N.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called joydev.o. If you want to compile it as a
  module, say M here and read <file:Documentation/modules.txt>.
