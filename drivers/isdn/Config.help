CONFIG_ISDN
  ISDN ("Integrated Services Digital Networks", called RNIS in France)
  is a special type of fully digital telephone service; it's mostly
  used to connect to your Internet service provider (with SLIP or
  PPP).  The main advantage is that the speed is higher than ordinary
  modem/telephone connections, and that you can have voice
  conversations while downloading stuff.  It only works if your
  computer is equipped with an ISDN card and both you and your service
  provider purchased an ISDN line from the phone company.  For
  details, read <http://alumni.caltech.edu/~dank/isdn/> on the WWW.

  This driver allows you to use an ISDN-card for networking
  connections and as dialin/out device.  The isdn-tty's have a built
  in AT-compatible modem emulator.  Network devices support autodial,
  channel-bundling, callback and caller-authentication without having
  a daemon running.  A reduced T.70 protocol is supported with tty's
  suitable for German BTX.  On D-Channel, the protocols EDSS1
  (Euro-ISDN) and 1TR6 (German style) are supported.  See
  <file:Documentation/isdn/README> for more information.

  If you want to compile the ISDN code as a module ( = code which can
  be inserted in and removed from the running kernel whenever you
  want), say M here and read <file:Documentation/modules.txt>.  The
  module will be called isdn.o. If unsure, say N.

CONFIG_ISDN_PPP
  Over digital connections such as ISDN, there is no need to
  synchronize sender and recipient's clocks with start and stop bits
  as is done over analog telephone lines. Instead, one can use
  "synchronous PPP". Saying Y here will include this protocol. This
  protocol is used by Cisco and Sun for example. So you want to say Y
  here if the other end of your ISDN connection supports it. You will
  need a special version of pppd (called ipppd) for using this
  feature. See <file:Documentation/isdn/README.syncppp> and
  <file:Documentation/isdn/syncPPP.FAQ> for more information.

CONFIG_ISDN_MPP
  With synchronous PPP enabled, it is possible to increase throughput
  by bundling several ISDN-connections, using this protocol. See
  <file:Documentation/isdn/README.syncppp> for more information.

CONFIG_ISDN_PPP_VJ
  This enables Van Jacobson header compression for synchronous PPP.
  Say Y if the other end of the connection supports it.

CONFIG_ISDN_PPP_BSDCOMP
  Support for the BSD-Compress compression method for PPP, which uses
  the LZW compression method to compress each PPP packet before it is
  sent over the wire. The machine at the other end of the PPP link
  (usually your ISP) has to support the BSD-Compress compression
  method as well for this to be useful. Even if they don't support it,
  it is safe to say Y here.

CONFIG_ISDN_AUDIO
  If you say Y here, the modem-emulator will support a subset of the
  EIA Class 8 Voice commands. Using a getty with voice-support
  (mgetty+sendfax by gert@greenie.muc.de with an extension, available
  with the ISDN utility package for example), you will be able to use
  your Linux box as an ISDN-answering machine. Of course, this must be
  supported by the lowlevel driver also. Currently, the HiSax driver
  is the only voice-supporting driver. See
  <file:Documentation/isdn/README.audio> for more information.

CONFIG_ISDN_X25
  This feature provides the X.25 protocol over ISDN connections.
  See <file:Documentation/isdn/README.x25> for more information
  if you are thinking about using this.

CONFIG_ISDN_DIVERSION
  This option allows you to use some supplementary diversion
  services in conjunction with the HiSax driver on an EURO/DSS1
  line.

  Supported options are CD (call deflection), CFU (Call forward
  unconditional), CFB (Call forward when busy) and CFNR (call forward
  not reachable). Additionally the actual CFU, CFB and CFNR state may
  be interrogated.

  The use of CFU, CFB, CFNR and interrogation may be limited to some
  countries. The keypad protocol is still not implemented. CD should
  work in all countries if the service has been subscribed to.

  Please read the file <file:Documentation/isdn/README.diversion>.

CONFIG_ISDN_DRV_ICN
  This enables support for two kinds of ISDN-cards made by a German
  company called ICN.  2B is the standard version for a single ISDN
  line with two B-channels, 4B supports two ISDN lines.  For running
  this card, additional firmware is necessary, which has to be
  downloaded into the card using a utility which is distributed
  separately.  See <file:Documentation/isdn/README> and
  <file:Documentation/isdn/README.icn> for more
  information.

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read <file:Documentation/modules.txt>.  The module
  will be called icn.o.

CONFIG_ISDN_DRV_LOOP
  This driver provides a virtual ISDN card. Its primary purpose is
  testing of linklevel features or configuration without getting
  charged by your service-provider for lots of phone calls.
  You need will need the loopctrl utility from the latest isdn4k-utils
  package to set up this driver.

CONFIG_ISDN_DRV_HISAX
  This is a driver supporting the Siemens chipset on various
  ISDN-cards (like AVM A1, Elsa ISDN cards, Teles S0-16.0, Teles
  S0-16.3, Teles S0-8, Teles/Creatix PnP, ITK micro ix1 and many
  compatibles).

  HiSax is just the name of this driver, not the name of any hardware.

  If you have a card with such a chipset, you should say Y here and
  also to the configuration option of the driver for your particular
  card, below.

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read <file:Documentation/modules.txt>.  The module
  will be called hisax.o.  See <file:Documentation/isdn/README.HiSax>
  for more information on using this driver.

CONFIG_HISAX_EURO
  Say Y or N according to the D-channel protocol which your local
  telephone service company provides.

  The call control protocol E-DSS1 is used in most European countries.
  If unsure, say Y.

CONFIG_DE_AOC
  If you want that the HiSax hardware driver sends messages to the
  upper level of the isdn code on each AOCD (Advice Of Charge, During
  the call -- transmission of the fee information during a call) and
  on each AOCE (Advice Of Charge, at the End of the call --
  transmission of fee information at the end of the call), say Y here.
  This works only in Germany.

CONFIG_HISAX_NO_SENDCOMPLETE
  If you have trouble with some ugly exchanges or you live in
  Australia select this option.

CONFIG_HISAX_NO_LLC
  If you have trouble with some ugly exchanges try to select this
  option.

CONFIG_HISAX_NO_KEYPAD
  If you like to send special dial strings including * or # without
  using the keypad protocol, select this option.

CONFIG_HISAX_1TR6
  Say Y or N according to the D-channel protocol which your local
  telephone service company provides.

  1TR6 is an old call control protocol which was used in Germany
  before E-DSS1 was established. Nowadays, all new lines in Germany
  use E-DSS1.

CONFIG_HISAX_NI1
  Enable this if you like to use ISDN in US on a NI1 basic rate
  interface.

CONFIG_HISAX_16_0
  This enables HiSax support for the Teles ISDN-cards S0-16.0, S0-8
  and many compatibles.

  See <file:Documentation/isdn/README.HiSax> on how to configure it
  using the different cards, a different D-channel protocol, or
  non-standard IRQ/port/shmem settings.

CONFIG_HISAX_16_3
  This enables HiSax support for the Teles ISDN-cards S0-16.3 the
  Teles/Creatix PnP and the Teles PCMCIA.

  See <file:Documentation/isdn/README.HiSax> on how to configure it
  using the different cards, a different D-channel protocol, or
  non-standard IRQ/port settings.

CONFIG_HISAX_TELESPCI
  This enables HiSax support for the Teles PCI.
  See <file:Documentation/isdn/README.HiSax> on how to configure it.

CONFIG_HISAX_S0BOX
  This enables HiSax support for the Teles/Creatix parallel port
  S0BOX.  See <file:Documentation/isdn/README.HiSax> on how to
  configure it.

CONFIG_HISAX_AVM_A1
  This enables HiSax support for the AVM A1 (aka "Fritz").

  See <file:Documentation/isdn/README.HiSax> on how to configure it
  using the different cards, a different D-channel protocol, or
  non-standard IRQ/port settings.

CONFIG_HISAX_FRITZPCI
  This enables HiSax support for the AVM "Fritz!PnP" and "Fritz!PCI".
  See <file:Documentation/isdn/README.HiSax> on how to configure it.

CONFIG_HISAX_AVM_A1_PCMCIA
  This enables HiSax support for the AVM A1 "Fritz!PCMCIA").
  See <file:Documentation/isdn/README.HiSax> on how to configure it.

CONFIG_HISAX_ELSA
  This enables HiSax support for the Elsa Mircolink ISA cards, for the
  Elsa Quickstep series cards and Elsa PCMCIA.

  See <file:Documentation/isdn/README.HiSax> on how to configure it
  using the different cards, a different D-channel protocol, or
  non-standard IRQ/port settings.

CONFIG_HISAX_IX1MICROR2
  This enables HiSax support for the ITK ix1-micro Revision 2 card.

  See <file:Documentation/isdn/README.HiSax> on how to configure it
  using the different cards, a different D-channel protocol, or
  non-standard IRQ/port settings.

CONFIG_HISAX_DIEHLDIVA
  This enables HiSax support for the Eicon.Diehl Diva none PRO
  versions passive ISDN cards.

  See <file:Documentation/isdn/README.HiSax> on how to configure it
  using the different cards, a different D-channel protocol, or
  non-standard IRQ/port settings.

CONFIG_HISAX_ASUSCOM
  This enables HiSax support for the AsusCom and their OEM versions
  passive ISDN ISA cards.

  See <file:Documentation/isdn/README.HiSax> on how to configure it
  using the different cards, a different D-channel protocol, or
  non-standard IRQ/port settings.

CONFIG_HISAX_TELEINT
  This enables HiSax support for the TELEINT SA1 semiactiv ISDN card.

  See <file:Documentation/isdn/README.HiSax> on how to configure it
  using the different cards, a different D-channel protocol, or
  non-standard IRQ/port settings.

CONFIG_HISAX_HFCS
  This enables HiSax support for the HFC-S 2BDS0 based cards, like
  teles 16.3c.

  See <file:Documentation/isdn/README.HiSax> on how to configure it
  using the different cards, a different D-channel protocol, or
  non-standard IRQ/port settings.

CONFIG_HISAX_SEDLBAUER
  This enables HiSax support for the Sedlbauer passive ISDN cards.

  See <file:Documentation/isdn/README.HiSax> on how to configure it
  using the different cards, a different D-channel protocol, or
  non-standard IRQ/port settings.

CONFIG_HISAX_SPORTSTER
  This enables HiSax support for the USR Sportster internal TA card.

  See <file:Documentation/isdn/README.HiSax> on how to configure it
  using a different D-channel protocol, or non-standard IRQ/port
  settings.

CONFIG_HISAX_MIC
  This enables HiSax support for the ITH MIC card.

  See <file:Documentation/isdn/README.HiSax> on how to configure it
  using a different D-channel protocol, or non-standard IRQ/port
  settings.

CONFIG_HISAX_NETJET
  This enables HiSax support for the NetJet from Traverse
  Technologies.

  See <file:Documentation/isdn/README.HiSax> on how to configure it
  using a different D-channel protocol, or non-standard IRQ/port
  settings.

CONFIG_HISAX_NETJET_U
  This enables HiSax support for the Netspider U interface ISDN card
  from Traverse Technologies.
  See <file:Documentation/isdn/README.HiSax> on how to configure it
  using a different D-channel protocol, or non-standard IRQ/port
  settings.

CONFIG_HISAX_NICCY
  This enables HiSax support for the Dr. Neuhaus Niccy PnP or PCI.

  See <file:Documentation/isdn/README.HiSax> on how to configure it
  using a different D-channel protocol, or non-standard IRQ/port
  settings.

CONFIG_HISAX_ISURF
  This enables HiSax support for the Siemens I-Talk/I-Surf card with
  ISAR chip.
  See <file:Documentation/isdn/README.HiSax> on how to configure it
  using a different D-channel protocol, or non-standard IRQ/port
  settings.

CONFIG_HISAX_HSTSAPHIR
  This enables HiSax support for the HST Saphir card.

  See <file:Documentation/isdn/README.HiSax> on how to configure it
  using a different D-channel protocol, or non-standard IRQ/port
  settings.

CONFIG_HISAX_BKM_A4T
  This enables HiSax support for the Telekom A4T card.

  See <file:Documentation/isdn/README.HiSax> on how to configure it
  using a different D-channel protocol, or non-standard IRQ/port
  settings.

CONFIG_HISAX_SCT_QUADRO
  This enables HiSax support for the Scitel Quadro card.

  See <file:Documentation/isdn/README.HiSax> on how to configure it
  using a different D-channel protocol, or non-standard IRQ/port
  settings.

CONFIG_HISAX_GAZEL
  This enables HiSax support for the Gazel cards.

  See <file:Documentation/isdn/README.HiSax> on how to configure it
  using a different D-channel protocol, or non-standard IRQ/port
  settings.

CONFIG_HISAX_HFC_PCI
  This enables HiSax support for the HFC-S PCI 2BDS0 based cards.

  For more informations see under
  <file:Documentation/isdn/README.hfc-pci>.

CONFIG_HISAX_W6692
  This enables HiSax support for Winbond W6692 based PCI ISDN cards.

  See <file:Documentation/isdn/README.HiSax> on how to configure it
  using a different D-channel protocol, or non-standard IRQ/port
  settings.

CONFIG_HISAX_HFC_SX
  This enables HiSax support for the HFC-S+, HFC-SP and HFC-PCMCIA
  cards. This code is not finished yet.

CONFIG_HISAX_AMD7930
  This enables HiSax support for the AMD7930 chips on some SPARCs.
  This code is not finished yet.

CONFIG_HISAX_DEBUG
  This enables debugging code in the new-style HiSax drivers, i.e.
  the ST5481 USB driver currently. 
  If in doubt, say yes.

CONFIG_HISAX_ELSA_CS
  This enables the PCMCIA client driver for the Elsa PCMCIA MicroLink
  card.

CONFIG_HISAX_SEDLBAUER_CS
  This enables the PCMCIA client driver for the Sedlbauer Speed Star
  and Speed Star II cards.

CONFIG_HISAX_ST5481
  This enables the driver for ST5481 based USB ISDN adapters,
  e.g. the BeWan Gazel 128 USB

CONFIG_HISAX_FRITZ_PCIPNP
  This enables the driver for the AVM Fritz!Card PCI, Fritz!Card PCI v2 
  and Fritz!Card PnP.
  (the latter also needs you to select "ISA Plug and Play support"
  from the menu "Plug and Play configuration")

CONFIG_HISAX_FRITZ_CLASSIC
  This enables the driver for the AVM Fritz!Card classic, formerly
  known as AVM A1.

CONFIG_ISDN_DRV_PCBIT
  This enables support for the PCBIT ISDN-card.  This card is
  manufactured in Portugal by Octal.  For running this card,
  additional firmware is necessary, which has to be downloaded into
  the card using a utility which is distributed separately.  See
  <file:Documentation/isdn/README> and
  <file:Documentation/isdn/README.pcbit> for more information.

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read <file:Documentation/modules.txt>.  The module
  will be called pcbit.o.

CONFIG_ISDN_DRV_SC
  This enables support for the Spellcaster BRI ISDN boards.  This
  driver currently builds only in a modularized version ( = code which
  can be inserted in and removed from the running kernel whenever you
  want, details in <file:Documentation/modules.txt>); the module will
  be called sc.o.  See <file:Documentation/isdn/README.sc> and
  <http://www.spellcast.com/> for more information.

CONFIG_ISDN_DRV_EICON
  Say Y here if you have an Eicon active ISDN card. In order to use
  this card, additional firmware is necessary, which has to be loaded
  into the card using the eiconctrl utility which is part of the
  latest isdn4k-utils package. Please read the file
  <file:Documentation/isdn/README.eicon> for more information.

CONFIG_ISDN_DRV_EICON_OLD
  Say Y here to use your Eicon active ISDN card with ISDN4Linux
  isdn module.

CONFIG_ISDN_DRV_EICON_PCI
  Say Y here if you have an Eicon Diva Server (BRI/PRI/4BRI) ISDN
  card.  Please read <file:Documentation/isdn/README.eicon> for more
  information.

CONFIG_ISDN_DRV_EICON_ISA
  Say Y here if you have an old-type Eicon active ISDN card. In order
  to use this card, additional firmware is necessary, which has to be
  loaded into the card using the eiconctrl utility which is part of
  the latest isdn4k-utils package. Please read the file
  <file:Documentation/isdn/README.eicon> for more information.

CONFIG_ISDN_DRV_EICON_DIVAS
  Enable this option if you want the eicon driver as standalone
  version with no interface to the ISDN4Linux isdn module. If you
  say Y here, the eicon module only supports the Diva Server PCI
  cards and will provide its own IDI interface. You should say N
  here.

CONFIG_ISDN_TTY_FAX
  If you say Y here, the modem-emulator will support a subset of the
  Fax Class 1 and 2 commands. Using a getty with fax-support
  (mgetty+sendfax, hylafax), you will be able to use your Linux box as
  an ISDN-fax-machine. This must be supported by the lowlevel driver
  also. See <file:Documentation/isdn/README.fax> for more information.

CONFIG_ISDN_CAPI
  This provides the CAPI (Common ISDN Application Programming
  Interface, a standard making it easy for programs to access ISDN
  hardware, see <http://www.capi.org/>.  This is needed for AVM's set
  of active ISDN controllers like B1, T1, M1.

  This code is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The modules will be called capi.o and kernelcapi.o. If you want to
  compile it as a module, say M here and read
  <file:Documentation/modules.txt>.

CONFIG_ISDN_CAPI_CAPI20
  This option will provide the CAPI 2.0 interface to userspace
  applications via /dev/capi20. Applications should use the
  standardized libcapi20 to access this functionality.  You should say
  Y/M here.

CONFIG_ISDN_CAPI_MIDDLEWARE
  This option will enhance the capabilities of the /dev/capi20
  interface.  It will provide a means of moving a data connection,
  established via the usual /dev/capi20 interface to a special tty
  device.  If you want to use pppd with pppdcapiplugin to dial up to
  your ISP, say Y here.

CONFIG_ISDN_CAPI_CAPIFS
  This option provides a special file system, similar to /dev/pts with
  device nodes for the special ttys established by using the
  middleware extension above. If you want to use pppd with
  pppdcapiplugin to dial up to your ISP, say Y here.

CONFIG_ISDN_CAPI_CAPIDRV
  This option provides the glue code to hook up CAPI driven cards to
  the legacy isdn4linux link layer.  If you have a card which is
  supported by a CAPI driver, but still want to use old features like
  ippp interfaces or ttyI emulation, say Y/M here.

CONFIG_ISDN_DRV_AVMB1_B1ISA
  Enable support for the ISA version of the AVM B1 card.

CONFIG_ISDN_DRV_AVMB1_B1PCI
  Enable support for the PCI version of the AVM B1 card.

CONFIG_ISDN_DRV_AVMB1_B1PCIV4
  Enable support for the V4 version of AVM B1 PCI card.

CONFIG_ISDN_DRV_AVMB1_T1ISA
  Enable support for the AVM T1 T1B card.
  Note: This is a PRI card and handle 30 B-channels.

CONFIG_ISDN_DRV_AVMB1_B1PCMCIA
  Enable support for the PCMCIA version of the AVM B1 card.

CONFIG_ISDN_DRV_AVMB1_AVM_CS
  Enable the PCMCIA client driver for the AVM B1/M1/M2
  PCMCIA cards.

CONFIG_ISDN_DRV_AVMB1_T1PCI
  Enable support for the AVM T1 T1B card.
  Note: This is a PRI card and handle 30 B-channels.

CONFIG_ISDN_DRV_AVMB1_C4
  Enable support for the AVM C4/C2 PCI cards.
  These cards handle 4/2 BRI ISDN lines (8/4 channels).

CONFIG_ISDN_DRV_AVMB1_VERBOSE_REASON
  If you say Y here, the AVM B1 driver will give verbose reasons for
  disconnecting. This will increase the size of the kernel by 7 KB. If
  unsure, say Y.

CONFIG_ISDN_DRV_ACT2000
  Say Y here if you have an IBM Active 2000 ISDN card. In order to use
  this card, additional firmware is necessary, which has to be loaded
  into the card using a utility which is part of the latest
  isdn4k-utils package. Please read the file
  <file:Documentation/isdn/README.act2000> for more information.

CONFIG_ISDN_DRV_TPAM
  This enables support for the Auvertech TurboPAM ISDN-card.
  For running this card, additional firmware is necessary, which has
  to be downloaded into the card using a utility which is distributed
  separately from the Auvertech's web site: <http://www.auvertech.fr/>.

  Please redirect all support questions to support@auvertech.fr.

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read <file:Documentation/modules.txt>.  The module
  will be called tpam.o.

CONFIG_HYSDN
  Say Y here if you have one of Hypercope's active PCI ISDN cards
  Champ, Ergo and Metro. You will then get a module called hysdn.o.
  Please read the file <file:Documentation/isdn/README.hysdn> for more
  information.

CONFIG_HYSDN_CAPI
  Say Y here if you like to use Hypercope's CAPI 2.0 interface.

