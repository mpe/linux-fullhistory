# $Id: config.in,v 1.36 1997/12/29 21:36:52 geert Exp $
# For a description of the syntax of this configuration file,
# see the Configure script.
#
mainmenu_name "Linux/PowerPC Kernel Configuration"

mainmenu_option next_comment
comment 'Platform support'
define_bool CONFIG_PPC y
if [ "`uname`" != "Linux" -o "`uname -m`" != "ppc" ]; then
  define_bool CONFIG_CROSSCOMPILE y
else
  define_bool CONFIG_NATIVE y
fi

define_bool CONFIG_MACH_SPECIFIC y
bool 'Build PowerMac Kernel (not PReP or CHRP)?' CONFIG_PMAC
bool 'Build PReP Kernel (not PowerMac or CHRP)?' CONFIG_PREP
bool 'Build CHRP Kernel (not PReP or PowerMac)?' CONFIG_CHRP

choice 'Processor type' \
	"Common		CONFIG_COMMON \
	 601		CONFIG_601	\
	 603		CONFIG_603	\
	 604		CONFIG_604" Common
endmenu

mainmenu_option next_comment
comment 'General setup'

bool 'Prompt for development and/or incomplete code/drivers' CONFIG_EXPERIMENTAL
bool 'Enable loadable module support' CONFIG_MODULES
if [ "$CONFIG_MODULES" = "y" ]; then
  bool 'Set version information on all symbols for modules' CONFIG_MODVERSIONS
  bool 'Kernel daemon support (e.g. autoload of modules)' CONFIG_KERNELD
fi

define_bool CONFIG_PCI y
if [ "$CONFIG_PREP" = "y" ]; then
  bool 'PCI bridge optimization' CONFIG_PCI_OPTIMIZE
fi
bool 'Backward-compatible /proc/pci' CONFIG_PCI_OLD_PROC
bool 'Networking support' CONFIG_NET
bool 'Sysctl support' CONFIG_SYSCTL
bool 'System V IPC' CONFIG_SYSVIPC
bool 'BSD Process Accounting' CONFIG_BSD_PROCESS_ACCT

# only elf supported, a.out is not -- Cort
define_bool CONFIG_BINFMT_ELF y
define_bool CONFIG_KERNEL_ELF y
tristate 'Kernel support for MISC binaries' CONFIG_BINFMT_MISC
tristate 'Kernel support for JAVA binaries (obsolete)' CONFIG_BINFMT_JAVA

if [ "$CONFIG_EXPERIMENTAL" = "y" ]; then
  bool 'New unified console driver (EXPERIMENTAL)' CONFIG_ABSTRACT_CONSOLE
fi

if [ "$CONFIG_PMAC" = "y" ]; then
  if [ "$CONFIG_ABSTRACT_CONSOLE" = "y" ]; then
    define_bool CONFIG_FB y
    bool 'Backward compatibility mode for Xpmac' CONFIG_FB_COMPAT_XPMAC
  else
    define_bool CONFIG_PMAC_CONSOLE y
  fi
  define_bool CONFIG_MAC_KEYBOARD y
  define_bool CONFIG_MAC_FLOPPY	y
else
# if compiling specifically for prep or chrp, or supporting all arch's
  if [ "$CONFIG_ABSTRACT_CONSOLE" = "y" ]; then
    bool 'Support for frame buffer devices' CONFIG_FB
    bool 'Backward compatibility mode for Xpmac' CONFIG_FB_COMPAT_XPMAC
  else
    bool 'Support for PowerMac console' CONFIG_PMAC_CONSOLE
  fi
  bool 'Support for PowerMac keyboard' CONFIG_MAC_KEYBOARD
  bool 'Support for PowerMac floppy' CONFIG_MAC_FLOPPY
fi
if [ "$CONFIG_EXPERIMENTAL" = "y" ]; then
  bool 'Support for PowerMac mouse (EXPERIMENTAL)' CONFIG_MACMOUSE
fi
bool 'Support for Open Firmware device tree in /proc' CONFIG_PROC_DEVICETREE
bool 'Include xmon kernel debugger' CONFIG_XMON

if [ "$CONFIG_ABSTRACT_CONSOLE" = "y" ]; then
  if [ "$CONFIG_FB" != "y" ]; then
    define_bool CONFIG_VGA_CONSOLE y
  fi
else
  if [ "$CONFIG_PMAC_CONSOLE" = "y" ]; then
    bool 'Support for Apple "control" display' CONFIG_CONTROL_VIDEO
    bool 'Support for Apple "platinum" display' CONFIG_PLATINUM_VIDEO
    bool 'Support for Apple "valkyrie" display' CONFIG_VALKYRIE_VIDEO
    bool 'Support for ATI Mach64 display cards' CONFIG_ATY_VIDEO
    bool 'Support for IMS Twin Turbo display card' CONFIG_IMSTT_VIDEO
    bool 'Support for Chips 65550 display' CONFIG_CHIPS_VIDEO
  else
    define_bool CONFIG_VGA_CONSOLE y
  fi
fi

endmenu

source drivers/pnp/Config.in
source drivers/block/Config.in
source drivers.new/Config.in

if [ "$CONFIG_NET" = "y" ]; then
  source net/Config.in
fi

mainmenu_option next_comment
comment 'SCSI support'

tristate 'SCSI support' CONFIG_SCSI

if [ "$CONFIG_SCSI" != "n" ]; then
  source drivers/scsi/Config.in
fi
endmenu

if [ "$CONFIG_NET" = "y" ]; then
  mainmenu_option next_comment
  comment 'Network device support'

  bool 'Network device support' CONFIG_NETDEVICES
  if [ "$CONFIG_NETDEVICES" = "y" ]; then
    source drivers/net/Config.in
  fi
  endmenu
fi

source drivers/net/hamradio/Config.in

mainmenu_option next_comment
comment 'ISDN subsystem'

tristate 'ISDN support' CONFIG_ISDN
if [ "$CONFIG_ISDN" != "n" ]; then
  source drivers/isdn/Config.in
fi
endmenu

mainmenu_option next_comment
comment 'CD-ROM drivers (not for SCSI or IDE/ATAPI drives)'

bool 'Support non-SCSI/IDE/ATAPI CDROM drives' CONFIG_CD_NO_IDESCSI
if [ "$CONFIG_CD_NO_IDESCSI" != "n" ]; then
  source drivers/cdrom/Config.in
fi
endmenu

# Conditionally compile in the Uniform CD-ROM driver
if [ "$CONFIG_BLK_DEV_SR" = "y" -o "$CONFIG_SBPCD" = "y" -o "$CONFIG_MCD" = "y" -o "$CONFIG_CM206" = "y" -o "$CONFIG_CDU31A" = "y" ]; then
  define_bool CONFIG_CDROM y
else
  if [ "$CONFIG_BLK_DEV_SR" = "m" -o "$CONFIG_SBPCD" = "m" -o "$CONFIG_MCD" = "m" -o "$CONFIG_CM206" = "m" -o "$CONFIG_CDU31A" = "m" ]; then
    define_bool CONFIG_CDROM m
  else
    define_bool CONFIG_CDROM n
  fi
fi

source fs/Config.in

source fs/nls/Config.in

if [ "$CONFIG_ABSTRACT_CONSOLE" = "y" ]; then
  source drivers/video/Config.in
fi

source drivers/char/Config.in

mainmenu_option next_comment
comment 'Sound'

tristate 'Sound card support' CONFIG_SOUND
if [ "$CONFIG_SOUND" != "n" ]; then
  source drivers/sound/Config.in
fi
endmenu
