#
# For a description of the syntax of this configuration file,
# see Documentation/kbuild/kconfig-language.txt.
#

mainmenu "IA-64 Linux Kernel Configuration"

source "init/Kconfig"

menu "Processor type and features"

config IA64
	bool
	default y
	help
	  The Itanium Processor Family is Intel's 64-bit successor to
	  the 32-bit X86 line.  The IA-64 Linux project has a home
	  page at <http://www.linuxia64.org/> and a mailing list at
	  linux-ia64@linuxia64.org.

config MMU
	bool
	default y

config RWSEM_XCHGADD_ALGORITHM
	bool
	default y

config TIME_INTERPOLATION
	bool
	default y

choice
	prompt "IA-64 processor type"
	default ITANIUM

config ITANIUM
	bool "Itanium"
	help
	  Select your IA-64 processor type.  The default is Intel Itanium.
	  This choice is safe for all IA-64 systems, but may not perform
	  optimally on systems with, say, Itanium 2 or newer processors.

config MCKINLEY
	bool "Itanium 2"
	help
	  Select this to configure for an Itanium 2 (McKinley) processor.

endchoice

choice
	prompt "IA-64 system type"
	default IA64_GENERIC

config IA64_GENERIC
	bool "generic"
	---help---
	  This selects the system type of your hardware.  A "generic" kernel
	  will run on any supported IA-64 system.  However, if you configure
	  a kernel for your specific system, it will be faster and smaller.

	  To find out what type of IA-64 system you have, you may want to
	  check the IA-64 Linux web site at <http://www.linux-ia64.org/>.
	  As of the time of this writing, most hardware is DIG compliant,
	  so the "DIG-compliant" option is usually the right choice.

	  HP-simulator   For the HP simulator
	  (<http://software.hp.com/ia64linux/>).
	  HP-zx1         For HP zx1-based systems.
	  SGI-SN2	 For SGI Altix systems
	  DIG-compliant  For DIG ("Developer's Interface Guide") compliant
	  systems.

	  If you don't know what to do, choose "generic".

config IA64_DIG
	bool "DIG-compliant"

config IA64_HP_SIM
	bool "HP-simulator"

config IA64_HP_ZX1
	bool "HP-zx1"
	help
	  Build a kernel that runs on HP zx1-based systems.  This adds support
	  for the zx1 I/O MMU and makes root bus bridges appear in PCI config
	  space (required for zx1 agpgart support).

config IA64_SGI_SN2
	bool "SGI-SN2"

endchoice

choice
	prompt "Kernel page size"
	default IA64_PAGE_SIZE_16KB

config IA64_PAGE_SIZE_4KB
	bool "4KB"
	---help---
	  This lets you select the page size of the kernel.  For best IA-64
	  performance, a page size of 8KB or 16KB is recommended.  For best
	  IA-32 compatibility, a page size of 4KB should be selected (the vast
	  majority of IA-32 binaries work perfectly fine with a larger page
	  size).  For Itanium 2 or newer systems, a page size of 64KB can also
	  be selected.

	  4KB                For best IA-32 compatibility
	  8KB                For best IA-64 performance
	  16KB               For best IA-64 performance
	  64KB               Requires Itanium 2 or newer processor.

	  If you don't know what to do, choose 16KB.

config IA64_PAGE_SIZE_8KB
	bool "8KB"

config IA64_PAGE_SIZE_16KB
	bool "16KB"

config IA64_PAGE_SIZE_64KB
	depends on !ITANIUM
	bool "64KB"

endchoice

config ACPI
	bool
	depends on !IA64_HP_SIM
	default y
	---help---
	  ACPI/OSPM support for Linux is currently under development. As such,
	  this support is preliminary and EXPERIMENTAL.  Configuring ACPI
	  support enables kernel interfaces that allow higher level software
	  (OSPM) to manipulate ACPI defined hardware and software interfaces,
	  including the evaluation of ACPI control methods.  If unsure, choose
	  N here.  Note, this option will enlarge your kernel by about 120K.

	  This support requires an ACPI compliant platform (hardware/firmware).
	  If both ACPI and Advanced Power Management (APM) support are
	  configured, whichever is loaded first shall be used.

	  This code DOES NOT currently provide a complete OSPM implementation
	  -- it has not yet reached APM's level of functionality.  When fully
	  implemented, Linux ACPI/OSPM will provide a more robust functional
	  replacement for legacy configuration and power management
	  interfaces, including the Plug-and-Play BIOS specification (PnP
	  BIOS), the Multi-Processor Specification (MPS), and the Advanced
	  Power Management specification (APM).

	  Linux support for ACPI/OSPM is based on Intel Corporation's ACPI
	  Component Architecture (ACPI CA). The latest ACPI CA source code,
	  documentation, debug builds, and implementation status information
	  can be downloaded from:
	  <http://developer.intel.com/technology/iapc/acpi/downloads.htm>.

	  The ACPI Sourceforge project may also be of interest:
	  <http://sf.net/projects/acpi/>

config ACPI_EFI
	bool
	depends on !IA64_HP_SIM
	default y

config ACPI_INTERPRETER
	bool
	depends on !IA64_HP_SIM
	default y

config ACPI_KERNEL_CONFIG
	bool
	depends on !IA64_HP_SIM
	default y
	help
	  If you say `Y' here, Linux's ACPI support will use the
	  hardware-level system descriptions found on IA-64 systems.

config IA64_BRL_EMU
	bool
	depends on ITANIUM
	default y

config ITANIUM_BSTEP_SPECIFIC
	bool "Enable Itanium B-step specific code"
	depends on ITANIUM
	help
	  Select this option to build a kernel for an Itanium prototype system
	  with a B-step CPU.  You have a B-step CPU if the "revision" field in
	  /proc/cpuinfo has a value in the range from 1 to 4.

# align cache-sensitive data to 128 bytes
config IA64_L1_CACHE_SHIFT
	int
	default "7" if MCKINLEY
	default "6" if ITANIUM

# align cache-sensitive data to 64 bytes
config MCKINLEY_ASTEP_SPECIFIC
	bool "Enable McKinley A-step specific code"
	depends on MCKINLEY
	help
	  Select this option to build a kernel for an IA-64 McKinley prototype
	  system with any A-stepping CPU.

config MCKINLEY_A0_SPECIFIC
	bool "Enable McKinley A0/A1-step specific code"
	depends on MCKINLEY_ASTEP_SPECIFIC
	help
	  Select this option to build a kernel for an IA-64 McKinley prototype
	  system with an A0 or A1 stepping CPU.

config NUMA
	bool "Enable NUMA support" if IA64_GENERIC || IA64_DIG || IA64_HP_ZX1
	default y if IA64_SGI_SN2
	help
	  Say Y to compile the kernel to support NUMA (Non-Uniform Memory
	  Access).  This option is for configuring high-end multiprocessor
	  server systems.  If in doubt, say N.

choice
	prompt "Maximum Memory per NUMA Node" if NUMA && IA64_DIG
	depends on NUMA && IA64_DIG
	default IA64_NODESIZE_16GB

config IA64_NODESIZE_16GB
	bool "16GB"

config IA64_NODESIZE_64GB
	bool "64GB"

config IA64_NODESIZE_256GB
	bool "256GB"

endchoice

config DISCONTIGMEM
	bool
	depends on IA64_SGI_SN2 || (IA64_GENERIC || IA64_DIG || IA64_HP_ZX1) && NUMA
	default y
	help
	  Say Y to support efficient handling of discontiguous physical memory,
	  for architectures which are either NUMA (Non-Uniform Memory Access)
	  or have huge holes in the physical address space for other reasons.
	  See <file:Documentation/vm/numa> for more.

config VIRTUAL_MEM_MAP
	bool "Enable Virtual Mem Map"
	depends on !NUMA
	default y if IA64_GENERIC || IA64_DIG || IA64_HP_ZX1
	help
	  Say Y to compile the kernel with support for a virtual mem map.
	  This is an alternate method of supporting large holes in the
	  physical address space on non NUMA machines. Since the DISCONTIGMEM
	  option is not supported on machines with the ZX1 chipset, this is
	  the only way of supporting more than 1 Gb of memory on those
	  machines. This code also only takes effect if a memory hole of
	  greater than 1 Gb is found during boot, so it is safe to enable
	  unless you require the DISCONTIGMEM option for your machine. If you
	  are unsure, say Y.

config IA64_MCA
	bool "Enable IA-64 Machine Check Abort" if IA64_GENERIC || IA64_DIG || IA64_HP_ZX1
	default y if IA64_SGI_SN2
	help
	  Say Y here to enable machine check support for IA-64.  If you're
	  unsure, answer Y.

config PM
	bool
	depends on IA64_GENERIC || IA64_DIG || IA64_HP_ZX1
	default y
	---help---
	  "Power Management" means that parts of your computer are shut
	  off or put into a power conserving "sleep" mode if they are not
	  being used.  There are two competing standards for doing this: APM
	  and ACPI.  If you want to use either one, say Y here and then also
	  to the requisite support below.

	  Power Management is most important for battery powered laptop
	  computers; if you have a laptop, check out the Linux Laptop home
	  page on the WWW at
	  <http://www.cs.utexas.edu/users/kharker/linux-laptop/> and the
	  Battery Powered Linux mini-HOWTO, available from
	  <http://www.tldp.org/docs.html#howto>.

	  Note that, even if you say N here, Linux on the x86 architecture
	  will issue the hlt instruction if nothing is to be done, thereby
	  sending the processor to sleep and saving power.

config IOSAPIC
	bool
	depends on IA64_GENERIC || IA64_DIG || IA64_HP_ZX1 || IA64_SGI_SN2
	default y

config IA64_SGI_SN_DEBUG
	bool "Enable extra debugging code"
	depends on IA64_SGI_SN2
	help
	  Turns on extra debugging code in the SGI SN (Scalable NUMA) platform
	  for IA-64.  Unless you are debugging problems on an SGI SN IA-64 box,
	  say N.

config IA64_SGI_SN_SIM
	bool "Enable SGI Medusa Simulator Support"
	depends on IA64_SGI_SN2
	help
	  If you are compiling a kernel that will run under SGI's IA-64
	  simulator (Medusa) then say Y, otherwise say N.

config IA64_SGI_AUTOTEST
	bool "Enable autotest (llsc). Option to run cache test instead of booting"
	depends on IA64_SGI_SN2
	help
	  Build a kernel used for hardware validation. If you include the
	  keyword "autotest" on the boot command line, the kernel does NOT boot.
	  Instead, it starts all cpus and runs cache coherency tests instead.

	  If unsure, say N.

config SERIAL_SGI_L1_PROTOCOL
	bool "Enable protocol mode for the L1 console"
	depends on IA64_SGI_SN2
	help
	  Uses protocol mode instead of raw mode for the level 1 console on the
	  SGI SN (Scalable NUMA) platform for IA-64.  If you are compiling for
	  an SGI SN box then Y is the recommended value, otherwise say N.

config PERCPU_IRQ
	bool
	depends on IA64_SGI_SN2
	default y

# On IA-64, we always want an ELF /proc/kcore.
config KCORE_ELF
	bool
	default y
	---help---
	  If you enabled support for /proc file system then the file
	  /proc/kcore will contain the kernel core image. This can be used
	  in gdb:

	  $ cd /usr/src/linux ; gdb vmlinux /proc/kcore

	  You have two choices here: ELF and A.OUT. Selecting ELF will make
	  /proc/kcore appear in ELF core format as defined by the Executable
	  and Linking Format specification. Selecting A.OUT will choose the
	  old "a.out" format which may be necessary for some old versions
	  of binutils or on some architectures.

	  This is especially useful if you have compiled the kernel with the
	  "-g" option to preserve debugging information. It is mainly used
	  for examining kernel data structures on the live kernel so if you
	  don't understand what this means or are not a kernel hacker, just
	  leave it at its default value ELF.

config FORCE_MAX_ZONEORDER
	int
	default "18"

config HUGETLB_PAGE
	bool "IA-64 Huge TLB Page Support"

choice
	prompt "IA-64 Huge TLB Page Size"
	depends on HUGETLB_PAGE
	default HUGETLB_PAGE_SIZE_16MB

config HUGETLB_PAGE_SIZE_4GB
	depends on MCKINLEY
	bool "4GB"

config HUGETLB_PAGE_SIZE_1GB
	depends on MCKINLEY
	bool "1GB"

config HUGETLB_PAGE_SIZE_256MB
	bool "256MB"

config HUGETLB_PAGE_SIZE_64MB
	bool "64MB"

config HUGETLB_PAGE_SIZE_16MB
	bool "16MB"

config HUGETLB_PAGE_SIZE_4MB
	bool "4MB"

config HUGETLB_PAGE_SIZE_1MB
	bool "1MB"

config HUGETLB_PAGE_SIZE_256KB
	bool "256KB"

endchoice

config IA64_PAL_IDLE
	bool "Use PAL_HALT_LIGHT in idle loop"
	---help---
	  Say Y here to enable use of PAL_HALT_LIGHT in the cpu_idle loop.
	  This allows the CPU to enter a low power state when idle.  You
	  can enable CONFIG_IA64_PALINFO and check /proc/pal/cpu0/power_info
	  to see the power consumption and latency for this state.  If you're
	  unsure your firmware supports it, answer N.

config SMP
	bool "SMP support"
	---help---
	  This enables support for systems with more than one CPU. If you have
	  a system with only one CPU say N. If you have a system with more than
	  one CPU, say Y.

	  If you say N here, the kernel will run on single and multiprocessor
	  systems, but will use only one CPU of a multiprocessor system. If
	  you say Y here, the kernel will run on many, but not all,
	  singleprocessor system. On a singleprocessor system, the kernel
	  will run faster if you say N here.

	  See also the <file:Documentation/smp.tex>,
	  <file:Documentation/smp.txt>, and the SMP-HOWTO available at
	  <http://www.tldp.org/docs.html#howto>.

	  If you don't know what to do here, say N.

config PREEMPT
	bool "Preemptible Kernel"
        help
          This option reduces the latency of the kernel when reacting to
          real-time or interactive events by allowing a low priority process to
          be preempted even if it is in kernel mode executing a system call.
          This allows applications to run more reliably even when the system is
          under load.

          Say Y here if you are building a kernel for a desktop, embedded
          or real-time system.  Say N if you are unsure.

config IA32_SUPPORT
	bool "Support running of Linux/x86 binaries"
	help
	  IA-64 processors can execute IA-32 (X86) instructions.  By
	  saying Y here, the kernel will include IA-32 system call
	  emulation support which makes it possible to transparently
	  run IA-32 Linux binaries on an IA-64 Linux system.
	  If in doubt, say Y.

config COMPAT
	bool
	depends on IA32_SUPPORT
	default y

config PERFMON
	bool "Performance monitor support"
	help
	  Selects whether support for the IA-64 performance monitor hardware
	  is included in the kernel.  This makes some kernel data-structures a
	  little bigger and slows down execution a bit, but it is generally
	  a good idea to turn this on.  If you're unsure, say Y.

config IA64_PALINFO
	tristate "/proc/pal support"
	help
	  If you say Y here, you are able to get PAL (Processor Abstraction
	  Layer) information in /proc/pal.  This contains useful information
	  about the processors in your systems, such as cache and TLB sizes
	  and the PAL firmware version in use.

	  To use this option, you have to ensure that the "/proc file system
	  support" (CONFIG_PROC_FS) is enabled, too.

config EFI_VARS
	tristate "/proc/efi/vars support"
	help
	  If you say Y here, you are able to get EFI (Extensible Firmware
	  Interface) variable information in /proc/efi/vars.  You may read,
	  write, create, and destroy EFI variables through this interface.

	  To use this option, you have to check that the "/proc file system
	  support" (CONFIG_PROC_FS) is enabled, too.

config NR_CPUS
	int "Maximum number of CPUs (2-64)"
	depends on SMP
	default "64"

source "fs/Kconfig.binfmt"

if !IA64_HP_SIM

source "drivers/acpi/Kconfig"

config PCI
	bool "PCI support"
	help
	  Find out whether you have a PCI motherboard. PCI is the name of a
	  bus system, i.e. the way the CPU talks to the other stuff inside
	  your box. Other bus systems are ISA, EISA, MicroChannel (MCA) or
	  VESA. If you have PCI, say Y, otherwise N.

	  The PCI-HOWTO, available from
	  <http://www.tldp.org/docs.html#howto>, contains valuable
	  information about which PCI hardware does work under Linux and which
	  doesn't.

config PCI_DOMAINS
	bool
	default PCI

source "drivers/pci/Kconfig"

config HOTPLUG
	bool "Support for hot-pluggable devices"
	---help---
	  Say Y here if you want to plug devices into your computer while
	  the system is running, and be able to use them quickly.  In many
	  cases, the devices can likewise be unplugged at any time too.

	  One well known example of this is PCMCIA- or PC-cards, credit-card
	  size devices such as network cards, modems or hard drives which are
	  plugged into slots found on all modern laptop computers.  Another
	  example, used on modern desktops as well as laptops, is USB.

	  Enable HOTPLUG and KMOD, and build a modular kernel.  Get agent
	  software (at <http://linux-hotplug.sourceforge.net/>) and install it.
	  Then your kernel will automatically call out to a user mode "policy
	  agent" (/sbin/hotplug) to load modules and set up software needed
	  to use devices as you hotplug them.

source "drivers/pci/hotplug/Kconfig"

source "drivers/pcmcia/Kconfig"

source "drivers/parport/Kconfig"

endif

endmenu

source "drivers/base/Kconfig"

if !IA64_HP_SIM

source "drivers/mtd/Kconfig"

source "drivers/pnp/Kconfig"

source "drivers/block/Kconfig"

source "drivers/ide/Kconfig"

source "drivers/ieee1394/Kconfig"

source "drivers/message/i2o/Kconfig"

source "drivers/md/Kconfig"

source "drivers/message/fusion/Kconfig"

endif


source "drivers/scsi/Kconfig"

source "net/Kconfig"


if !IA64_HP_SIM

source "net/ax25/Kconfig"

source "drivers/isdn/Kconfig"

source "drivers/cdrom/Kconfig"

#
# input before char - char/joystick depends on it. As does USB.
#
source "drivers/input/Kconfig"

source "drivers/char/Kconfig"

#source drivers/misc/Config.in
source "drivers/media/Kconfig"

endif


menu "Block devices"
	depends on IA64_HP_SIM

config BLK_DEV_LOOP
	tristate "Loopback device support"

config BLK_DEV_NBD
	tristate "Network block device support"
	depends on NET

config BLK_DEV_RAM
	tristate "RAM disk support"

config BLK_DEV_RAM_SIZE
	int "Default RAM disk size"
	depends on BLK_DEV_RAM
	default "4096"

endmenu

source "fs/Kconfig"

if !IA64_HP_SIM

source "drivers/video/Kconfig"

menu "Sound"

config SOUND
	tristate "Sound card support"
	---help---
	  If you have a sound card in your computer, i.e. if it can say more
	  than an occasional beep, say Y.  Be sure to have all the information
	  about your sound card and its configuration down (I/O port,
	  interrupt and DMA channel), because you will be asked for it.

	  You want to read the Sound-HOWTO, available from
	  <http://www.tldp.org/docs.html#howto>. General information about
	  the modular sound system is contained in the files
	  <file:Documentation/sound/Introduction>.  The file
	  <file:Documentation/sound/README.OSS> contains some slightly
	  outdated but still useful information as well.

source "sound/Kconfig"

endmenu

source "drivers/usb/Kconfig"


source "net/bluetooth/Kconfig"

endif

source "lib/Kconfig"

source "arch/ia64/hp/sim/Kconfig"


menu "Kernel hacking"

choice
	prompt "Physical memory granularity"
	default IA64_GRANULE_64MB

config IA64_GRANULE_16MB
	bool "16MB"
	help
	  IA-64 identity-mapped regions use a large page size called "granules".

	  Select "16MB" for a small granule size.
	  Select "64MB" for a large granule size.  This is the current default.

config IA64_GRANULE_64MB
	bool "64MB"

endchoice

config DEBUG_KERNEL
	bool "Kernel debugging"
	help
	  Say Y here if you are developing drivers or trying to debug and
	  identify kernel problems.

config KALLSYMS
	bool "Load all symbols for debugging/kksymoops"
	depends on DEBUG_KERNEL
	help
	  Say Y here to let the kernel print out symbolic crash information and
	  symbolic stack backtraces. This increases the size of the kernel
	  somewhat, as all symbols have to be loaded into the kernel image.

config IA64_PRINT_HAZARDS
	bool "Print possible IA-64 dependency violations to console"
	depends on DEBUG_KERNEL
	help
	  Selecting this option prints more information for Illegal Dependency
	  Faults, that is, for Read-after-Write (RAW), Write-after-Write (WAW),
	  or Write-after-Read (WAR) violations.  This option is ignored if you
	  are compiling for an Itanium A step processor
	  (CONFIG_ITANIUM_ASTEP_SPECIFIC).  If you're unsure, select Y.

config DISABLE_VHPT
	bool "Disable VHPT"
	depends on DEBUG_KERNEL
	help
	  The Virtual Hash Page Table (VHPT) enhances virtual address
	  translation performance.  Normally you want the VHPT active but you
	  can select this option to disable the VHPT for debugging.  If you're
	  unsure, answer N.

config MAGIC_SYSRQ
	bool "Magic SysRq key"
	depends on DEBUG_KERNEL
	help
	  If you say Y here, you will have some control over the system even
	  if the system crashes for example during kernel debugging (e.g., you
	  will be able to flush the buffer cache to disk, reboot the system
	  immediately or dump some status information). This is accomplished
	  by pressing various keys while holding SysRq (Alt+PrintScreen). It
	  also works on a serial console (on PC hardware at least), if you
	  send a BREAK and then within 5 seconds a command keypress. The
	  keys are documented in <file:Documentation/sysrq.txt>. Don't say Y
	  unless you really know what this hack does.

config DEBUG_SLAB
	bool "Debug memory allocations"
	depends on DEBUG_KERNEL
	help
	  Say Y here to have the kernel do limited verification on memory
	  allocation as well as poisoning memory on free to catch use of freed
	  memory.

config DEBUG_SPINLOCK
	bool "Spinlock debugging"
	depends on DEBUG_KERNEL
	help
	  Say Y here and build SMP to catch missing spinlock initialization
	  and certain other kinds of spinlock errors commonly made.  This is
	  best used in conjunction with the NMI watchdog so that spinlock
	  deadlocks are also debuggable.

config DEBUG_SPINLOCK_SLEEP
	  bool "Sleep-inside-spinlock checking"
	  help
	    If you say Y here, various routines which may sleep will become very
	    noisy if they are called with a spinlock held.

config IA64_DEBUG_CMPXCHG
	bool "Turn on compare-and-exchange bug checking (slow!)"
	depends on DEBUG_KERNEL
	help
	  Selecting this option turns on bug checking for the IA-64
	  compare-and-exchange instructions.  This is slow!  Itaniums
	  from step B3 or later don't have this problem. If you're unsure,
	  select N.

config IA64_DEBUG_IRQ
	bool "Turn on irq debug checks (slow!)"
	depends on DEBUG_KERNEL
	help
	  Selecting this option turns on bug checking for the IA-64 irq_save
	  and restore instructions.  It's useful for tracking down spinlock
	  problems, but slow!  If you're unsure, select N.

endmenu

source "security/Kconfig"

source "crypto/Kconfig"
