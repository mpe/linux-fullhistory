menu "Kernel hacking"

source "lib/Kconfig.debug"

config DEBUG_STACK_USAGE
	bool "Enable stack utilization instrumentation"
	depends on DEBUG_KERNEL
	help
	  Enables the display of the minimum amount of free stack which each
	  task has ever had available in the sysrq-T and sysrq-P debug output.

	  This option will slow down process creation somewhat.

config KPROBES
	bool "Kprobes"
	depends on DEBUG_KERNEL
	help
	  Kprobes allows you to trap at almost any kernel address and
	  execute a callback function.  register_kprobe() establishes
	  a probepoint and specifies the callback.  Kprobes is useful
	  for kernel debugging, non-intrusive instrumentation and testing.
	  If in doubt, say "N".

config DEBUG_DCFLUSH
	bool "D-cache flush debugging"
	depends on DEBUG_KERNEL

config STACK_DEBUG
	depends on DEBUG_KERNEL
	bool "Stack Overflow Detection Support"

config DEBUG_BOOTMEM
	depends on DEBUG_KERNEL
	bool "Debug BOOTMEM initialization"

# We have a custom atomic_dec_and_lock() implementation but it's not
# compatible with spinlock debugging so we need to fall back on
# the generic version in that case.
config HAVE_DEC_LOCK
	bool
	depends on SMP && !DEBUG_SPINLOCK
	default y

config MCOUNT
	bool
	depends on STACK_DEBUG
	default y

config FRAME_POINTER
	bool
	depends on MCOUNT
	default y

endmenu
