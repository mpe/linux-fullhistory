#
# For a description of the syntax of this configuration file,
# see the Configure script.
#
mainmenu_name "Linux Kernel Configuration"

define_bool CONFIG_ARM y

mainmenu_option next_comment
comment 'System and processor type'

choice 'ARM system type'	\
	"Archimedes		CONFIG_ARCH_ARC \
	 A5000			CONFIG_ARCH_A5K \
	 RiscPC			CONFIG_ARCH_RPC \
	 EBSA-110		CONFIG_ARCH_EBSA110 \
	 EBSA-285		CONFIG_ARCH_EBSA285 \
	 NexusPCI		CONFIG_ARCH_NEXUSPCI \
	 Corel-VNC		CONFIG_ARCH_VNC \
	 Tbox			CONFIG_ARCH_TBOX" RiscPC

if [ "$CONFIG_ARCH_EBSA285" = "y" ]; then
  bool '  Include support for CATS boards' CONFIG_CATS
fi

# Select various configuration options depending on the machine type
#  Easy check for Acorn-style architectures

if [ "$CONFIG_ARCH_ARC" = "y" -o \
     "$CONFIG_ARCH_A5K" = "y" -o \
     "$CONFIG_ARCH_RPC" = "y" ]; then
  define_bool CONFIG_ARCH_ACORN y
else
  define_bool CONFIG_ARCH_ACORN n
fi

if [ "$CONFIG_ARCH_TBOX" = "y" ]; then
  define_bool CONFIG_BUS_I2C y
fi

#  These machines always have PCI

if [ "$CONFIG_ARCH_NEXUSPCI" = "y" -o \
     "$CONFIG_ARCH_VNC" = "y" ]; then
  define_bool CONFIG_PCI y
fi
if [ "$CONFIG_ARCH_EBSA285" = "y" ]; then
  bool "PCI support" CONFIG_PCI
fi

# These machines have ISA-DMA
if [ "$CONFIG_CATS" = "y" -o \
     "$CONFIG_ARCH_VNC" = "y" ]; then
  define_bool CONFIG_ISA_DMA y
else
  define_bool CONFIG_ISA_DMA n
fi

# Figure out whether this system uses 26-bit or 32-bit CPUs.  Nobody has
# ever built a machine that can take both, and now that ARM3 is obsolete
# nobody is likely to either.

if [ "$CONFIG_ARCH_ARC" = "y" -o \
     "$CONFIG_ARCH_A5K" = "y" ]; then
  define_bool CONFIG_CPU_32 n
  define_bool CONFIG_CPU_26 y
else
  define_bool CONFIG_CPU_32 y
  define_bool CONFIG_CPU_26 n
fi

# Now allow the user to choose a more precise CPU.  This is only used to set
# the flags we pass to GCC, not in any code.

choice 'Optimise for CPU'				\
	"ARM2		CONFIG_CPU_ARM2 \
	 ARM3		CONFIG_CPU_ARM3 \
	 ARM6		CONFIG_CPU_ARM6 \
	 ARM7		CONFIG_CPU_ARM7 \
	 SA110		CONFIG_CPU_SA110" ARM6

if [ "$CONFIG_CPU_26" = "y" ]; then

# For 26-bit CPUs, the page size changes with the amount of physical RAM!
# The default is 4MB but if the user has less they have to own up to it here.

  choice 'Physical memory size'		\
	"4MB+		CONFIG_PAGESIZE_32	\
	 2MB		CONFIG_PAGESIZE_16	\
	 1MB/512K	CONFIG_PAGESIZE_8" 4MB+
fi
endmenu

mainmenu_option next_comment
comment 'Code maturity level options'
bool 'Prompt for development and/or incomplete code/drivers' CONFIG_EXPERIMENTAL
bool 'Use new compilation options (for GCC 2.8)' CONFIG_BINUTILS_NEW
bool 'Compile kernel with frame pointer (for useful debugging)' CONFIG_FRAME_POINTER
endmenu

mainmenu_option next_comment
comment 'Loadable module support'
bool 'Enable loadable module support' CONFIG_MODULES
if [ "$CONFIG_MODULES" = "y" ]; then
  bool 'Set version information on all symbols for modules' CONFIG_MODVERSIONS
  bool 'Kernel module loader' CONFIG_KMOD
fi
endmenu

mainmenu_option next_comment
comment 'General setup'
bool 'Networking support' CONFIG_NET
bool 'System V IPC' CONFIG_SYSVIPC
bool 'BSD Process Accounting' CONFIG_BSD_PROCESS_ACCT
bool 'Sysctl support' CONFIG_SYSCTL
tristate 'Kernel support for a.out binaries' CONFIG_BINFMT_AOUT
tristate 'Kernel support for ELF binaries' CONFIG_BINFMT_ELF
tristate 'Kernel support for MISC binaries' CONFIG_BINFMT_MISC

tristate 'Parallel port support' CONFIG_PARPORT
if [ "$CONFIG_PARPORT" != "n" ]; then
  dep_tristate '  Archimedes hardware' CONFIG_PARPORT_ARC $CONFIG_PARPORT
  dep_tristate '  PC-style hardware' CONFIG_PARPORT_PC $CONFIG_PARPORT
# If exactly one hardware type is selected then parport will optimise away
# support for loading any others.  Defeat this if the user is keen.
  if [ "$CONFIG_PARPORT_PC" = "n" -o "$CONFIG_PARPORT_ARC" = "n" ]; then
    if [ "$CONFIG_PARPORT_PC" != "n" -o "$CONFIG_PARPORT_ARC" != "n" ]; then
      bool '   Support foreign hardware' CONFIG_PARPORT_OTHER
    fi
  fi
fi
if [ "$CONFIG_ARCH_EBSA285" = "y" -o \
     "$CONFIG_ARCH_EBSA110" = "y" -o \
     "$CONFIG_ARCH_VNC" = "y" ]; then
  string 'Initial kernel command string' CONFIG_CMDLINE
fi
endmenu

source drivers/pnp/Config.in

source drivers/block/Config.in

if [ "$CONFIG_ARCH_ACORN" = "y" ]; then
  source drivers/acorn/block/Config.in
fi

if [ "$CONFIG_VGA_CONSOLE" = "n" -a "$CONFIG_FB" = "n" ]; then
  source arch/arm/drivers/char/Config.in
else
  source drivers/char/Config.in
fi
if [ "$CONFIG_ARCH_ACORN" = "y" ]; then
  source drivers/acorn/char/Config.in
fi

if [ "$CONFIG_VT" = "y" ]; then
  mainmenu_option next_comment
  comment 'Console drivers'
  if [ "$CONFIG_ARCH_ACORN" != "y" -a "$CONFIG_ARCH_EBSA110" != "y" ]; then
    bool 'VGA text console' CONFIG_VGA_CONSOLE
  fi
  bool 'Support Frame buffer devices' CONFIG_FB
  source drivers/video/Config.in
  endmenu
fi

if [ "$CONFIG_NET" = "y" ]; then
  source net/Config.in
fi

if [ "$CONFIG_NET" = "y" ]; then
  mainmenu_option next_comment
  comment 'Network device support'

  bool 'Network device support?' CONFIG_NETDEVICES
  if [ "$CONFIG_NETDEVICES" = "y" ]; then
    source drivers/net/Config.in
  fi
  endmenu
fi

mainmenu_option next_comment
comment 'SCSI support'

tristate 'SCSI support?' CONFIG_SCSI

if [ "$CONFIG_SCSI" != "n" ]; then
  source drivers/scsi/Config.in
fi
endmenu

if [ "$CONFIG_ARCH_ACORN" = "y" -o "$CONFIG_PCI" = "y" ]; then
  mainmenu_option next_comment
  comment 'Sound'

  tristate 'Sound support' CONFIG_SOUND
  if [ "$CONFIG_SOUND" != "n" ]; then
    source drivers/sound/Config.in
  fi
  endmenu
fi

# mainmenu_option next_comment
# comment 'ISDN subsystem'
#
# tristate 'ISDN support' CONFIG_ISDN
# if [ "$CONFIG_ISDN" != "n" ]; then
#   source drivers/isdn/Config.in
# fi
# endmenu

source fs/Config.in

source fs/nls/Config.in

mainmenu_option next_comment
comment 'Kernel hacking'

bool 'Debug kernel errors' CONFIG_DEBUG_ERRORS
#bool 'Debug kmalloc/kfree' CONFIG_DEBUG_MALLOC
bool 'Magic SysRq key' CONFIG_MAGIC_SYSRQ
endmenu
