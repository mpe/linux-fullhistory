#
# For a description of the syntax of this configuration file,
# see Documentation/kbuild/config-language.txt.
#
# Note: ISA is disabled and will hopefully never be enabled.
# If you managed to buy an ISA x86-64 box you'll have to fix all the
# ISA drivers you need yourself. 
#

mainmenu_name "Linux Kernel Configuration"

define_bool CONFIG_X86_64 y

define_bool CONFIG_X86 y
define_bool CONFIG_ISA n
define_bool CONFIG_SBUS n

define_bool CONFIG_UID16 y
define_bool CONFIG_RWSEM_GENERIC_SPINLOCK y
define_bool CONFIG_RWSEM_XCHGADD_ALGORITHM n
define_bool CONFIG_X86_CMPXCHG y

define_bool CONFIG_EARLY_PRINTK y
define_bool CONFIG_GENERIC_ISA_DMA y

source init/Config.in

mainmenu_option next_comment
comment 'Processor type and features'
choice 'Processor family' \
	"AMD-Hammer			CONFIG_MK8 \
	 Generic-x86-64			CONFIG_GENERIC_CPU" AMD-Hammer
	
#
# Define implied options from the CPU selection here
#
define_int CONFIG_X86_L1_CACHE_BYTES 64
define_int CONFIG_X86_L1_CACHE_SHIFT 6
define_bool CONFIG_X86_TSC y
define_bool CONFIG_X86_GOOD_APIC y

tristate '/dev/cpu/*/msr - Model-specific register support' CONFIG_X86_MSR
tristate '/dev/cpu/*/cpuid - CPU information support' CONFIG_X86_CPUID

define_bool CONFIG_MATH_EMULATION n
define_bool CONFIG_MCA n
define_bool CONFIG_EISA n
define_bool CONFIG_X86_IO_APIC y
define_bool CONFIG_X86_LOCAL_APIC y

bool 'MTRR (Memory Type Range Register) support' CONFIG_MTRR
bool 'Symmetric multi-processing support' CONFIG_SMP
if [ "$CONFIG_SMP" = "n" ]; then
   bool 'Preemptible Kernel' CONFIG_PREEMPT
fi
if [ "$CONFIG_SMP" = "y" ]; then
    define_bool CONFIG_HAVE_DEC_LOCK y
    # actually 64 maximum, but you need to fix the APIC code first
    # to use clustered mode or whatever your big iron needs
    int  'Maximum number of CPUs (2-8)' CONFIG_NR_CPUS 8
fi

bool 'IOMMU support' CONFIG_GART_IOMMU
if [ "$CONFIG_GART_IOMMU" != "y" ]; then
   define_bool CONFIG_DUMMY_IOMMU y
fi

define_bool CONFIG_X86_MCE y

endmenu

mainmenu_option next_comment

comment 'Power management options'

bool 'Power Management support' CONFIG_PM

source drivers/acpi/Config.in

endmenu

mainmenu_option next_comment

comment 'Bus options (PCI etc.)'

bool 'PCI support' CONFIG_PCI
if [ "$CONFIG_PCI" = "y" ]; then
# x86-64 doesn't support PCI BIOS access from long mode so always go direct. 
   define_bool CONFIG_PCI_DIRECT y 
fi

source drivers/pci/Config.in

bool 'Support for hot-pluggable devices' CONFIG_HOTPLUG

if [ "$CONFIG_HOTPLUG" = "y" ] ; then
   source drivers/pcmcia/Config.in
   source drivers/hotplug/Config.in
else
   define_bool CONFIG_PCMCIA n
fi

endmenu

mainmenu_option next_comment

comment 'Executable file formats / Emulations'

if [ "$CONFIG_PROC_FS" = "y" ]; then
   define_bool CONFIG_KCORE_ELF y
fi
#tristate 'Kernel support for a.out binaries' CONFIG_BINFMT_AOUT
tristate 'Kernel support for ELF binaries' CONFIG_BINFMT_ELF
tristate 'Kernel support for MISC binaries' CONFIG_BINFMT_MISC

bool 'IA32 Emulation' CONFIG_IA32_EMULATION



endmenu

source drivers/mtd/Config.in

source drivers/parport/Config.in

source drivers/block/Config.in

mainmenu_option next_comment
comment 'ATA/ATAPI/MFM/RLL support'

tristate 'ATA/ATAPI/MFM/RLL device support' CONFIG_IDE

if [ "$CONFIG_IDE" != "n" ]; then
  source drivers/ide/Config.in
else
  define_bool CONFIG_BLK_DEV_HD n
fi
endmenu

mainmenu_option next_comment
comment 'SCSI device support'

tristate 'SCSI device support' CONFIG_SCSI

if [ "$CONFIG_SCSI" != "n" ]; then
   source drivers/scsi/Config.in
fi
endmenu

source drivers/md/Config.in

source drivers/telephony/Config.in

source drivers/message/fusion/Config.in

source drivers/ieee1394/Config.in

#Currently not 64bit safe
#source drivers/message/i2o/Config.in

if [ "$CONFIG_NET" = "y" ]; then
   source net/Config.in

   mainmenu_option next_comment
   comment 'Network device support'

   bool 'Network device support' CONFIG_NETDEVICES
   if [ "$CONFIG_NETDEVICES" = "y" ]; then
      source drivers/net/Config.in
# ATM seems to be largely 64bit unsafe and also unmaintained - disable it for now.
#      if [ "$CONFIG_ATM" = "y" ]; then
#         source drivers/atm/Config.in
#      fi
   fi
   endmenu
fi

source net/ax25/Config.in

source net/irda/Config.in

source drivers/isdn/Config.in

# no support for non IDE/SCSI cdroms as they were all ISA only

#
# input before char - char/joystick depends on it. As does USB.
#
source drivers/input/Config.in
source drivers/char/Config.in

source drivers/misc/Config.in

source drivers/media/Config.in

source fs/Config.in

if [ "$CONFIG_VT" = "y" ]; then
   mainmenu_option next_comment
   comment 'Console drivers'
   bool 'VGA text console' CONFIG_VGA_CONSOLE
   bool 'Video mode selection support' CONFIG_VIDEO_SELECT
   if [ "$CONFIG_EXPERIMENTAL" = "y" ]; then
      tristate 'MDA text console (dual-headed) (EXPERIMENTAL)' CONFIG_MDA_CONSOLE
      source drivers/video/Config.in
   fi
   endmenu
fi

mainmenu_option next_comment
comment 'Sound'

tristate 'Sound card support' CONFIG_SOUND
if [ "$CONFIG_SOUND" != "n" ]; then
   source sound/Config.in
fi
endmenu

source drivers/usb/Config.in

source net/bluetooth/Config.in

mainmenu_option next_comment
comment 'Kernel hacking'

bool 'Kernel debugging' CONFIG_DEBUG_KERNEL
if [ "$CONFIG_DEBUG_KERNEL" != "n" ]; then
   bool '  Debug memory allocations' CONFIG_DEBUG_SLAB
#   bool '  Memory mapped I/O debugging' CONFIG_DEBUG_IOVIRT
   bool '  Magic SysRq key' CONFIG_MAGIC_SYSRQ
   bool '  Spinlock debugging' CONFIG_DEBUG_SPINLOCK
   bool '  Additional run-time checks' CONFIG_CHECKING
   bool '  Debug __init statements' CONFIG_INIT_DEBUG
   bool '  Spinlock debugging' CONFIG_DEBUG_SPINLOCK
   bool '  Load all symbols for debugging/kksymoops' CONFIG_KALLSYMS
fi
endmenu

source security/Config.in
source crypto/Config.in
source lib/Config.in
