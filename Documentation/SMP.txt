
SMP support for Linux with up to 32 processors using the Intel MP
specification. 

WARNING:
	This is experimental. Back up your disks first. Build only
with gcc2.5.8.


To fix:

o	Fix sys_idle to exit/enter kernel state and do hlt's.
o	Fix scheduler decisions to reschedule. Per cpu reschedule ?
o	Scheduler ignores stick to CPU advantage. Critical for P6!
o	FPU state save/restore - fault any process on FPU and do a
	restore on the fault each context switch, do a save if we
	faulted that run of the task when we switch away. [DONE]
o	Clean up message pass.
o	Test for B stepping processors.
o	Clean up processor specific/independant split.
o	Document it all.	[PARTLY DONE]
o	Find the exception/crash bug.
o	Halt other CPU's on reset/panic doesn't always work.
o	Dont waste page at 4K - dont need it now.(watch the GDT code).
o	Dump bootup pages once booted somehow.
o	Verify message pass safe for >2 CPU's - should be now it
	is atomic lock based.
o	Dont schedule switches between idle tasks (if current->pid==0 &&
	next->pid==0 && next!=current)	[IN]
o	Clean up warnings/volatiles.
o	Send CTRL-ALT-DEL to pid 1 not task[1]!	[IN]
o	Fix load_TR() for non contiguous processor ids
o	Iterate over the slave timer requests if one is lost (keep a count per cpu)
o	Distribute irq's (locking present just needs the 82489 to be asked
	nicely).
o	486 startup code.
o	How to handle mixed FPU/non FPU processors.
o	Support 4Mb page mode again
