
Board Overview
-----------------------------

This is an beta release of the Xscale Linux port to the ADI 80200EVB
evaluation board.

The 80200EVB is an evaluation platform for ADI Engineering's high-performance
80200FCC chipset for the Intel 80200 XScale CPU. The 80200FCC is an open
source FPGA based system that contains a PCI unit and a high performance
memory controller.

In addition to the 80200FCC, the board also contains a 16C550 UART, and 4MB
of flash.

The board is still under development and currently only the UART is functional
as the PCI bits have not been programmed into the FPGA.

For more information on the board, see http://www.adiengineering.com

Port Status
-----------------------------

Supported:

- Onboard UART (Polled operation only)
- Cache/TLB locking on 80200 CPU

TODO:

- PCI when hardware supports it

Building the Kernel
-----------------------------
change Linux makefile
make adi_evb_config
make oldconfig
make zImage

Loading Linux
-----------------------------

Before you can use Linux on the ADI board, you need to grab the following:

ADI 80200EVB Monitor:
	ftp://source.mvista.com/pub/xscale/ADI_EVB/monitor.srec

ADI JFFS2 Image:
	ftp://source.mvista.com/pub/xscale/ADI_EVB/adi.jffs2

Once you've got the Cygnus prompt, type in the following command:

	load

On another terminal window:

	cat monitor.srec > /dev/ttyS0

(replace ttyS0 with the serial port you are using)

Once completed, just type 'go' at the cygmon prompt and you should see:

	MontaVista IQ80310 Monitor Version 0.1
	monitor>

Type 'b 115200' at the prompt and change your terminal speed to 115200

The first thing to do is to upload and burn the jffs2 filesystem image
onto the boards 4MB of flash:

	monitor> u c1000000
	Uploading file at 0xc1000000
	Now send file with ymodem

Do as the monitor says and transfer the file adi.jffs2.  Once complete,
the following will copy the jffs2 image to location 0x80000 in the flash.

	monitor> f 8000 c1000000 200000
	Erasing sector 0x00080000
	Writing sector 0x00080000 with data at 0xC1000000
	Erasing sector 0x000A0000
	Writing sector 0x000A0000 with data at 0xC1020000
	Erasing sector 0x000C0000
	...

Now use the same command as above to upload your zImage to location c1000000.
When you've done that, type 'j c1000000' to run Linux.  Login as
root and you're all set to go.

Misc Notes
-----------------------------

The current version of the HW does not have an onboard timer, so the 80200
PMU is not available for general use as it is being used for a timer source.

By default, the MTD driver reserves the first 512K for bootloaders and
the remaining 3.5MB for the filesystem. You can edit drivers/mtd/map/adi_evb.c
to change this as needed for your application.

Contributors
-----------------------------

Thanks to ADI Engineering for providing the hardware for development

Deepak Saxena <dsaxena@mvista.com> - Initial port

-----------------------------
Enjoy.  If you have any problem please contact Deepak Saxena
dsaxena@mvista.com

