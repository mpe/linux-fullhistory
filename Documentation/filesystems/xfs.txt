
The SGI XFS Filesystem
======================

XFS is a high performance journaling filesystem which originated
on the SGI IRIX platform.  It is completely multi-threaded, can
support large files and large filesystems, extended attributes,
variable block sizes, is extent based, and makes extensive use of
Btrees (directories, extents, free space) to aid both performance
and scalability.

Refer to the documentation at http://oss.sgi.com/projects/xfs/
for further details.  This implementation is on-disk compatible
with the IRIX version of XFS.


Options
=======

When mounting an XFS filesystem, the following options are accepted.

  biosize=size
	Sets the preferred buffered I/O size (default size is 64K).
	"size" must be expressed as the logarithm (base2) of the
	desired I/O size.
	Valid values for this option are 14 through 16, inclusive
	(i.e. 16K, 32K, and 64K bytes).  On machines with a 4K
	pagesize, 13 (8K bytes) is also a valid size.
	The preferred buffered I/O size can also be altered on an
	individual file basis using the ioctl(2) system call.

  logbufs=value
	Set the number of in-memory log buffers.  Valid numbers range
	from 2-8 inclusive.
	The default value is 8 buffers for filesystems with a
	blocksize of 64K, 4 buffers for filesystems with a blocksize
	of 32K, 3 buffers for filesystems with a blocksize of 16K
	and 2 buffers for all other configurations.  Increasing the
	number of buffers may increase performance on some workloads
	at the cost of the memory used for the additional log buffers
	and their associated control structures.

  logbsize=value
	Set the size of each in-memory log buffer.
	Size may be specified in bytes, or in kilobytes with a "k" suffix.
	Valid sizes for version 1 and version 2 logs are 16384 (16k) and 
	32768 (32k).  Valid sizes for version 2 logs also include 
	65536 (64k), 131072 (128k) and 262144 (256k).
	The default value for machines with more than 32MB of memory
	is 32768, machines with less memory use 16384 by default.

  logdev=device and rtdev=device
	Use an external log (metadata journal) and/or real-time device.
	An XFS filesystem has up to three parts: a data section, a log
	section, and a real-time section.  The real-time section is
	optional, and the log section can be separate from the data
	section or contained within it.

  noalign
	Data allocations will not be aligned at stripe unit boundaries.

  noatime
	Access timestamps are not updated when a file is read.

  norecovery
	The filesystem will be mounted without running log recovery.
	If the filesystem was not cleanly unmounted, it is likely to
	be inconsistent when mounted in "norecovery" mode.
	Some files or directories may not be accessible because of this.
	Filesystems mounted "norecovery" must be mounted read-only or
	the mount will fail.

  osyncisosync
	Make O_SYNC writes implement true O_SYNC.  WITHOUT this option,
	Linux XFS behaves as if an "osyncisdsync" option is used,
	which will make writes to files opened with the O_SYNC flag set
	behave as if the O_DSYNC flag had been used instead.
	This can result in better performance without compromising
	data safety.
	However if this option is not in effect, timestamp updates from
	O_SYNC writes can be lost if the system crashes.
	If timestamp updates are critical, use the osyncisosync option.

  quota/usrquota/uqnoenforce
	User disk quota accounting enabled, and limits (optionally)
	enforced.

  grpquota/gqnoenforce
	Group disk quota accounting enabled and limits (optionally)
	enforced.

  sunit=value and swidth=value
	Used to specify the stripe unit and width for a RAID device or
	a stripe volume.  "value" must be specified in 512-byte block
	units.
	If this option is not specified and the filesystem was made on
	a stripe volume or the stripe width or unit were specified for
	the RAID device at mkfs time, then the mount system call will
	restore the value from the superblock.  For filesystems that
	are made directly on RAID devices, these options can be used
	to override the information in the superblock if the underlying
	disk layout changes after the filesystem has been created.
	The "swidth" option is required if the "sunit" option has been
	specified, and must be a multiple of the "sunit" value.

  nouuid
        Don't check for double mounted file systems using the file system uuid.
        This is useful to mount LVM snapshot volumes.

