# Maintained by Axel Boldt (boldt@math.ucsb.edu) 
#
# This version of the Linux kernel configuration help texts
# corresponds to the kernel versions 2.1.x. Be aware that these are
# development kernels and need not be completely stable.
#
# International versions of this file available on the WWW:
#   - http://jf.gee.kyoto-u.ac.jp/JF/JF-ftp/euc/Configure.help.euc
# is a Japanese translation, maintained by Tetsuyasu YAMADA
# (tetsu@cauchy.nslab.ntt.jp). 
#   - http://nevod.perm.su/service/linux/doc/kernel/Configure.help 
# is a Russian translation, maintained by kaf@linux.nevod.perm.su.
#   - http://www.linux-kheops.com/traduc/kernels/
# has a French translation of the whole kernel, including
# Configure.help. This is maintained by David Bourgin
# (dbourgin@wsc.com). 
#   - ftp://ftp-pavia1.linux.it/pub/linux/Configure.help
# is a work-in-progress effort of the Italian translation team,
# currently only for the 2.0 version of this file, maintained 
# by rubini@linux.it.
#
# Information about what a kernel is, what it does, how to patch and
# compile it and much more is contained in the Kernel-HOWTO, available
# via ftp (user: anonymous) from sunsite.unc.edu in the directory
# /pub/Linux/docs/HOWTO. Before you start compiling, make sure that
# you have the necessary versions of all programs; they are listed
# in Documentation/Changes.
#
# Format of this file: description<nl>variable<nl>helptext<nl><nl>.
# If the question being documented is of type "choice", we list only
# the first occurring config variable. The help texts must not contain
# empty lines. Order of the help texts does not matter, however, no
# variable should be documented twice: if it is, only the first
# occurrence will be used by Configure. It is not absolutely necessary
# that the one-line descriptions of the variables used here are
# exactly the same as the ones in the corresponding Config.in
# scripts. The lines in a help text should be indented two
# positions. Lines starting with `#' are ignored. To be nice to
# menuconfig, limit your lines to 70 characters. Use emacs' kfill.el
# to edit this file or you lose.
#
# If you add a help text to this file, please try to be as gentle as
# possible. Don't use unexplained acronyms and generally write for the
# hypothetical ignorant but intelligent user who has just bought a PC,
# removed Windows, installed Linux and is now recompiling the kernel
# for the first time. Tell them what to do if they're
# unsure. Technical information should go in a README in the
# Documentation directory. Mention all the relevant READMEs and HOWTOs
# in the help text.
#
# All this was shamelessly stolen from several different sources. Many
# thanks to all the contributors.  Feel free to use these help texts
# in your own kernel configuration tools. The texts are copyrighted
# (c) 1995-1997 by Axel Boldt and others and governed by the GNU
# Public License.

Prompt for development and/or incomplete code/drivers
CONFIG_EXPERIMENTAL
  Some of the various things that Linux supports (such as network 
  drivers, filesystems, network protocols, etc.) can be in a state 
  of development where the functionality, stability, or the level of 
  testing is not yet high enough for general use. This is usually
  known as the "alpha-test" phase amongst developers. If a feature is
  currently in alpha-test, then the developers usually discourage 
  uninformed widespread use of this feature by the general public to
  avoid "Why doesn't this work?" type mail messages. However, active
  testing and use of these systems is welcomed. Just be aware that it
  may not meet the normal level of reliability or it may fail to work
  in some special cases. Detailed bug reports from people familiar
  with the kernel internals are usually welcomed by the developers
  (before submitting bug reports, please read the documents README,
  MAINTAINERS, Documentation/BUG-HUNTING, and
  Documentation/oops-tracing.txt in the kernel source).  
  Unless you intend to help test and develop a feature or driver that
  falls into this category, or you have a situation that requires
  using these features you should probably say N here, which will
  cause this configure script to present you with fewer choices. If
  you say Y here, you will be offered the choice of using features or
  drivers that are currently considered to be in the alpha-test phase.

Kernel math emulation
CONFIG_MATH_EMULATION
  Linux can emulate a math coprocessor (used for floating point
  operations) if you don't have one. 486DX and Pentium processors have
  a math coprocessor built in, 486SX and 386 do not, unless you added
  a 487DX or 387, respectively.  (The messages during boot time can
  give you some hints here ["man dmesg"]) Everyone needs either a
  coprocessor or this emulation. If you say Y here even
  though you have a coprocessor, the coprocessor will be used
  nevertheless. (This behavior can be changed with the kernel command
  line option "no387", which comes handy if your coprocessor is
  broken. Try "man bootparam" or see the documentation of your boot
  loader (lilo or loadlin) about how to pass options to the kernel at
  boot time. The lilo procedure is also explained in the SCSI-HOWTO,
  available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO.) This means that it is a good
  idea to say Y here if you intend to use this kernel on different
  machines. More information about the internals of Linux math
  coprocessor emulation can be found in arch/i386/math-emu/README. If
  you are not sure, say Y; apart from resulting in a 45kB bigger
  kernel, it won't hurt.

Normal floppy disk support
CONFIG_BLK_DEV_FD
  If you want to use your floppy disk drive(s) under Linux, say
  Y. Information about this driver, especially important for IBM
  Thinkpad users, is contained in drivers/block/README.fd. This file
  also contains the location of the Floppy driver FAQ as well as
  location of the fdutils package used to configure additional
  parameters of the driver at run time. This driver is also available
  as a module ( = code which can be inserted in and removed from the
  running kernel whenever you want). The module will be called
  floppy.o. If you want to compile it as a module, say M here and read
  Documentation/modules.txt.
  
RAM disk support
CONFIG_BLK_DEV_RAM
  Saying Y here will allow you to use a portion of your RAM memory as
  a block device, so that you can make filesystems on it, read and
  write to it and do all the other things that you can do with normal
  block devices (such as harddrives).  It is usually used to load and
  store a copy of a minimal root file system off of a floppy into RAM
  during the initial install of Linux.  Note that the kernel command
  line option "ramdisk=XX" is now obsolete.  For details, read
  Documentation/ramdisk.txt. If you want to compile this as a module (
  = code which can be inserted in and removed from the running kernel
  whenever you want), say M and read Documentation/modules.txt. The
  module will be called rd.o. Most normal users won't need the RAM
  disk functionality, and can thus say N here.

Initial RAM disk (initrd) support
CONFIG_BLK_DEV_INITRD
  The initial RAM disk is a RAM disk that is loaded by the boot loader
  (loadlin or lilo) and that is mounted as root before the normal boot
  procedure. It is typically used to load modules needed to mount the
  "real" root file system, etc. See Documentation/initrd.txt for
  details.

Loop device support
CONFIG_BLK_DEV_LOOP
  Saying Y here will allow you to mount a file as a file system.  This
  is useful if you want to check an ISO9660 file system before burning
  the CD, or want to use floppy images without first writing them to
  floppy.  This option also allows one to mount a filesystem with
  encryption.  To use these features, you need a recent version of
  mount (available via ftp (user: anonymous) from
  ftp.win.tue.nl/pub/linux/util/).  Note that this loop device has
  nothing to do with the loopback device used for network connections
  from the machine to itself.  Most users will answer N here.

Network Block Device support
CONFIG_BLK_DEV_NBD
  Saying Y here will allow computer to serve as client for network
  block device - it will be able to use block devices exported by
  servers (mount filesystems on them etc.). It also allows you to run
  a block-device in userland (making server and client physicaly the same
  computer, communicating using loopback). Normal users say N
  here. Read Documentation/nbd.txt.

Enhanced IDE/MFM/RLL disk/cdrom/tape/floppy support
CONFIG_BLK_DEV_IDE
  This will use the full-featured IDE driver to control up to four IDE
  interfaces, each being able to serve a "master" and a "slave"
  device, for a combination of up to eight IDE disk/cdrom/tape/floppy
  drives.  Useful information about large (>540MB) IDE disks,
  soundcard IDE ports, module support, and other topics, is all
  contained in Documentation/ide.txt.  If you have one or more IDE
  drives, say Y here.  If your system has no IDE drives, or if memory
  requirements are really tight, you could say N here, and select the
  Old harddisk driver instead to save about 13kB of memory in the
  kernel.  To fine-tune IDE drive/interface parameters for improved
  performance, look for the hdparm package at
  sunsite.unc.edu:/pub/Linux/kernel/patches/diskdrives/

Old harddisk (MFM/RLL/IDE) driver
CONFIG_BLK_DEV_HD_ONLY
  There are two drivers for MFM/RLL/IDE disks.  Most people use the
  newer enhanced driver, but this old one is still around for two
  reasons.  Some older systems have strange timing problems and seem
  to work only with the old driver (which itself does not work with
  some newer systems).  The other reason is that the old driver is
  smaller, since it lacks the enhanced functionality of the new one.
  This makes it a good choice for systems with very tight memory
  restrictions, or for systems with only older MFM/RLL/ESDI drives.
  Choosing the old driver can save 13kB or so of kernel memory.  If
  you are unsure, then just choose the Enhanced IDE/MFM/RLL driver
  instead of this one.

Use old disk-only driver on primary interface
CONFIG_BLK_DEV_HD_IDE
  There are two drivers for MFM/RLL/IDE disks.  Most people use just
  the new enhanced driver by itself.  This option however installs the
  old harddisk driver to control the primary IDE/disk interface in the
  system, leaving the new enhanced IDE driver take care of only the
  2nd/3rd/4th IDE interfaces. Doing this will prevent you from having
  an IDE/ATAPI CDROM or tape drive connected to the primary IDE
  interface. Choosing this option may be useful for older systems
  which have MFM/RLL/ESDI controller+drives at the primary port
  address (0x1f0), along with IDE drives at the secondary/3rd/4th port
  addresses.  Normally, just say N here; you will then use the new
  driver for all 4 interfaces.

Include IDE/ATA-2 DISK support
CONFIG_BLK_DEV_IDEDISK
  This will include enhanced support for MFM/RLL/IDE harddisks. If you
  have a MFM/RLL/IDE disk, and there is no special reason to use the
  old harddisk driver instead, say Y.  If you want to compile this
  driver as a module ( = code which can be inserted in and removed
  from the running kernel whenever you want), say M here and read
  Documentation/modules.txt. The module will be called ide-disk.o. Do
  not compile this driver as a module if your root filesystem (the one
  containing the directory /) is located on the IDE disk. If unsure,
  say Y.

Include IDE/ATAPI CDROM support
CONFIG_BLK_DEV_IDECD
  If you have a CDROM drive using the ATAPI protocol, say Y.  ATAPI is
  a new protocol used by IDE CDROM and TAPE drives, similar to the
  SCSI protocol.  Most new CDROM drives use ATAPI, including the
  NEC-260, Mitsumi FX400, Sony 55E, and just about all non-SCSI
  double(2X), quad(4X), and six(6X) speed drives.  At boot time, the
  CDROM drive will be identified along with other IDE devices, as
  "hdb" or "hdc", or something similar.  If this is your only CDROM
  drive, you can say N to all other CDROM options, but be sure to say
  Y to "ISO9660 cdrom filesystem support".  Read the CDROM-HOWTO,
  available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO and the file
  Documentation/cdrom/ide-cd.  Note that older versions of lilo (the
  linux boot loader) cannot properly deal with IDE/ATAPI CDROMs, so
  install lilo-16 or higher, available from
  sunsite.unc.edu:/pub/Linux/system/Linux-boot/lilo.  If you want to
  compile the driver as a module ( = code which can be inserted in and
  removed from the running kernel whenever you want), say M here and
  read Documentation/modules.txt. The module will be called ide-cd.o.

Include IDE/ATAPI TAPE support
CONFIG_BLK_DEV_IDETAPE
  If you have an IDE tape drive using the ATAPI protocol, say Y.
  ATAPI is a new protocol used by IDE tape and CDROM drives, similar
  to the SCSI protocol.  At boot time, the tape drive will be
  identified along with other IDE devices, as "hdb" or "hdc", or
  something similar, and will be mapped to a character device such as
  "ht0".  Be sure to consult the drivers/block/ide-tape.c and
  Documentation/ide.txt files for usage information.  If you want to
  compile the driver as a module ( = code which can be inserted in and
  removed from the running kernel whenever you want), say M here and
  read Documentation/modules.txt. The module will be called ide-tape.o.

Include IDE/ATAPI FLOPPY support
CONFIG_BLK_DEV_IDEFLOPPY
  If you have an IDE floppy drive which uses the ATAPI protocol, say
  Y. Chances are that you don't, because these animals are rare.
  ATAPI is a new protocol used by IDE CDROM/tape/floppy drives,
  similar to the SCSI protocol.  At boot time, the FLOPPY drive will
  be identified along with other IDE devices, as "hdb" or "hdc", or
  something similar. If you want to compile the driver as a module ( =
  code which can be inserted in and removed from the running kernel
  whenever you want), say M here and read Documentation/modules.txt.
  The module will be called ide-floppy.o.
  
SCSI emulation support
CONFIG_BLK_DEV_IDESCSI
  This will provide SCSI host adapter emulation for IDE ATAPI devices,
  and will allow you to use a SCSI device driver instead of a native
  ATAPI driver. This is useful if you have an ATAPI device for which
  no native driver has been written; you can then use this emulation
  together with an appropriate SCSI device driver. If both this SCSI
  emulation and native ATAPI support are compiled into the kernel, the
  native support will be used.  Normally, say N.

CMD640 chipset bugfix/support
CONFIG_BLK_DEV_CMD640
  The CMD-Technologies CMD640 chip is used on many common 486 and
  Pentium motherboards, usually in combination with a "Neptune" or
  "SiS" chipset.  Unfortunately, it has a number of rather nasty
  design flaws that can cause severe data corruption under many common
  conditions.  Say Y here to include code which tries to automatically
  detect and correct the problems under Linux.  This option also
  enables access to the secondary IDE ports in some CMD640 based
  systems.  This driver will work automatically in PCI based systems
  (most new systems have PCI slots).  But if your system uses VESA
  local bus (VLB) instead of PCI, you must also supply a kernel boot
  parameter to enable the CMD640 bugfix/support: "ide0=cmd640_vlb" The
  CMD640 chip is also used on add-in cards by Acculogic, and on the
  "CSA-6400E PCI to IDE controller" that some people have. For
  details, read Documentation/ide.txt. If unsure, say Y.

CMD640 enhanced support
CONFIG_BLK_DEV_CMD640_ENHANCED
  This option includes support for setting/autotuning PIO modes and
  prefetch on CMD640 IDE interfaces.  For details, read
  Documentation/ide.txt. If you have a CMD640 IDE interface and your
  BIOS does not already do this for you, then say Y here.  Otherwise
  say N.

RZ1000 chipset bugfix/support
CONFIG_BLK_DEV_RZ1000
  The PC-Technologies RZ1000 chip is used on many common 486 and
  Pentium motherboards, usually along with the "Neptune" chipset.
  Unfortunately, it has a rather nasty design flaw that can cause
  severe data corruption under many conditions.  Say Y here to include
  code which automatically detects and corrects the problem under
  Linux.  This may slow disk throughput by a few percent, but at least
  things will operate 100% reliably. If unsure, say Y.

Intel 82371 PIIX (Triton I/II), VIA VP-1 DMA support
CONFIG_BLK_DEV_IDEDMA
  If your PCI system uses IDE drive(s) (as opposed to SCSI, say)
  and is capable of bus-master DMA operation (most Pentium PCI
  systems), you will want to enable this option to allow use of 
  bus-mastering DMA data transfers. Read the comments at the
  beginning of drivers/block/idedma.c and Documentation/ide.txt.
  You can get the latest version of the hdparm utility via 
  ftp (user: anonymous) from
  sunsite.unc.edu/pub/Linux/kernel/patches/diskdrives/; it is
  used to tune your harddisk. 
  It is safe to say Y to this question.

Other IDE chipset support
CONFIG_IDE_CHIPSETS
  Say Y here if you want to include enhanced support for various IDE
  interface chipsets used on motherboards and add-on cards.  This
  enhanced support may be necessary for linux to be able to access the
  3rd/4th drives in some systems.  It may also enable setting of
  higher speed I/O rates to improve system performance with these
  chipsets.  Most of these also require special kernel boot parameters
  to actually turn on the support at runtime.

DTC-2278 support
CONFIG_BLK_DEV_DTC2278
  This driver is enabled at runtime using the "ide0=dtc2278" kernel
  boot parameter.  It enables support for the secondary IDE interface
  of the DTC-2278 card, and permits faster I/O speeds to be set as
  well.  See the Documentation/ide.txt and dtc2278.c files for more
  info.

Holtek HT6560B support
CONFIG_BLK_DEV_HT6560B
  This driver is enabled at runtime using the "ide0=ht6560b" kernel
  boot parameter.  It enables support for the secondary IDE interface
  of the Holtek card, and permits faster I/O speeds to be set as well.
  See the Documentation/ide.txt and ht6560b.c files for more info.

PROMISE DC4030 support (EXPERIMENTAL)
CONFIG_BLK_DEV_PDC4030
  This driver provides support for the secondary IDE interface and
  cache of Promise IDE chipsets, e.g. DC4030 and DC5030.  This driver
  is known to incur timeouts/retries during heavy I/O to drives
  attached to the secondary interface.  CDROM and TAPE devices are not
  supported yet.  This driver is enabled at runtime using the
  "ide0=dc4030" kernel boot parameter.  See the Documentation/ide.txt
  and drivers/block/pdc4030.c files for more info.

OPTi 82C621     support (EXPERIMENTAL)
CONFIG_BLK_DEV_OPTI621
  This driver allows use of hdparm to change the PIO timings
  for drives attached to an OPTi MIDE controller.
  Please read the comments at the top of drivers/block/opti621.c.

QDI QD6580 support
CONFIG_BLK_DEV_QD6580
  This driver is enabled at runtime using the "ide0=qd6580" kernel
  boot parameter.  It permits faster I/O speeds to be set.  See the
  Documentation/ide.txt and qd6580.c files for more info.

UMC 8672 support
CONFIG_BLK_DEV_UMC8672
  This driver is enabled at runtime using the "ide0=umc8672" kernel
  boot parameter.  It enables support for the secondary IDE interface
  of the UMC-8672, and permits faster I/O speeds to be set as well.
  See the Documentation/ide.txt and umc8672.c files for more info.

ALI M14xx support
CONFIG_BLK_DEV_ALI14XX
  This driver is enabled at runtime using the "ide0=ali14xx" kernel
  boot parameter.  It enables support for the secondary IDE interface
  of the ALI M1439/1443/1445/1487/1489 chipsets, and permits faster
  I/O speeds to be set as well.  See the Documentation/ide.txt and
  ali14xx.c files for more info.

XT harddisk support
CONFIG_BLK_DEV_XD
  Very old 8 bit hard disk controllers used in the IBM XT computer. To
  include a driver for these, say Y. If you want to compile the driver
  as a module ( = code which can be inserted in and removed from the
  running kernel whenever you want), say M here and read
  Documentation/modules.txt. The module will be called xd.o. It's
  pretty unlikely that you have one of these: say N.

SyQuest EZ parallel port disk support
CONFIG_BLK_DEV_EZ
  If you have a parallel port version of SyQuest's EZ135 or EZ230
  removable media devices you can use this driver.  Answer Y to build
  the driver into the kernel, or M if you would like to build it as a
  loadable module. The module will be called ez.o.  Read the file
  linux/Documentation/ez.txt.  It is possible to use several devices
  with a single common parallel port (e.g. printer and EZ135); it is
  safe to compile both drivers into the kernel.

Multiple devices driver support
CONFIG_BLK_DEV_MD
  This driver lets you combine several harddisk partitions into one
  logical block device. Information about how and why to use it and the
  necessary tools are available over ftp (user: anonymous) from
  sweet-smoke.ufr-info-p7.ibp.fr/pub/public/Linux in the md package
  and the md-FAQ. Please read drivers/block/README.md. If unsure, say
  N.

Linear (append) mode
CONFIG_MD_LINEAR
  If you say Y here, then your multiple devices driver will be able to
  use the so-called linear mode, i.e. it will combine the harddisk
  partitions by simply appending one to the other. If you want to
  compile this as a module ( = code which can be inserted in and
  removed from the running kernel whenever you want), say M here and
  read Documentation/modules.txt. The module will be called
  linear.o. If unsure, say Y.

RAID-0 (striping) mode
CONFIG_MD_STRIPED
  If you say Y here, then your multiple devices driver will be able to
  use the so-called raid0 mode, i.e. it will combine the harddisk
  partitions into one logical device in such a fashion as to fill them
  up evenly, one chunk here and one chunk there. This will increase
  the throughput rate if the partitions reside on distinct disks.  If
  you want to compile this as a module ( = code which can be inserted
  in and removed from the running kernel whenever you want), say M
  here and read Documentation/modules.txt. The module will be called
  raid0.o. If unsure, say Y.

RAID-1 (mirroring) mode
CONFIG_MD_MIRRORING
  A RAID-1 set consists of several disk drives which are exact copies
  of each other. In the event of a mirror failure, the RAID driver
  will continue to use the operational mirrors in the set, providing
  an error free MD device to the higher levels of the kernel. In
  a set with N drives, the available space is the capacity of a single
  drive, and the set protects against a failure of (N - 1) drives.
  raidtools, a set of user-space tools which create and maintain
  RAID1/4/5 sets, is available at:
  ftp://ftp.kernel.org/pub/linux/daemons/raid
  http://luthien.nuclecu.unam.mx/~miguel/raid

RAID-4/RAID-5 mode
CONFIG_MD_RAID5
  A RAID-5 set of N drives with a capacity of C MB per drive provides
  the capacity of C * (N - 1) drives, and protects against a failure
  of a single drive. For a given sector (row) number, (N - 1) drives
  contain data sectors, and one drive contains the parity protection.
  For a RAID-4 set, the parity blocks are present on a single drive,
  while a RAID-5 set distributes the parity accross the drives in one
  of the available parity distribution methods.
  raidtools, a set of user-space tools which create and maintain
  RAID1/4/5 sets, is available at:
  ftp://ftp.kernel.org/pub/linux/daemons/raid
  http://luthien.nuclecu.unam.mx/~miguel/raid

Support for Deskstation RPC44 
CONFIG_DESKSTATION_RPC44
  This is a machine with a R4400 100 MHz CPU. To compile a Linux
  kernel that runs on these, say Y here. For details about Linux
  on the MIPS architecture, check out the Linux/MIPS FAQ on the WWW at
  http://lena.fnet.fr/ (To browse the WWW, you need to
  have access to a machine on the Internet that has a program like
  lynx or netscape).

Support for Mips Magnum 3000 
CONFIG_MIPS_MAGNUM_3000
  To compile a Linux kernel that runs on these, say Y here. For
  details about Linux on the MIPS architecture, check out the
  Linux/MIPS FAQ on the WWW at http://lena.fnet.fr/ (To browse the
  WWW, you need to have access to a machine on the Internet that has
  a program like lynx or netscape).

Support for Mips Magnum 4000
CONFIG_MIPS_MAGNUM_4000
  This is a machine with a R4000 100 MHz CPU. To compile a Linux
  kernel that runs on these, say Y here. For details about Linux on
  the MIPS architecture, check out the Linux/MIPS FAQ on the WWW at
  http://lena.fnet.fr/ (To browse the WWW, you need to have access to
  a machine on the Internet that has a program like lynx or netscape).

Support for Olivetti M700
CONFIG_OLIVETTI_M700
  This is a machine with a R4000 100 MHz CPU. To compile a Linux
  kernel that runs on these, say Y here. For details about Linux on
  the MIPS architecture, check out the Linux/MIPS FAQ on the WWW at
  http://lena.fnet.fr/ (To browse the WWW, you need to have access to
  a machine on the Internet that has a program like lynx or netscape).

Support for Deskstation Tyne
CONFIG_DESKSTATION_TYNE
  This is a machine with a R4600 134 MHz CPU. The Linux port for this
  system is idle right now because of hardware or documentation
  problems. For details about Linux on the MIPS architecture, check
  out the Linux/MIPS FAQ on the WWW at http://lena.fnet.fr/ (To browse
  the WWW, you need to have access to a machine on the Internet that
  has a program like lynx or netscape).

Support for Acer PICA 1 chipset
CONFIG_ACER_PICA_61
  This is a machine with a R4400 134/150 MHz CPU. To compile a Linux
  kernel that runs on these, say Y here. For details about Linux on
  the MIPS architecture, check out the Linux/MIPS FAQ on the WWW at
  http://lena.fnet.fr/ (To browse the WWW, you need to have access to
  a machine on the Internet that has a program like lynx or
  netscape).

Support for DECstation
CONFIG_DECSTATION
  The DECStation 3100 (with a MIPS R2000 series CPU) and DECStation
  5000/xxx (MIPS R3000 series CPU) are also sometimes labeled
  PMAX. They often run the Ultrix operating system. To compile a Linux
  kernel that runs on these, say Y here. For details about Linux on
  the MIPS architecture, check out the Linux/MIPS FAQ on the WWW at
  http://lena.fnet.fr/ (To browse the WWW, you need to have access to
  a machine on the Internet that has a program like lynx or netscape).

CPU type
CONFIG_CPU_R3000
  Give the type of your machine's MIPS CPU. For this question,
  it suffices to give a unique prefix of the option you want to
  choose. 

Networking support
CONFIG_NET
  Unless you really know what you are doing, you should say Y
  here. The reason is that some programs need kernel networking
  support even if you configure a stand-alone machine that won't be
  connected to any other computer.  If you are upgrading from an older
  kernel, you should consider updating your networking tools too
  because changes in the kernel and the tools often go hand in hand;
  see http://www.inka.de/sites/lina/linux/NetTools/index_en.html for
  details.

Packet socket
CONFIG_PACKET
  Packet protocol is used by applications directly communicating
  to network devices f.e. tcpdump. You want them to work, choose Y.
  If you run kerneld, you might want to choose M.

Kernel/User netlink socket
CONFIG_NETLINK
  This protocol family is used for bi-directional communication
  between kernel and user level daemons. This option is unlikely to
  be useful for common workstation, but if you configure router or
  firewall, do not hesitate: press Y.

Routing messages
CONFIG_RTNETLINK
  One of netlink protocols used by kernel routing engine.
  You will need it to use advanced routing features.

Netlink device emulation
CONFIG_NETLINK_DEV
  It is backward compatibility option, choose Y for now.
  This option will be removed soon.

Network aliasing
CONFIG_NET_ALIAS
  This will allow you to set multiple network addresses on the same
  low-level network device driver. Typically used for services that
  act differently based on the address they listen on
  (e.g. "multihosting" or "virtual domains" on the web server apache
  and the ftp server wuftpd) or for connecting to different logical
  networks through the same physical interface (most commonly an
  ethernet networking card).  This is the generic part, later when
  configuring network protocol options you will be asked for
  protocol-specific aliasing support, and you will have to say Y to at
  least one of them.  See Documentation/networking/alias.txt for more
  info.  If you need this feature (for any protocol, like IP) say Y;
  if unsure, say N.

Network firewalls
CONFIG_FIREWALL
  A firewall is a computer which protects a local network from the
  rest of the world: all traffic to and from computers on the local
  net is inspected by the firewall first, and sometimes blocked. If
  you want to configure your Linux box as a firewall for a local
  network, say Y here. If your local network is TCP/IP based, you will
  then also have to say Y to "IP: firewalling", below.  
  You also need to say Y here and say Y to "IP firewalling" below in
  order to be able to use IP masquerading (i.e. local computers can
  chat with an outside host, but that outside host is made to think
  that it is talking to the firewall box -- makes the local network
  completely invisible and avoids the need to allocate valid IP host
  addresses for the machines on the local net) and IP packet
  accounting (keeping track of what is using all your network
  bandwidth) and IP transparent proxying (makes the computers on the
  local network think they're talking to a remote computer, while in
  reality the traffic is redirected by your Linux firewall to a local
  proxy server). Chances are that you should use this on every machine
  being run as a router and not on any regular host. If unsure, say N.

SYN flood protection
CONFIG_SYN_COOKIES
  Normal TCP/IP networking is open to an attack known as "SYN flooding".
  This denial-of-service attack prevents legitimate remote users from
  being able to connect to your computer and requires very little work
  from the attacker, who can operate from anywhere on the internet.
  SYN cookies provide protection against this type of attack. With
  this option turned on, the TCP/IP stack will use a cryptographic
  challenge protocol known as SYN cookies to enable legitimate users
  to continue to connect, even when your machine is under attack.
  There is no need for the legitimate users to change their TCP/IP
  software; SYN cookies work transparently to them.  For technical
  information about syn cookies, check out
  ftp://koobera.math.uic.edu/pub/docs/syncookies-archive.
  If you say Y here, note that SYN cookies aren't enabled by default:
  you need to add the command
    echo 1 >/proc/sys/net/ipv4/tcp_syncookies 
  to one of your startup scripts (e.g. /etc/rc.local or 
  /etc/rc.d/rc.local) in addition.
  If unsure, say Y.

Socket Security API Support (EXPERIMENTAL)
CONFIG_NET_SECURITY
  Enable use of the socket security API. This option only really
  supports security (via encryption of all traffic) over IPv4 links,
  and then only if you add a security protocol which is also supported
  at the other end of the link; Linux itself does not include any
  security protocols, but you can use the enskip package at
  ftp.tik.ee.ethz.ch/pub/packages/skip/. That package also contains
  documentation of the API to be used for secure sockets. If unsure,
  say N.

Sun floppy controller support
CONFIG_BLK_DEV_SUNFD
  This is support for floppy drives on Sun Sparc workstations. Say Y
  if you have a floppy drive, otherwise N. Easy.

Alpha system type
CONFIG_ALPHA_AVANTI
  Find out what type of Alpha motherboard you have. You will probably
  want to read the Linux/Alpha homepage on the WWW at
  http://www.azstarnet.com/~axplinux/ (To browse the WWW, you need to
  have access to a machine on the Internet that has a program like
  lynx or netscape). For this question, it suffices to give a unique
  prefix of the option you want to choose. The choices:
  ** Avanti: This is for Mustang (AS200), M3 (AS250), Avanti (AS400)
     AlphaStations.  These usually come with a TGA graphics adapter,
     so you'll want to say Y to "TGA Console support", below, if you
     have one of these.
  ** Alpha-XL: A.k.a. "Windows NT Dream Machine" :-) These usually 
     come with a TGA graphics adapter, so you'll want to say Y to "TGA
     Console support", below, if you have one of these.
  ** Jensen: a.k.a. DEC 2000 a.k.a. DECpc AXP 150, the oldest Alpha
     PC; it sports an EISA bus. The boot process on Jensen machines is
     difficult (no booting from floppies, MILO doesn't work). You need
     to have access to a second Linux workstation. The Linux/Alpha
     FAQ, accessible from the above mentioned WWW page, has details.
  ** Noname: a.k.a. AXPpci33, a PCI-bus based board using the 21066
     Alpha CPU, running at either 166 or 233 MHz. You also want to
     choose this option if you have a UDB (Universal Desktop Box
     a.k.a. Multia) machine.
  ** Cabriolet: also called AlphaPC64, a PCI-bus based board using the
     21064 Alpha CPU typically running at 275 or 300 MHz.
  ** EB66: "Evaluation Board"
  ** EB66+: "Evaluation Board"
###
### Add info about Platform2000, EB164, etc.
###

Using SRM as bootloader
CONFIG_ALPHA_SRM
  There are two different types of booting firmware on Alphas: SRM,
  which is command line driven, and ARC, which uses menus and arrow
  keys. The usual way to load Linux on an Alpha machine is to use MILO
  (a bootloader that lets you pass command line parameters to the
  kernel just like lilo does for the 386 architecture) which can be
  loaded either from ARC or can be installed directly as a permanent
  firmware replacement from floppy (which requires changing a certain
  jumper on the motherboard). If you want to do either of these, say N
  here. If MILO doesn't work on your system (true for Jensen
  motherboards), you can bypass it altogether and boot Linux directly
  from an SRM console; say Y here in order to do that. Note that you
  won't be able to boot from an IDE disk using SRM. If unsure, say
  N. Details about the Linux/Alpha booting process are contained in
  the Linux/Alpha FAQ, accessible on the WWW from
  http://www.azstarnet.com/~axplinux/ (To browse the WWW, you need to
  have access to a machine on the Internet that has a program like
  lynx or netscape).

Non-standard serial port support
CONFIG_SERIAL_NONSTANDARD
  Say Y here if you have any non-standard serial boards --- boards
  which aren't supported using the standard "dumb" serial driver.
  This includes intelligent serial boards such as Cyclades,
  Digiboards, etc. These are usually used for systems that need many
  serial ports because they serve many terminals or dial-in
  connections.  Note that the answer to this question won't directly
  affect the kernel: saying N will just cause this configure script to
  skip all the questions about non-standard serial boards. Most people
  can say N here.

Extended dumb serial driver options
CONFIG_SERIAL_EXTENDED
  If you wish to use any non-standard features of the standard "dumb"
  driver, say Y here.  This includes HUB6 support, shared serial
  interrupts, special multiport support, support for more than the
  four COM 1/2/3/4 boards, etc.  Note that the answer to this question
  won't directly affect the kernel: saying N will just cause this
  configure script to skip all the questions about serial driver
  options. If unsure, say N.

Support more than 4 serial ports
CONFIG_SERIAL_MANY_PORTS
  Enable this option if you have dumb serial boards other than the
  four standard COM 1/2/3/4 ports.  This may happen if you have an AST
  FourPort, Accent Async, Boca, or other custom serial port hardware
  which acts similar to standard serial port hardware.  If you only
  use the standard COM 1/2/3/4 ports, you can say N here to save some
  memory.

Support for sharing serial interrupts
CONFIG_SERIAL_SHARE_IRQ
  Some serial boards have hardware support which allows multiple dumb
  serial ports on the same board to share a single IRQ.  To enable
  support for this in the serial driver, say Y here.

Support special multiport boards
CONFIG_SERIAL_MULTIPORT
  Some multiport serial ports have special ports which are used to
  signal when there are any serial ports on the board which need
  servicing.  Say Y here to enable the serial driver to take advantage
  of those special I/O ports.

Support the Bell Technologies HUB6 card
CONFIG_HUB6
  Say Y here to enable support in the dumb serial driver to support
  the HUB6 card.

TGA Console Support
CONFIG_TGA_CONSOLE
  Many Alpha systems (e.g the Multia) are shipped with a graphics card
  that implements the TGA interface (much like the VGA standard, but
  older TGA adapters are *not* VGA compatible).  On such systems, you
  should say Y here so that the TGA driver rather than the standard
  VGA driver is used.  Note that, at this time, there is no X server
  for these systems. If unsure, try N.

PCI support
CONFIG_PCI
  Find out whether you have a PCI motherboard. PCI is the name of a
  bus system, i.e. the way the CPU talks to the other stuff inside
  your box. Other bus systems are ISA, EISA, Microchannel (MCA) or
  VESA. If you have PCI, say Y, otherwise N. The PCI-HOWTO, available
  via ftp (user: anonymous) in sunsite.unc.edu:/pub/Linux/docs/HOWTO,
  contains valuable information about which PCI hardware does work
  under Linux and which doesn't.
  If some of your PCI devices don't work and you get a warning during
  boot time ("man dmesg"), please follow the instructions at the top
  of include/linux/pci.h.

PCI BIOS support
CONFIG_PCI_BIOS
  If you have enabled PCI bus support above, you probably want to allow
  Linux to use your PCI BIOS to detect the PCI devices and determine
  their configuration. Note: some old PCI motherboards have BIOS bugs
  and may crash if this switch is enabled -- for such motherboards,
  you should disable PCI BIOS support and use direct PCI access instead.
  Except for some special cases (embedded systems with no BIOS), you
  probably should say Y here.

PCI direct access support
CONFIG_PCI_DIRECT
  If you don't want to use the PCI BIOS (e.g., because you run some
  embedded system with no BIOS at all) or Linux says it cannot use
  your PCI BIOS, you can enable direct PCI hardware here. It might fail
  if your machine is based on some unusual chipset, but it usually
  works. If both PCI BIOS and direct PCI access are enabled, the use
  of BIOS is preferred. If unsure, say Y.

PCI bridge optimization (experimental)
CONFIG_PCI_OPTIMIZE
  This can improve access times for some hardware devices if you have
  a really broken BIOS and your computer uses a PCI bus system. Set to Y
  if you think it might help, but try turning it off if you experience
  any problems with the PCI bus.

MCA support
CONFIG_MCA
  MicroChannel Architecture is found in some IBM PS/2 machines and
  laptops. It is a bus system similar to PCI or ISA.  See
  Documentation/mca.txt (and especially the web page given there)
  before attempting to build an MCA bus kernel.  Note that this is
  still experimental code.

System V IPC
CONFIG_SYSVIPC
  Inter Process Communication is a suite of library functions and system
  calls which let processes (= running programs) synchronize and
  exchange information. It is generally considered to be a good thing,
  and some programs won't run unless you say Y here. In particular,
  if you want to run the DOS emulator dosemu under Linux (read the
  DOSEMU-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO), you'll need to say Y here. You
  can find documentation about IPC in ipc.info, which is contained in
  sunsite.unc.edu:/pub/Linux/docs/man/info.tar.gz (extract with "tar
  xzvf filename"). These docs are in the info format which is used to
  document GNU software and can be read from within emacs ("Ctrl-h i")
  or with the program info ("man info"). Saying Y here enlarges
  your kernel by about 7kB. Just say Y.

Sysctl support
CONFIG_SYSCTL
  The sysctl interface provides a means of dynamically changing certain
  kernel parameters and variables on the fly without requiring a
  recompile of the kernel or reboot of the system. The primary interface
  consists of a system call, but if the /proc filesystem is enabled, a
  tree of modifiable sysctl entries will be generated beneath the 
  /proc/sys directory. Note that enabling this option will enlarge the 
  kernel by at least 8kB. As it is generally a good thing, you probably
  want to say Y here unless building a kernel for install/rescue disks
  or your system is very limited in memory.

Kernel support for ELF binaries
CONFIG_BINFMT_ELF
  ELF (Executable and Linkable Format) is a format for libraries and
  executables used across different architectures and operating
  systems. This option will enable your kernel to run ELF binaries and
  enlarge it by about 2kB. ELF support under Linux is quickly
  replacing the traditional Linux a.out formats (QMAGIC and ZMAGIC)
  because it is portable (this does *not* mean that you will be able
  to run executables from different architectures or operating
  systems!) and makes building run-time libraries very easy. Many new
  executables are distributed solely in ELF format. You definitely
  want to say Y here. Information about ELF is on the WWW at
  http://www.sjc.ox.ac.uk/users/barlow/elf-howto.html (To browse the
  WWW, you need to have access to a machine on the Internet that has a
  programs like lynx or netscape).  If you find that after upgrading
  to Linux kernel 1.3 and saying Y here, you still can't run any ELF
  binaries (they just crash), then you'll have to install the newest
  ELF runtime libraries, including ld.so (check the file
  Documentation/Changes for location and latest version). If you want
  to compile this as a module ( = code which can be inserted in and
  removed from the running kernel whenever you want), say M here and
  read Documentation/modules.txt. The module will be called
  binfmt_elf.o. Saying M or N here is dangerous because some crucial
  programs on your system might be in ELF format.

Kernel support for A.OUT binaries
CONFIG_BINFMT_AOUT
  A.out (Assembler.OUTput) is a set of formats for libraries and
  executables used in the earliest versions of UNIX. Linux used the
  a.out formats QMAGIC and ZMAGIC until they were replaced with the
  ELF format.
  As more and more programs are converted to ELF, the use for a.out
  will gradually diminish. If you disable this option it will reduce
  your kernel by one page. This is not much and by itself does not
  warrant removing support. However its removal is a good idea if you
  wish to ensure that absolutely none of your programs will use this
  older executable format. If you don't know what to answer at this
  point then answer Y. If someone told you "You need a kernel with
  QMAGIC support" then you'll have to say Y here. You may answer M to
  compile a.out support as a module and later load the module when you
  want to use a program or library in a.out format. The module will be
  called binfmt_aout.o. Saying M or N here is dangerous though,
  because some crucial programs on your system might still be in A.OUT
  format.

Kernel support for JAVA binaries
CONFIG_BINFMT_JAVA
  JAVA(tm) is an object oriented programming language developed by
  SUN; JAVA programs are compiled into "JAVA bytecode" binaries which
  can then be interpreted by run time systems on many different
  operating systems.  These JAVA binaries are becoming a universal
  executable format. If you want to execute JAVA binaries, read the
  Java on Linux HOWTO, available via ftp (user: anonymous) at
  sunsite.unc.edu:/pub/Linux/docs/HOWTO. You will then need to install
  the run time system contained in the Java Developers Kit (JDK) as
  described in the HOWTO. This is completely independent of the Linux
  kernel and you do NOT need to say Y here for this to work.
  Saying Y here allows you to execute a JAVA bytecode binary just like
  any other Linux program: by simply typing in its name. (You also
  need to have the JDK installed for this to work).  As more and more
  Java programs become available, the use for this will gradually
  increase. You can even execute HTML files containing JAVA applets (=
  JAVA binaries) if those files start with the string
  "<!--applet-->". If you want to use this, say Y here and read
  Documentation/java.txt. If you disable this option it will reduce
  your kernel by about 4kB. This is not much and by itself does not
  warrant removing support. However its removal is a good idea if you
  do not have the JDK installed. You may answer M for module support
  and later load the module when you install the JDK or find an
  interesting Java program that you can't live without. The module
  will be called binfmt_java.o. If you don't know what to answer at
  this point then answer Y.

Kernel support for Linux/Intel ELF binaries
CONFIG_BINFMT_EM86
  Say Y here if you want to be able to execute Linux/Intel ELF
  binaries just like native Alpha binaries on your machine. For this
  to work, you need to have the emulator /usr/bin/em86 in place.  You
  may answer M to compile the emulation support as a module and later
  load the module when you want to use a Linux/Intel binary. The
  module will be called binfmt_em86.o.  If unsure, say Y.

Kernel support for MISC binaries
CONFIG_BINFMT_MISC
  This enables the possibility to plug wrapper-driven binary formats
  into the kernel. You will like this especially when you use programs
  that need an interpreter to run like Java, Python or
  Emacs-Lisp. Once you have registered such a binary class with the
  kernel, you can start such a program simply by typing in its name;
  Linux will feed it to the correct interpreter. If you say Y here,
  you won't need "Kernel support for JAVA binaries"
  (CONFIG_BINFMT_JAVA) or "Kernel support for Linux/Intel ELF
  binaries" (CONFIG_BINFMT_EM86), as this is a more general solution.
  You can do other nice things, too. Read
  Documentation/binfmt_misc.txt to learn how to use this feature.
  You must enable the "proc filesystem support" (CONFIG_PROC_FS) to
  use this part of the kernel.
  You may answer M for module support and later load the module when
  you have use for it.  
  If you don't know what to answer at this point, say Y.

Processor family
CONFIG_M386
  This is the processor type of your CPU. This information is used for
  optimizing purposes. In order to compile a kernel that can run on
  all x86 CPU types (albeit not optimally fast), you can specify
  "386" here.  If you specify one of "486" or "Pentium" or "PPro",
  then the kernel will run on all of these CPUs: 486 and Pentium
  (=586) and Pentium Pro (=686). In rare cases, it can make sense to
  specify "Pentium" even if running on a 486: the kernel will be
  smaller but slower. If you don't know what to do, say "386".

Video mode selection support
CONFIG_VIDEO_SELECT
  This enables support for text mode selection on kernel startup. If
  you want to take advantage of some high-resolution text mode your
  card's BIOS offers, but the traditional Linux utilities like
  SVGATextMode don't, you can say Y here and set the mode using the
  "vga=" option from your boot loader (lilo or loadlin) or set
  "vga=ask" which brings up a video mode menu on kernel startup. Try
  "man bootparam" or see the documentation of your boot loader about
  how to pass options to the kernel. The lilo procedure is also
  explained in the SCSI-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO.  Read Documentation/svga.txt
  for more information about the Video mode selection support. If
  unsure, say N.

Parallel-port support
CONFIG_PARPORT
  If you want to use devices connected to your parallel port (the
  connector at the computers with 25 holes), e.g. printer, Zip drive,
  PLIP link etc., then you need to enable this option; please read
  Documentation/parport.txt and drivers/misc/BUGS-parport.  It
  is possible to share a single parallel port among several devices
  and it is safe to compile all the corresponding drivers into the
  kernel. If you want to compile parallel port support as a module ( =
  code which can be inserted in and removed from the running kernel
  whenever you want), say M here and read
  Documentation/modules.txt. The module will be called parport.o.  If
  you have more than one parallel port and want to specify which port
  and IRQ to use by this driver at module load time, read
  Documentation/networking/net-modules.txt.

PC-style hardware 
CONFIG_PARPORT_PC
  You should enable this option if you have a PC-style parallel
  port. All IBM PC compatible computers and some Alphas have PC-style
  parallel ports.  This driver is also available as a module which
  will be called parport_pc.o.

Compile the kernel into the ELF object format 
CONFIG_ELF_KERNEL
  ELF (Executable and Linkable Format) is a format for libraries and
  executables used across different architectures and operating
  systems. This option will cause the resulting kernel to be in ELF
  format, which is generally desirable, so say Y. However, it only
  works if your compiler and linker can produce ELF code.

Is your ELF compiler an extra compiler
CONFIG_EXTRA_ELF_COMPILER
  If you have a linuxelf-gcc as opposed to linux-gcc, say Y, otherwise
  N.

Generate little endian code
CONFIG_CPU_LITTLE_ENDIAN
  If your compiler is mipsel-linux-gcc or mipsel-linuxelf-gcc (as
  opposed to mips-linux-gcc or mips-linuxelf-gcc), say Y here,
  otherwise N. Most MIPS machines use little-endian code, but it might
  be necessary to run older Mips systems, such as the Sony News and
  MIPS RC3xxx, in big endian mode.

Plug and Play support
CONFIG_PNP
  Plug and Play support allows the kernel to automatically configure some
  peripheral devices.  Say Y to enable PnP.

Auto-probe for parallel devices
CONFIG_PNP_PARPORT
  Some IEEE-1284 conformant parallel-port devices can identify themselves
  when requested.  If this option is enabled the kernel will probe to see
  what devices are connected at boot time.

Plug and Play subsystem (EXPERIMENTAL)
CONFIG_PNP_DRV
  This enables support for the new Plug-and-Play (or PnP) Linux
  subsystems. This support is required for PnP ISA support, and for PnP
  Legacy support. User-mode utilities for this support may be found at
  http://www.lpsg.demon.co.uk/pnp-linux.html.

PnP resource management
CONFIG_KERNEL_PNP_RESOURCE
  This option will cause the new PnP generic resource management
  routines to be used instead of the old routines request_xxx and
  free_xxx. Emulation routines are put in place to support the old
  calling style. This code support masks for IO decoding (required for
  Plug and Play devices). There is no need to enable this option unless
  you want to - these features will still be used where they are needed.
  However, enabling it will reduce your kernel size slightly, and also
  allow you to test this code more extensively.

Support for boot-loaded PnP configuration (RECOMMENDED)
CONFIG_PNP_BLDCONFIG
  This will enable support for preloading data about the configuration
  of any Plug-and-Play devices in the system into the kernel at boot
  time, which means that any devices required at boot can be configured
  at this time manually. Say Y unless you have a reason not to.

PnP ISA support
CONFIG_PNP_ISA
  This option is required to allow the Linux PnP subsystem to handle
  Plug and Play ISA devices. This includes full support for PnP ISA,
  including the I/O range check feature.

PnP ISA backwards-compatiblity support
CONFIG_PNP_ISA_COMPAT
  This option will enable partial backwards compatibility with drivers
  written using older versions (up to the last 0.2.x) of the PnP driver
  written by Tom Lees <tom@lpsg.demon.co.uk>.

PnP Legacy device support
CONFIG_PNP_LEGACY
  Before PnP ISA was standardized, several "jumperless", or
  "soft-configurable" boards were finding there way onto the market.
  These cards used somewhat proprietary mechanisms for configuring
  IRQs, DMAs, IO addresses, and memory ranges. These devices (mainly
  network cards, but also some sound card) can be configured as any
  other PnP device can by enabling this option, if appropriate drivers
  for these devices are available.

PnP sysctl support (RECOMMENDED)
CONFIG_PNP_SYSCTL
  This option enables support for the user-mode interface to the
  kernel-mode PnP systems. It requires that you enable CONFIG_SYSCTL.
  The only reason you might want to switch this off is if you aren't
  going to use user-mode utilities to configure PnP, and you want to
  save a couple of kilobytes of kernel space. Answer Y unless you know
  what you are doing. User-mode utilities and a library for accessing
  this interface may be found at
  http://www.lpsg.demon.co.uk/pnp-linux.html.

PnP auto-configures all devices on startup
CONFIG_PNP_BOOTINIT
  This option will allow the PnP subsystem to automatically configure
  all the   PnP devices it finds upon system startup (or at least
  attempt to). This is useful if you have older driver which do not use
  the Linux-PnP system to configure PnP devices, and which you need
  configured by PnP in order to use.

Enable loadable module support
CONFIG_MODULES
  Kernel modules are small pieces of compiled code which can be 
  inserted in or removed from the running kernel, using the
  programs insmod and rmmod. This is described in the file 
  Documentation/modules.txt. Modules can be device drivers, file 
  systems, binary executable formats, and so on. If you think that 
  you may want to make use of modules with this kernel in the future, 
  then say Y here. If unsure, say Y.

Set version information on all symbols for modules
CONFIG_MODVERSIONS
  Usually, modules have to be recompiled whenever you switch to a new
  kernel. Saying Y here makes it possible, and safe, to use the
  same modules even after compiling a new kernel; this requires the
  program modprobe. All the software needed for module support is in
  the modules package (check the file Documentation/Changes for
  location and latest version).  NOTE: if you say Y here but don't
  have the program genksyms (which is also contained in the above
  mentioned modules package), then the building of your kernel will
  fail.  If you are going to use modules that are generated from
  non-kernel sources, you would benefit from this option. Otherwise
  it's not that important. So, N ought to be a safe bet.

Kernel daemon support
CONFIG_KERNELD
  Normally when you have selected some drivers and/or filesystems to
  be created as loadable modules, you also have the responsibility to
  load the corresponding module (via insmod/modprobe) before you can
  use it.  If you select Y here, the kernel will take care of this all
  by itself, together with the user level daemon "kerneld".  Note that
  "kerneld" will also automatically unload all unused modules, so you
  don't have to use "rmmod" either.  kerneld will also provide support
  for different user-level beeper and screen blanker programs later
  on.  The "kerneld" daemon is included in the modules package (check
  Documentation/Changes for latest version and location). You will
  probably want to read the kerneld mini-HOWTO, available via ftp
  (user: anonymous) from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini. If unsure, say Y.

ARP daemon support (EXPERIMENTAL)
CONFIG_ARPD
  Normally, the kernel maintains an internal cache which maps IP 
  addresses to hardware addresses on the local network, so that
  Ethernet/Token Ring/ etc. frames are sent to the proper address on
  the physical networking layer.  For small networks having a few
  hundred directly connected hosts or less, keeping this address
  resolution (ARP) cache inside the kernel works well.  However,
  maintaining an internal ARP cache does not work well for very large
  switched networks, and will use a lot of kernel memory if TCP/IP
  connections are made to many machines on the network.  By saying Y
  here, the kernel's internal ARP cache will never grow to more than
  256 entries (the oldest entries are expired in a LIFO manner) and
  communication will be attempted with an external ARP daemon, arpd.
  This code is still experimental.  If you do say Y here, you should
  obtain a copy of arpd from http://www.loran.com/~layes/arpd/index.html, 
  and you should say Y to "Kernel/User network link driver", below.
  If unsure, say N.

TCP/IP networking
CONFIG_INET
  These are the protocols used on the Internet and on most local
  Ethernets. The safest is to say Y here (which will enlarge your
  kernel by about 35 kB), since some programs (e.g. the X window
  system) use TCP/IP even if your machine is not connected to any
  other computer. You will get the so-called loopback device which
  allows you to ping yourself (great fun, that!). This option is also
  necessary if you want to use the full power of term (term is a
  program which gives you almost full Internet connectivity if you
  have a regular dial up shell account on some Internet connected Unix
  computer. Read http://www.bart.nl/~patrickr/term-howto/Term-HOWTO.html).
  Short answer: say Y.

IP: multicasting
CONFIG_IP_MULTICAST
  This is code for addressing several networked computers at once,
  enlarging your kernel by about 2 kB. You need multicasting if you
  intend to participate in the MBONE, a high bandwidth network on top
  of the internet which carries audio and video broadcasts. More
  information about the MBONE is on the WWW at
  http://www.best.com/~prince/techinfo/mbone.html (to browse the WWW,
  you need to have access to a machine on the Internet that has a
  program like lynx or netscape). Information about the multicast
  capabilities of the various network cards is contained in
  drivers/net/README.multicast. For most people, it's safe to say N.

IP: optimize as router not host
CONFIG_IP_ROUTER
  Some Linux network drivers use a technique called copy and checksum
  to optimize host performance. For a machine which is forwarding most
  packets to another host this is however a loss. This parameter turns
  off copy and checksum from devices. It may make other changes in the
  future.
  Note that your box can only act as a router if you say Y to "/proc
  filesystem support" below and you enable IP forwarding in your
  kernel; you can do this from within a boot-time script like so:
    echo "1" > /proc/sys/net/ipv4/ip_forwarding
  after the /proc filesystem has been mounted.  If unsure, say N here.

IP: firewalling
CONFIG_IP_FIREWALL
  If you want to configure your Linux box as a firewall for a local
  TCP/IP based network, say Y here. This will enlarge your kernel by
  about 2kB. You may need to read the FIREWALL-HOWTO, available via
  ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO. Also, you will need the
  ipfwadm tool (available via ftp (user: anonymous) from
  ftp.xos.nl/pub/linux/ipfwadm/) to allow selective blocking of
  internet traffic based on type, origin and destination.  The
  firewalling code will only work if you say Y to "/proc filesystem
  support" below and IP forwarding is enabled in your kernel; do this
  from within a boot-time script like so: 
    echo "1" > /proc/sys/net/ipv4/ip_forwarding
  after the /proc filesystem has been mounted.  You need to say Y to
  "IP firewalling" in order to be able to use IP masquerading
  (i.e. local computers can chat with an outside host, but that
  outside host is made to think that it is talking to the firewall box
  -- makes the local network completely invisible and avoids the need
  to allocate valid IP host addresses for the machines on the local
  net) and IP packet accounting (keeping track of what is using all
  your network bandwidth) and IP transparent proxying (makes the
  computers on the local network think they're talking to a remote
  computer, while in reality the traffic is redirected by your Linux
  firewall to a local proxy server). If unsure, say N.

IP: firewall packet netlink device
CONFIG_IP_FIREWALL_NETLINK
  If you say Y here and when packets hit your Linux firewall and are
  blocked, the first 128 bytes of each such packet are passed on to
  optional user space monitoring software that can then look for
  attacks and take actions such as paging the administrator of the
  site. To use this, you need to create a character special file under
  /dev with major number 36 and minor number 3 using mknod ("man
  mknod"), and you need (to write) a program that reads from that
  device and takes appropriate action.

IP: accounting
CONFIG_IP_ACCT
  This keeps track of your IP network traffic and produces some
  statistics. Usually, you only want to say Y here if your box will be
  a router or a firewall for some local network. For the latter, you
  need to say Y to IP firewalling. The data is accessible with "cat
  /proc/net/ip_acct", so you want to say Y to the /proc filesystem
  below, if you say Y here. To specify what exactly should be
  recorded, you need the tool ipfwadm (available via ftp (user:
  anonymous) from ftp.xos.nl/pub/linux/ipfwadm/).

IP: kernel level autoconfiguration
CONFIG_IP_PNP
  This enables automatic configuration of IP addresses of devices and
  of the routing table during kernel boot, based on either information
  supplied at the kernel command line or by BOOTP or RARP protocols.
  You need to say Y only for diskless machines requiring network access
  to boot (see CONFIG_ROOT_NFS for more information about root volume
  mounted via NFS), because all other machines configure the network in
  their startup scripts.

BOOTP support
CONFIG_IP_PNP_BOOTP
  If you want your Linux box to mount its whole root filesystem from
  some other computer over the net via NFS and you want the IP address
  of your computer to be discovered automatically at boot time using
  the BOOTP protocol (a special protocol designed for doing this job),
  say Y here. In case the boot ROM of your network card was designed
  for booting Linux and does BOOTP itself, providing all necessary
  information on the kernel command line, you can say N here.  If
  unsure, say Y. Note that in case you want to use BOOTP, a BOOTP
  server must be operating on your network. Read
  Documentation/nfsroot.txt for details.

RARP support
CONFIG_IP_PNP_RARP
  If you want your Linux box to mount its whole root filesystem from
  some other computer over the net via NFS and you want the IP address
  of your computer to be discovered automatically at boot time using
  the RARP protocol (an older protocol which is being obsoleted by
  BOOTP and DHCP), say Y here. Note that in case you want to use RARP,
  a RARP server must be operating on your network. Read
  Documentation/nfsroot.txt for details.

IP: tunneling
CONFIG_NET_IPIP
  Tunneling means encapsulating data of one protocol type within
  another protocol and sending it over a channel that understands the
  encapsulating protocol. This particular tunneling driver implements
  encapsulation of IP within IP, which sounds kind of pointless, but
  can be useful if you want to make your (or some other) machine
  appear on a different network than it physically is, or to use
  mobile-IP facilities (allowing laptops to seamlessly move between
  networks without changing their IP addresses; check out
  http://anchor.cs.binghamton.edu/~mobileip/LJ/index.html). Saying Y
  to this option will produce two modules ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  one encapsulator called tunnel.o and one decapsulator called
  ipip.o. You can read details in drivers/net/README.tunnel. Most
  people won't need this and can say N.

IP: GRE tunnels over IP
CONFIG_NET_IPGRE
  Another kind of tunneling protocol - "Generic Routing Encapsulation".
  It allows to tunnel any networking protocol over existing IPv4
  infrastructure. At the moment only IPv4 and IPv6 are supported.
  It is useful, if another endpoint is Cisco router: it likes
  GRE much more than IPIP and, particularly, allows multicasts
  redistribution over GRE tunnels.

IP: broadcast GRE over IP
CONFIG_NET_IPGRE_BROADCAST
  One application of GRE/IP, allowing to construct broadcast LAN,
  looking like ethernet network, distributed over the Internet.
  It requires, that your domain supported multicast routing.

IP: firewall packet logging
CONFIG_IP_FIREWALL_VERBOSE
  This gives you information about what your firewall did with
  packets it received. The information is handled by the klogd demon
  which is responsible for kernel messages ("man klogd").

IP: transparent proxying
CONFIG_IP_TRANSPARENT_PROXY
  This enables your Linux firewall to transparently redirect any
  network traffic originating from the local network and destined
  for a remote host to a local server, called a "transparent proxy
  server".  This makes the local computers think they are talking to
  the remote end, while in fact they are connected to the local
  proxy. Redirection is activated by defining special input firewall
  rules (using the ipfwadm utility) and/or by doing an appropriate
  bind() system call.

IP: masquerading
CONFIG_IP_MASQUERADE
  If one of the computers on your local network for which your Linux
  box acts as a firewall wants to send something to the outside, your
  box can "masquerade" as that computer, i.e. it forwards the traffic
  to the intended outside destination, but makes it look like it came
  from the firewall box itself. It works both ways: if the outside
  host replies, the Linux firewall will silently forward the traffic
  to the corresponding local computer. This way, the computers on your
  local net are completely invisible to the outside world, even though
  they can reach the outside and can be reached. This makes it
  possible to have the computers on the local network participate on
  the internet even if they don't have officially registered IP
  addresses.  (This last problem can also be solved by connecting the
  Linux box to the Internet using SLiRP [SLiRP is a SLIP/PPP emulator
  that works if you have a regular dial up shell account on some UNIX
  computer; get it via ftp (user: anonymous) from
  ftp://sunsite.unc.edu/pub/Linux/system/Network/serial/].)  Details
  on how to set things up are contained in the IP Masquerading FAQ,
  available at http://www.indyramp.com/masq/. If you say Y here, then
  the modules ip_masq_ftp.o (for ftp transfers through the firewall),
  ip_masq_irc.o (for irc chats through the firewall), and
  ip_masq_raudio.o (for realaudio downloads through the firewall) will
  automatically be compiled. Modules are pieces of code which can be
  inserted in and removed from the running kernel whenever you want;
  read Documentation/modules.txt for details.

IP: always defragment 
CONFIG_IP_ALWAYS_DEFRAG
  This option means that all incoming fragments (= parts of IP packets
  that arose when some host between origin and destination decided
  that the IP packets were too large and cut them in pieces) will be
  reassembled (defragmented) before being processed, even if they are
  about to be forwarded.  This option is highly recommended if you
  have said Y to "IP: masquerading" because that facility requires
  that second and further fragments can be related to TCP or UDP port
  numbers, which are only stored in the first fragment.  When using
  "IP: firewalling" support , you might also want to say Y here, to
  have a more reliable firewall (otherwise second and further
  fragments will always be accepted by the firewall).  When using "IP:
  transparent proxying", this option is implicit, although it is safe
  to say Y here. Do not say Y to this option except when running
  either a firewall that is the sole link to your network or a
  transparent proxy. Never ever say Y to this for a normal router or
  host.

IP: aliasing support
CONFIG_IP_ALIAS
  Sometimes it is useful to give several IP addresses to a single
  physical network interface (= serial port or ethernet card). The
  most common case is that you want to serve different WWW or ftp
  documents to the outside according to which of your host names was
  used to connect to you. This is called "multihosting" or "virtual
  domains" and is explained in detail on the WWW at
  http://www.thesphere.com/~dlp/TwoServers/ (to browse the WWW, you
  need to have access to a machine on the Internet that has a program
  like lynx or netscape). Another scenario would be that there are two
  logical networks living on your local ethernet and you want to
  access them both with the same ethernet card. The configuration of
  these alias addresses is done with a special name syntax explained
  in Documentation/networking/alias.txt. If you want this, say Y. Most
  people don't need it and say N.

IP: multicast routing
CONFIG_IP_MROUTE
  This is used if you want your machine to act as a router for IP
  packets that have several destination addresses. It is needed on the
  MBONE, a high bandwidth network on top of the internet which carries
  audio and video broadcasts. In order to do that, you would most
  likely run the program mrouted. Information about the multicast
  capabilities of the various network cards is contained in
  drivers/net/README.multicast. If you haven't heard about it, you
  don't need it.

IP: PIM-SM version 1 support
CONFIG_IP_PIMSM_V1
  Kernel side support for Sparse Mode PIM version 1. This multicast
  routing protocol is used widely due to Cisco supports it.
  You need special software to use it (pimd-v1). Press N, if
  you do not want to use PIM-SM v1. Note, that Dense Mode PIM
  need not this option.

IP: PIM-SM version 2 support
CONFIG_IP_PIMSM_V2
  Kernel side support for Sparse Mode PIM version 2. You need
  experimental routing daemon supporting it (pimd or gated-5).
  This protocol is not used widely, so that press Y, if you
  do not want play with it.

PC/TCP compatibility mode
CONFIG_INET_PCTCP
  If you have been having difficulties telneting to your Linux machine
  from a DOS system that uses (broken) PC/TCP networking software (all
  versions up to OnNet 2.0) over your local ethernet try saying Y
  here.  Everyone else says N. People having problems with NCSA telnet
  should see the file linux/Documentation/networking/ncsa-telnet.

Reverse ARP
CONFIG_INET_RARP
  Since you asked: if there are (usually diskless or portable)
  machines on your local network that know their hardware ethernet
  addresses but don't know their IP addresses upon startup, they can
  send out a Reverse Address Resolution Protocol (RARP) request to
  find out their own IP addresses. Diskless Sun 3 machines use this
  procedure at boot time. If you want your Linux box to be able to
  *answer* such requests, say Y here; you'd have to run the program
  rarp ("man rarp") on your box. If you actually want to use a
  diskless Sun 3 machine as an Xterminal to Linux, say Y here and
  fetch Linux-Xkernel from
  ftp://sunsite.unc.edu/pub/Linux/system/Network/boot.net/.  Superior
  solutions to the problem of booting and configuring machines over a
  net connection are given by the protocol BOOTP and its successor
  DHCP. See the DHCP FAQ
  http://web.syr.edu/~jmwobus/comfaqs/dhcp.faq.html for details.  If
  you want to compile RARP support as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called rarp.o.  If you don't understand a word of the above, say N
  and rest in peace.

Assume subnets are local
CONFIG_INET_SNARL
  Say Y if you are on a subnetted network with all machines connected
  by Ethernet segments only, as this option optimizes network access
  for this special case. If there are other connections, e.g. SLIP
  links, between machines of your IP network, say N.  If in doubt, say
  N. The PATH mtu discovery facility will cover most cases anyway.

Disable Path MTU Discovery (normally enabled)
CONFIG_NO_PATH_MTU_DISCOVERY
  MTU (maximal transfer unit) is the size of the chunks we send out
  over the net. "Path MTU Discovery" means that, instead of always
  sending very small chunks, we start out sending big ones and if we
  then discover that some host along the way likes its chunks smaller,
  we adjust to a smaller size. This is good, so most people say N
  here, thereby not disabling it. However, some DOS software (versions
  of DOS NCSA telnet and Trumpet Winsock in PPP mode) is broken and
  won't be able to connect to your Linux machine correctly in all
  cases (especially through a terminal server) unless you say Y
  here. See Documentation/networking/ncsa-telnet for the location of
  fixed NCSA telnet clients. If in doubt, say N.

Path MTU Discovery (normally enabled)
CONFIG_PATH_MTU_DISCOVERY
  MTU (maximal transfer unit) is the size of the chunks we send out
  over the net. "Path MTU Discovery" means that, instead of always
  sending very small chunks, we start out sending big ones and if we
  then discover that some host along the way likes its chunks smaller,
  we adjust to a smaller size. This is good, so most people say
  Y here. However, some versions of DOS NCSA telnet (and other software)
  are broken and can only connect to your Linux machine if you say N
  here. See Documentation/networking/ncsa-telnet for the location
  of fixed NCSA telnet clients. If in doubt, say Y.

Disable NAGLE algorithm (normally enabled)
CONFIG_TCP_NAGLE_OFF
  The NAGLE algorithm works by requiring an acknowledgment before
  sending small IP frames (= packets).  This keeps tiny telnet and
  rlogin packets from congesting Wide Area Networks.  Most people
  strongly recommend to say N here, thereby leaving NAGLE
  enabled. Those programs that would benefit from disabling this
  facility can do it on a per connection basis themselves.

IP: Drop source routed frames
CONFIG_IP_NOSR
  Usually, the originator of an IP frame (= packet) specifies only the
  destination, and the hosts along the way do the routing, i.e. they
  decide how to forward the frame. However, there is a feature of the
  IP protocol that allows to specify the full route for a given frame
  already at its origin. A frame with such a fully specified route is
  called "source routed". The question now is whether we should honour
  these route requests when such frames arrive, or if we should
  drop all those frames instead. Honouring them can introduce security
  problems (and is rarely a useful feature), and hence it is recommended
  that you say Y here unless you really know what you're doing.

IP: Allow large windows (not recommend if <16Mb of memory)
CONFIG_SKB_LARGE
  On high speed, long distance networks the performance limit on 
  networking becomes the amount of data a machine can buffer until the
  other end confirms its reception. (At 45Mbit/second there are a lot
  of bits between New York and London ..). This option allows larger
  amounts of data to be "in flight" at a given time. It also means a user
  process can require a lot more memory for network buffers and thus this
  option is best only used on machines with 16Mb of memory or higher. 
  Unless you are using long links with end to end speeds of over 2Mbit
  a second or   satellite links this option will make no difference to
  performance.

BSD Unix domain sockets
CONFIG_UNIX
  Y if you want BSD Unix domain sockets.  Unless you are working on an
  embedded system or somthing, you probably want to say Y.  If you try
  building this as a module and you are running kerneld, you need to make
  sure and add 'alias net-pf-1 unix' to your /etc/conf.module file.

The IPv6 protocol
CONFIG_IPV6
  This is experimental support for the next version of the Internet
  Protocol IP version 6 (also called IPng "IP next
  generation"). Features of this new protocol include: expanded
  address space, authentication and privacy, and seamless
  interoperability with the current version of IP. For general
  information about IPv6, see
  http://playground.sun.com/pub/ipng/html/ipng-main.html; for specific
  information about IPv6 under Linux read the HOWTO at
  http://www.terra.net/ipv6/ and the file net/ipv6/README in the
  kernel source. If you want to use IPv6, please upgrade to the newest
  net-tools as given in Documentation/Changes. The IPv6 support is
  also available as a module ( = code which can be inserted in and
  removed from the running kernel whenever you want). The module will
  be called ipv6.o. If you want to compile it as a module, say M here
  and read Documentation/modules.txt.  It's safe to say N for now.

IPv6: enable EUI-64 token format
CONFIG_IPV6_EUI64
  6bone is moving to new aggregatable address format and new link local
  address assignment (EUI-64). Say Y, if your site already upgraded, or
  started upgrade.

IPv6: disable provider based addresses
CONFIG_IPV6_NO_PB
  Linux tries to operate correctly, when site is moved to EUI-64
  only partially. Unfortunately, these two formats ("provider based"
  and "aggregatable") are incompatible. Say Y, if your site finished
  upgrade, and/or you encountered some problems caused by presense of
  two link-local addresses on an interface.

The IPX protocol
CONFIG_IPX
  This is support for the Novell networking protocol, IPX, commonly
  used for local networks of Windows machines. You need it if you want
  to access Novell Netware file or print servers using the Linux
  Novell client ncpfs (available via ftp (user: anonymous) from
  sunsite.unc.edu:/pub/Linux/system/Filesystems/) or from within the
  Linux DOS emulator dosemu (read the DOSEMU-HOWTO, available in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO). In order to do the former,
  you'll also have to say Y to "NCP filesystem support", below. To
  turn your Linux box into a fully featured Netware file server and
  IPX router, say Y here and fetch either lwared from
  sunsite.unc.edu:/pub/Linux/system/Network/daemons/ or mars_nwe from
  ftp.gwdg.de:/pub/linux/misc/ncpfs. For more information, read the
  IPX-HOWTO in sunsite.unc.edu:/pub/Linux/docs/howto. The IPX driver
  would enlarge your kernel by about 5 kB. This driver is also
  available as a module ( = code which can be inserted in and removed
  from the running kernel whenever you want). The module will be
  called ipx.o. If you want to compile it as a module, say M here
  and read Documentation/modules.txt.  Unless you want to integrate
  your Linux box with a local Novell network, say N.

Full internal IPX network
CONFIG_IPX_INTERN
  Every IPX network has an address that identifies it. Sometimes it is
  useful to give an IPX "network" address to your Linux box as well
  (for example if your box is acting as a fileserver for different IPX
  networks: it will then be accessible form everywhere using the same
  address).  The way this is done is to create a virtual internal
  "network" inside your box and to assign an IPX address to this
  network. Say Y here if you want to do this; read the IPX-HOWTO at
  sunsite.unc.edu:/pub/Linux/docs/howto for details.  
  The full internal IPX network enables you to allocate sockets on
  different virtual nodes of the internal network. This is done by
  evaluating the field sipx_node of the socket address given to the
  bind call. So applications should always initialize the node field
  to 0 when binding a socket on the primary network. In this case the
  socket is assigned the default node that has been given to the
  kernel when the internal network was created.  By enabling the full
  internal IPX network the cross-forwarding of packets targeted at
  'special' sockets to sockets listening on the primary network is
  disabled. This might break existing applications, especially RIP/SAP
  daemons. A RIP/SAP daemon that works well with the full internal net
  can be found on ftp.gwdg.de:/pub/linux/misc/ncpfs.  If you don't
  know what you are doing, say N.

IPX Type 20 Routing
CONFIG_IPX_PPROP_ROUTING
  IPX Type 20 packets are special broadcast messages designed to work
  across routers.  If you are using an internal network, have multiple
  interfaces that route IPX, or will want to route IPX connections over
  ppp to internal networks, setting this will allow the type 20 packets
  to be propagated to all connected networks.  These packets are used by
  Novell NETBIOS and the NETBIOS name functions of SMB protocols that
  work over IPX (e.g. the "Network Neighborhood" on another popular OS
  cum GUI).  In brief, if your Linux box needs to route IPX packets,
  this should be set to Y.

Appletalk DDP
CONFIG_ATALK
  Appletalk is the way Apple computers speak to each other on a
  network. If your linux box is connected to such a network and you
  want to join the conversation, say Y. You will need to use the
  netatalk package so that your Linux box can act as a print and file
  server for macs as well as access appletalk printers. Check out
  http://artoo.hitchcock.org/~flowerpt/projects/linux-netatalk/ on the
  WWW for details (to browse the WWW, you need to have access to a
  machine on the Internet that has a program like lynx or
  netscape). EtherTalk is the name used for appletalk over ethernet
  and the cheaper and slower LocalTalk is appletalk over a proprietary
  apple network using serial links. Ethertalk and Localtalk is fully 
  supported by Linux. The NET-2-HOWTO, available via ftp (user: anonymous)
  in sunsite.unc.edu:/pub/Linux/docs/HOWTO contains valuable information
  as well. This driver is also available as a module ( = code which
  can be inserted in and removed from the running kernel whenever you
  want). The module will be called appletalk.o. If you want to compile
  it as a module, say M here and read Documentation/modules.txt. I
  hear that the GNU boycott of Apple is over, so even politically
  correct people are allowed to say Y here.

IP-over-DDP support
CONFIG_IPDDP
  This allows IP networking for users who only have Appletalk
  networking available.  This feature is experimental. Please see
  http://www.maths.unm.edu/~bradford/ltpc.html for support software.

Apple/Farallon LocalTalk PC card support
CONFIG_LTPC
  This allows you to use the AppleTalk PC card to connect to LocalTalk
  networks.  The card is also known as the Farallon PhoneNet PC card.
  If you are in doubt, this card is the one with the 65C02 chip on it.
  You also need version 1.3.3 or later of the netatalk package.
  This driver is experimental, which means that it may not work.
  See README.ltpc in the drivers/net directory, and the web site
  http://www.math.unm.edu/~bradford/ltpc.html

COPS LocalTalk PC card support
CONFIG_COPS
  This allows you to use COPS AppleTalk cards to connect to LocalTalk
  networks. You also need version 1.3.3 or later of the netatalk
  package.  This driver is experimental, which means that it may not
  work.  This driver will only work if you choose "Appletalk DDP"
  networking support, above.
  Please read the file Documentation/networking/README.cops.  See the
  web site http://www.math.unm.edu/~bradford/ltpc.html for localtalk
  IP tools.

Dayna firmware support
CONFIG_COPS_DAYNA
  Support COPS compatible cards with Dayna style firmware (Dayna
  DL2000/ Daynatalk/PC (half length), COPS LT-95, Farallon PhoneNET PC
  III, Farallon PhoneNET PC II).

Tangent firmware support
CONFIG_COPS_TANGENT
  Support COPS compatible cards with Tangent style firmware (Tangent
  ATB_II, Novell NL-1000, Daystar Digital LT-200.

Amateur Radio AX.25 Level 2
CONFIG_AX25
  This is the protocol used for computer communication over amateur
  radio. It is either used by itself for point-to-point links, or to
  carry other protocols such as tcp/ip. To use it, you need a device
  that connects your Linux box to your amateur radio. You can either
  use a low speed TNC (a Terminal Node Controller acts as a kind of
  modem connecting your computer's serial port to your radio's
  microphone input and speaker output) supporting the KISS protocol or
  one of the various SCC cards that are supported by the Ottawa PI,
  the Gracilis Packetwin or the generic Z8530 driver. Another option
  are the Baycom modem serial and parallel port hacks or the soundcard
  modem (supported by their own drivers). If you say Y here, you also
  have to say Y to one of those drivers. Information about where to
  get supporting software for Linux amateur radio as well as
  information about how to configure an AX.25 port is contained in the
  AX25-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO. You might also want to check
  out the file Documentation/networking/ax25.txt in the kernel
  source. More information about digital amateur radio in general is
  on the WWW at http://www.tapr.org/tapr/html/pkthome.html.  (To
  browse the WWW, you need to have access to a machine on the Internet
  that has a program like lynx or netscape).  This driver is also
  available as a module ( = code which can be inserted in and removed
  from the running kernel whenever you want). The module will be
  called ax25.o. If you want to compile it as a module, say M here and
  read Documentation/modules.txt.

AX.25 DAMA Slave support
CONFIG_AX25_DAMA_SLAVE
  DAMA is a mechanism to prevent collisions when doing AX.25
  networking. A DAMA server (called "master") accepts incoming traffic
  from clients (called "slaves") and redistributes it to other
  slaves. If you say Y here, your Linux box will act as a DAMA slave;
  this is transparent in that you don't have to do any special DAMA
  configuration. (Linux cannot yet act as a DAMA server.) If unsure,
  say N.

AX.25 DAMA Master support
CONFIG_AX25_DAMA_MASTER
  DAMA is a mechanism to prevent collisions when doing AX.25
  networking. A DAMA server (called "master") accepts incoming traffic
  from clients (called "slaves") and redistributes it to other
  slaves. If you say Y here, your Linux box will act as a DAMA server.
  If unsure, say N.

Amateur Radio NET/ROM
CONFIG_NETROM
  NET/ROM is a network layer protocol on top of AX.25 useful for
  routing.  A comprehensive listing of all the software for Linux
  amateur radio users as well as information about how to configure an
  AX.25 port is contained in the AX25-HOWTO, available via ftp (user:
  anonymous) in sunsite.unc.edu:/pub/Linux/docs/HOWTO. You also might
  want to check out the file Documentation/networking/ax25.txt. More
  information about digital amateur radio in general is on the WWW at
  http://www.tapr.org/tapr/html/pkthome.html (To browse the WWW, you
  need to have access to a machine on the Internet that has a program
  like lynx or netscape).  This driver is also available as a module (
  = code which can be inserted in and removed from the running kernel
  whenever you want). The module will be called netrom.o. If you want
  to compile it as a module, say M here and read
  Documentation/modules.txt.

AX.25 over Ethernet
CONFIG_BPQETHER
  AX.25 is the protocol used for computer communication over amateur
  radio. If you say Y here, you will be able to send and receive AX.25
  traffic over ethernet (also called "BPQ AX.25"), which could be
  useful if some other computer on your local network has a direct
  amateur radio connection.

Amateur Radio X.25 PLP (Rose)
CONFIG_ROSE
  The Packet Layer Protocol (PLP) is a way to route packets over X.25
  connections in general and amateur radio AX.25 connections in
  particular, essentially an alternative to NET/ROM.  A comprehensive
  listing of all the software for Linux amateur radio users as well as
  information about how to configure an AX.25 port is contained in the
  AX25-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO. You also might want to check
  out the file Documentation/networking/ax25.txt. More information
  about digital amateur radio in general is on the WWW at
  http://www.tapr.org/tapr/html/pkthome.html (To browse the WWW, you
  need to have access to a machine on the Internet that has a program
  like lynx or netscape).  This driver is also available as a module (
  = code which can be inserted in and removed from the running kernel
  whenever you want). The module will be called rose.o. If you want to
  compile it as a module, say M here and read
  Documentation/modules.txt.

CCITT X.25 Packet Layer
CONFIG_X25
  X.25 is a set of standardized network protocols, similar in scope to
  frame relay; the one physical line from your box to the entry point
  to the X.25 network can carry several logical point-to-point
  connections (called "virtual circuits") to other computers connected
  to the X.25 network. Governments, banks, and other organizations
  tend to use it to connect to each other or to form Wide Area
  Networks. Many countries have public X.25 networks.  X.25 consists
  of two protocols: the higher level Packet Layer Protocol (PLP) (say
  Y here if you want that) and the lower level data link layer
  protocol LAPB (say Y to "LAPB Data Link Driver" below if you want
  that). You can read more about X.25 at
  http://www.sangoma.com/x25.html and
  http://www.cisco.com/univercd/data/doc/software/11_0/rpcg/cx25.htm.
  Information about X.25 for Linux is contained in the files
  Documentation/networking/x25.txt and
  Documentation/networking/x25-iface.txt.  One connects to an X.25
  network either with a dedicated network card using the X.21 protocol
  (not yet supported by Linux) or one can do X.25 over a standard
  telephone line using an ordinary modem (say Y to "X.25 async driver"
  below) or over ethernet using an ordinary ethernet card and either
  the 802.2 LLC protocol (say Y to "802.2 LLC" below) or LAPB over
  ethernet (say Y to "LAPB Data Link Driver" and "LAPB over Ethernet
  driver" below).  If you want to compile this driver as a module ( =
  code which can be inserted in and removed from the running kernel
  whenever you want), say M here and read
  Documentation/modules.txt. The module will be called x25.o. If
  unsure, say N.

LAPB Data Link Driver (EXPERIMENTAL) 
CONFIG_LAPB
  Link Access Procedure, Balanced (LAPB) is the data link layer
  (i.e. the lower) part of the X.25 protocol. It offers a reliable
  connection service to exchange data frames with one other host, and
  it is used to transport higher level protocols (mostly X.25 Packet
  Layer, the higher part of X.25, but others are possible as
  well). Usually, LAPB is used with specialized X.21 network cards, but
  Linux currently supports LAPB only over ethernet connections. If you
  want to use LAPB connections over ethernet, say Y here and to "LAPB
  over Ethernet driver" below.  Read
  Documentation/networking/lapb-module.txt for technical details.  If
  you want to compile this driver as a module though ( = code which
  can be inserted in and removed from the running kernel whenever you
  want), say M here and read Documentation/modules.txt. The module
  will be called lapb.o.  If unsure, say N.

802.2 LLC (VERY EXPERIMENTAL)
CONFIG_LLC
  This is a Logical Link Layer protocol used for X.25 connections over
  ethernet, using ordinary ethernet cards. 
  
Bridging (EXPERIMENTAL)
CONFIG_BRIDGE
  If you say Y here, then your Linux box will be able to act as an
  ethernet bridge, which means that the different ethernet segments it
  is connected to will appear as one ethernet to the
  participants. Several such bridges can work together to create even
  larger networks of ethernets using the IEEE802.1 spanning tree
  algorithm. As this is a standard, Linux bridges will interwork
  properly with other third party bridge products. In order to use
  this, you'll need the bridge configuration tools available via ftp
  (user: anonymous) from shadow.cabi.net. Note that if your box acts
  as a bridge, it probably contains several ethernet devices, but the
  kernel is not able to recognize more than one at boot time without
  help; for details read the Multiple-Ethernet-mini-HOWTO, available
  via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini. The Bridging code is
  still in test. If unsure, say N.

Kernel/User network link driver
CONFIG_NETLINK
  This driver allows for two-way communication between certain parts
  of the kernel or modules and user processes; the user processes are
  able to read from and write to character special files in the /dev
  directory having major mode 36. So far, the kernel uses it to
  publish some network related information if you say Y to "Routing
  messages", below. It is also used by the firewall code if you say Y
  to "Kernel/User network link driver" further down.  You also need to
  say Y here if you want to use arpd, a daemon that helps keep the
  internal ARP cache (a mapping between IP addresses and hardware
  addresses on the local network) small. If unsure, say N.

Routing messages
CONFIG_RTNETLINK
  If you say Y here and create a character special file /dev/route
  with major number 36 and minor number 0 using mknod ("man mknod"),
  you can read some network related routing information from that
  file. Everything you write to that file will be discarded.

SCSI support?
CONFIG_SCSI
  If you want to use a SCSI harddisk, SCSI tapedrive, SCSI CDROM or
  any other SCSI device under Linux, say Y and make sure that you know
  the name of your SCSI host adapter (the card inside your computer
  that "speaks" the SCSI protocol), because you will be asked for
  it. You also need to say Y here if you want support for the parallel
  port version of the 100MB IOMEGA ZIP drive. Please read the
  SCSI-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO.  This driver is also
  available as a module ( = code which can be inserted in and removed
  from the running kernel whenever you want). The module will be
  called scsi_mod.o. If you want to compile it as a module, say M here
  and read Documentation/modules.txt and
  Documentation/scsi.txt. However, do not compile this as a module if
  your root filesystem (the one containing the directory /) is located
  on a SCSI device.

SCSI disk support
CONFIG_BLK_DEV_SD
  If you want to use a SCSI harddisk or the SCSI or parallel port
  version of the IOMEGA ZIP drive under Linux, say Y and read the
  SCSI-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO. This is NOT for SCSI
  CDROMs. This driver is also available as a module ( = code which can
  be inserted in and removed from the running kernel whenever you
  want). The module will be called sd_mod.o. If you want to compile it
  as a module, say M here and read Documentation/modules.txt and
  Documentation/scsi.txt. Do not compile this driver as a module if
  your root filesystem (the one containing the directory /) is located
  on a SCSI disk. In this case, do not compile the driver for your
  SCSI host adapter (below) as a module either.
  
SCSI tape support
CONFIG_CHR_DEV_ST
  If you want to use a SCSI tapedrive under Linux, say Y and read the
  SCSI-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO and drivers/scsi/README.st in
  the kernel source. This is NOT for SCSI CDROMs. This driver is also
  available as a module ( = code which can be inserted in and removed
  from the running kernel whenever you want). The module will be
  called st.o. If you want to compile it as a module, say M here
  and read Documentation/modules.txt and Documentation/scsi.txt .

SCSI CDROM support
CONFIG_BLK_DEV_SR
  If you want to use a SCSI CDROM under Linux, say Y and read the
  SCSI-HOWTO and the CDROM-HOWTO from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO. Also make sure to say Y to
  "ISO9660 cdrom filesystem support" later. This driver is also
  available as a module ( = code which can be inserted in and removed
  from the running kernel whenever you want). The module will be
  called sr_mod.o. If you want to compile it as a module, say M here
  and read Documentation/modules.txt and Documentation/scsi.txt .

Enable vendor-specific extensions (for SCSI CDROM)
CONFIG_BLK_DEV_SR_VENDOR
  This enables the usage of vendor specific SCSI commands. This is
  required to support multisession CD's on with old NEC/TOSHIBA
  cdrom drives (and HP Writers). If you have such a drive and get
  the first session only, try to turn this on. Most drives should
  work fine without this.

SCSI generic support
CONFIG_CHR_DEV_SG
  If you want to use SCSI scanners, synthesizers or CD-writers or just
  about anything having "SCSI" in its name other than harddisks,
  CDROMs or tapes, say Y here. Those won't be supported by the kernel
  directly, so you need some additional software which knows how to
  talk to these devices using the SCSI protocol. For CD-writers, you
  would need the program cdwrite, available via ftp (user: anonymous)
  from sunsite.unc.edu:/pub/Linux/utils/disk-management; for other
  devices, it's possible that you'll have to write the driver software
  yourself, so have a look at the SCSI-HOWTO and at the
  SCSI-Programming-HOWTO, both available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO. If you want to compile this
  as a module ( = code which can be inserted in and removed from the
  running kernel whenever you want), say M here and read
  Documentation/modules.txt and Documentation/scsi.txt. The module
  will be called sg.o. If unsure, say N.

Probe all LUNs on each SCSI device
CONFIG_SCSI_MULTI_LUN
  If you have a SCSI device that supports more than one LUN (Logical
  Unit Number), e.g. a CD jukebox, and only one LUN is detected, you
  can say Y here to force the SCSI driver to probe for multiple LUNs. 
  A SCSI device with multiple LUNs acts logically like multiple SCSI
  devices.  The vast majority of SCSI devices have only one LUN, and
  so most people can say N here and should in fact do so, because it
  is safer.

Verbose SCSI error reporting (kernel size +=12K)
CONFIG_SCSI_CONSTANTS
  The error messages regarding your SCSI hardware will be easier to
  understand if you say Y here; it will enlarge your kernel by about
  12KB. If in doubt, say Y.

AdvanSys SCSI support
CONFIG_SCSI_ADVANSYS
  This is a driver for all SCSI host adapters manufactured by
  AdvanSys. It is documented in the kernel source in
  drivers/scsi/advansys.c. This driver is also available as a module (
  = code which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt. The module will be called
  advansys.o.

Adaptec AHA152X/2825 support
CONFIG_SCSI_AHA152X
  This is support for the AHA-1510, AHA-1520, AHA-1522, and AHA-2825
  SCSI host adapters. It is explained in section 3.3 of the
  SCSI-HOWTO, available via ftp (user: anonymous) at
  sunsite.unc.edu:/pub/Linux/docs/HOWTO. You might also want to read
  the comments at the top of drivers/scsi/aha152x.c. This driver is
  also available as a module ( = code which can be inserted in and
  removed from the running kernel whenever you want). The module will
  be called aha152x.o. If you want to compile it as a module, say M here
  and read Documentation/modules.txt.

Adaptec AHA1542 support
CONFIG_SCSI_AHA1542
  This is support for a SCSI host adapter. It is explained in section
  3.4 of the SCSI-HOWTO, available via ftp (user: anonymous) at
  sunsite.unc.edu:/pub/Linux/docs/HOWTO.  Note that Trantor was
  recently purchased by Adaptec, and some former Trantor products are
  being sold under the Adaptec name. If it doesn't work out of the
  box, you may have to change some settings in drivers/scsi/aha1542.h.
  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called aha1542.o.
 
Adaptec AHA1740 support
CONFIG_SCSI_AHA1740
  This is support for a SCSI host adapter. It is explained in section
  3.5 of the SCSI-HOWTO, available via ftp (user: anonymous) at
  sunsite.unc.edu:/pub/Linux/docs/HOWTO.  If it doesn't work out of
  the box, you may have to change some settings in
  drivers/scsi/aha1740.h. This driver is also available as a module (
  = code which can be inserted in and removed from the running kernel
  whenever you want). The module will be called aha17400.o. If you
  want to compile it as a module, say M here and read
  Documentation/modules.txt.

Adaptec AIC7xxx support (includes 274x/284x/294x)
CONFIG_SCSI_AIC7XXX
  Information about this SCSI host adapter is contained in
  drivers/scsi/README.aic7xxx and in the SCSI-HOWTO, available via ftp
  (user: anonymous) at sunsite.unc.edu:/pub/Linux/docs/HOWTO. Note
  that the AHA2920 SCSI host adapter is *not* supported by this
  driver; choose "Future Domain 16xx SCSI support" instead. If you
  want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/ modules.txt. The module will be
  called aic7xxx.o.

Enable tagged command queueing
CONFIG_AIC7XXX_TAGGED_QUEUEING
  This option allows you to enable tagged command queueing for this
  driver.  Some scsi devices do not properly support this
  feature.  Tagged command queueing will improve performance.

Override driver defaults for commands per LUN
CONFIG_OVERRIDE_CMDS
  This option allows you to set the maximum number of SCSI commands
  queued per LUN (Logical Unit Number - some physical SCSI devices,
  e.g. CD jukeboxes, act logically as several logical units).  If you
  say N here, the driver will attempt to set the commands per LUN
  using its own reasonable heuristic. If you say Y, you can specify
  your preference in the next question.  If unsure, say N.

Maximum number of commands per LUN
CONFIG_AIC7XXX_CMDS_PER_LUN
  If tagged queueing is enabled, then you may want to try increasing
  the number of SCSI commands per LUN to more than 2.  By default, we
  limit the commands per LUN to 2 with or without tagged queueing
  enabled.  If tagged queueing is disabled, the sequencer in the host
  adapter will keep the 2nd command in the input queue until the first
  one completes - so it is OK to have more than 1 command queued.  If
  tagged queueing is enabled, then the sequencer will attempt to send
  the 2nd command block to the device while the first command block is
  executing and the device is disconnected.  For adapters limited to 4
  command blocks (SCB's), you may want to actually decrease the
  commands per LUN to 1, if you often have more than 2 devices active
  at the same time.  This will ensure that there will always be a free
  SCB for up to 4 devices active at the same time.  When SCB paging is
  enabled, set the commands per LUN to 8 or higher (see "SCB paging
  support" below).  If unsure, go with the default for now.

Enable SCB paging
CONFIG_AIC7XXX_PAGE_ENABLE
  This option enables SCB paging.  This will increase performance when
  tagged queueing is enabled.  Note that, if you say Y here, you
  should increase the "Maximum number of commands per LUN"
  (AIC7XXX_CMDS_PER_LUN) above to 8 as most tagged queueing devices
  allow at least this many.  Note that EISA and VLB controllers do not
  support SCB paging due to chip limitations; enabling it on these
  controllers has no effect.

Collect statistics to report in /proc
CONFIG_AIC7XXX_PROC_STATS
  This option enables collection of SCSI transfer statistics for the
  /proc filesystem.  This does affect performance since it has to
  maintain statistics. The statistics will appear under
  /proc/scsi/aic7xxx. This will only work if you also enable the "proc
  filesystem", below.

Delay in seconds after SCSI bus reset
CONFIG_AIC7XXX_RESET_DELAY
  This option sets the delay in seconds after a SCSI bus reset. If you
  don't know what you are doing, go with the default.

BusLogic SCSI support
CONFIG_SCSI_BUSLOGIC
  This is support for BusLogic MultiMaster and FlashPoint SCSI Host
  Adapters.  Consult the SCSI-HOWTO, available via anonymous ftp from
  sunsite.unc.edu in /pub/Linux/docs/HOWTO, and the files
  README.BusLogic and README.FlashPoint in drivers/scsi for more
  information.  If this driver does not work correctly without
  modification, please contact the author, Leonard N. Zubkoff, by
  email to lnz@dandelion.com.  You can also build this driver as a
  module ( = code which can be inserted in and removed from the
  running kernel whenever you want), but only a single instance may be
  loaded.  If you want to compile it as a module, say M here and read
  Documentation/modules.txt. The module will be called BusLogic.o.

Omit BusLogic SCSI FlashPoint support
CONFIG_SCSI_OMIT_FLASHPOINT
  This option allows you to omit the FlashPoint support from the
  BusLogic SCSI driver.  The FlashPoint SCCB Manager code is
  substantial, so users of MultiMaster Host Adapters may wish to omit
  it.


DTC3180/3280 SCSI support
CONFIG_SCSI_DTC3280
  This is support for DTC 3180/3280 SCSI Host Adapters.  Please read
  the SCSI-HOWTO, available via ftp (user: anonymous) at
  sunsite.unc.edu:/pub/Linux/docs/HOWTO and the file
  drivers/scsi/README.dtc3x80.  This driver is also available as a
  module (= code which can be inserted in and removed from the running
  kernel whenever you want). The module will be called dtc.o. If you
  want to compile it as a module, say M here and read
  Documentation/modules.txt.

EATA-DMA (DPT, NEC, AT&T, SNI, AST, Olivetti, Alphatronix) support
CONFIG_SCSI_EATA_DMA
  This is support for the EATA-DMA protocol compliant SCSI Host
  Adapters like the SmartCache III/IV, SmartRAID controller families
  and the DPT PM2011B and PM2012B controllers.  Note that there is
  also another driver for the same hardware: "EATA ISA/EISA/PCI
  support". You should only say Y to one of them. Please read the
  SCSI-HOWTO, available via ftp (user: anonymous) at
  sunsite.unc.edu:/pub/Linux/docs/HOWTO.  This driver is also
  available as a module (= code which can be inserted in and removed
  from the running kernel whenever you want). The module will be
  called eata_dma.o. If you want to compile it as a module, say M here
  and read Documentation/modules.txt.

EATA-PIO (old DPT PM2001, PM2012A) support
CONFIG_SCSI_EATA_PIO
  This driver supports all EATA-PIO protocol compliant SCSI Host
  Adapters like the DPT PM2001 and the PM2012A. EATA-DMA compliant
  host adapters could also use this driver but are discouraged from
  doing so, since this driver only supports harddisks and lacks
  numerous features.  You might want to have a look at the SCSI-HOWTO,
  available via ftp (user: anonymous) at
  sunsite.unc.edu:/pub/Linux/docs/HOWTO.  If you want to compile this
  as a module ( = code which can be inserted in and removed from the
  running kernel whenever you want), say M here and read
  Documentation/modules.txt. The module will be called eata_pio.o.

UltraStor 14F/34F support
CONFIG_SCSI_U14_34F
  This is support for the UltraStor 14F and 34F SCSI-2 host adapters.
  The source at drivers/scsi/u14-34f.c contains some information about
  this hardware. If the driver doesn't work out of the box, you may
  have to change some settings in drivers/scsi/u14-34f.c.  Read the
  SCSI-HOWTO, available via ftp (user: anonymous) at
  sunsite.unc.edu:/pub/Linux/docs/HOWTO. Note that there is also
  another driver for the same hardware: "UltraStor SCSI support",
  below.  You should say Y to both only if you want 24F support as
  well. This driver is also available as a module ( = code which can
  be inserted in and removed from the running kernel whenever you
  want). The module will be called u14-34f.o. If you want to compile
  it as a module, say M here and read Documentation/modules.txt.

enable linked commands
CONFIG_SCSI_U14_34F_LINKED_COMMANDS
  This is a feature of SCSI-2 which improves performance: the host
  adapter can send a whole list of commands to a device in one
  batch. Some SCSI devices might not implement this properly, so the
  save answer is N.

maximum number of queued commands
CONFIG_SCSI_U14_34F_MAX_TAGS
  This specifies how many SCSI commands can be maximally queued for a
  given SCSI device. Go with the default unless you know what you're
  doing. Minimum is 2 and maximum is 8.

Future Domain 16xx SCSI/AHA 2920 support
CONFIG_SCSI_FUTURE_DOMAIN
  This is support for Future Domain's 16-bit SCSI host adapters
  (TMC-1660/1680, TMC-1650/1670, TMC-3260, TMC-1610M/MER/MEX) and
  other adapters based on the Future Domain chipsets (Quantum
  ISA-200S, ISA-250MG; Adaptec AHA-2920; and at least one IBM board).
  It is explained in section 3.7 of the SCSI-HOWTO, available via ftp
  (user: anonymous) at sunsite.unc.edu:/pub/Linux/docs/HOWTO.  This
  driver is also available as a module ( = code which can be inserted
  in and removed from the running kernel whenever you want). The
  module will be called fdomain.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

Generic NCR5380/53c400 SCSI support
CONFIG_SCSI_GENERIC_NCR5380
  This is the generic NCR family of SCSI controllers, not to be
  confused with the NCR 53c7 or 8xx controllers. It is explained in
  section 3.8 of the SCSI-HOWTO, available via ftp (user: anonymous)
  at sunsite.unc.edu:/pub/Linux/docs/HOWTO.  If it doesn't work out of
  the box, you may have to change some settings in
  drivers/scsi/g_NCR5380.h. This driver is also available as a module
  ( = code which can be inserted in and removed from the running
  kernel whenever you want). The module will be called g_NCR5380.o. If
  you want to compile it as a module, say M here and read
  Documentation/modules.txt.
 
Enable NCR53c400 extensions
CONFIG_SCSI_GENERIC_NCR53C400
  This enables certain optimizations for the NCR53c400 scsi cards. You
  might as well try it out. Note that this driver will only probe for
  the Trantor T130B in its default configuration; you might have to
  pass a command line option to the kernel at boot time if it doesn't
  detect your card. See the file drivers/scsi/README.g_NCR5380 for
  details.

NCR5380/53c400 mapping method (use Port for T130B)
CONFIG_SCSI_G_NCR5380_PORT
  The NCR5380 and NCR53c400 SCSI controllers come in two varieties:
  port or memory mapped. You should know what you have. The most
  common card, Trantor T130B, uses port mapped mode.

NCR53c7,8xx SCSI support
CONFIG_SCSI_NCR53C7xx
  This is the 53c7 and 8xx NCR family of SCSI controllers, not to be
  confused with the NCR 5380 controllers. It is explained in section
  3.8 of the SCSI-HOWTO, available via ftp (user: anonymous) at
  sunsite.unc.edu:/pub/Linux/docs/HOWTO. If it doesn't work out of the
  box, you may have to change some settings in
  drivers/scsi/53c7,8xx.h. This driver is also available as a module (
  = code which can be inserted in and removed from the running kernel
  whenever you want). The module will be called 53c7,8xx.o. If you
  want to compile it as a module, say M here and read
  Documentation/modules.txt.

always negotiate synchronous transfers
CONFIG_SCSI_NCR53C7xx_sync
  In general, this is good; however, it is a bit dangerous since there
  are some broken SCSI devices out there. Take your chances. Safe bet
  is N.

allow FAST-SCSI [10MHz]
CONFIG_SCSI_NCR53C7xx_FAST
  This will enable 10MHz FAST-SCSI transfers with your host
  adapter. Some systems have problems with that speed, so it's safest
  to say N here.
 
allow DISCONNECT
CONFIG_SCSI_NCR53C7xx_DISCONNECT
  This enables the disconnect/reconnect feature of the NCR SCSI
  controller.  When you say Y here, a slow SCSI device will not lock
  the SCSI bus while processing a request, allowing simultaneous use
  of e.g. a SCSI hard disk and SCSI tape or CD-ROM drive, and
  providing much better performance when using slow and fast SCSI
  devices at the same time. Some devices, however, do not operate
  properly with this option enabled, and will cause your SCSI system
  to hang, which might cause a system crash.  The safe answer
  therefore is to say N.

NCR53C8XX SCSI support
CONFIG_SCSI_NCR53C8XX
  This is the BSD ncr driver adapted to linux for the NCR53C8XX family
  of PCI-SCSI controllers. This driver supports parity checking,
  tagged command queuing, Fast-20 data transfer up to 20 MB/s with
  narrow scsi devices and 40 MB/s with wide scsi devices.
  Please read drivers/scsi/README.ncr53c8xx for more information.
  Linux/i386, Linux/Alpha and Linux/PPC are supported by this driver.

synchronous data transfers frequency
CONFIG_SCSI_NCR53C8XX_SYNC
  SCSI-2 specifications allow scsi devices to negotiate a synchronous 
  transfer period of 25 nano-seconds or more.
  The transfer period value is 4 times the agreed transfer period.
  So, data can be transferred at a 10 MHz frequency, allowing 10
  MB/second throughput with 8 bits scsi-2 devices and 20 MB/second
  with wide16 devices.  This frequency can be used safely with
  differential devices but may cause problems with singled-ended
  devices.
  Specify 0 if you want to only use asynchronous data transfers.
  Otherwise, specify a value between 5 and 10.  Commercial O/Ses
  generally use 5 Mhz frequency for synchronous transfers.  It is a
  reasonable default value.
  However, a flawless singled-ended scsi bus supports 10 MHz data
  transfers.  Regardless the value chosen in the Linux configuration,
  the synchronous period can be changed after boot-up through the
  /proc/scsi file system. The generic command is:
      echo "setsync #target period" >/proc/scsi/ncr53c8xx/0
  Use a 25 ns period for 10 Mhz synchronous data transfers.
  If you don't know what to do now, go with the default.

use normal IO
CONFIG_SCSI_NCR53C8XX_IOMAPPED
  This option allows you to force the driver to use normal IO.
  Memory mapped IO has less latency than normal IO and works for most 
  Intel-based hardware.  Under Linux/Alpha and Linux/PPC only normal 
  IO is currently supported by the driver and so, this option has no
  effect. On Linux/PPC MMIO and normal IO are done the same (all IO
  is memory mapped) so you loose nothing by using normal IO. The normal
  answer therefore is N. Try Y only if you have problems.

not allow targets to disconnect
CONFIG_SCSI_NCR53C8XX_NO_DISCONNECT
  This option is only provided for safety if you suspect some scsi
  device of yours to not support properly the target-disconnect
  feature. In that case, you would say Y here. In general however, to
  not allow targets to disconnect is not reasonable if there is more
  than 1 device on a scsi bus.  The normal answer therefore is N.

detect and read serial NVRAMs
CONFIG_SCSI_NCR53C8XX_NVRAM_DETECT
  Enable support for reading the serial NVRAM data on Symbios and some
  Symbios compatible cards, and Tekram DC390W/U/F cards. Useful for
  systems with more than one Symbios compatible controller where at
  least one has a serial NVRAM, or for a system with a mixture of
  Symbios and Tekram cards. Enables setting the boot order of host
  adaptors to something other than the default order or "reverse
  probe" order.  Also enables Symbios and Tekram cards to be
  distinguished so that the option "assume boards are SYMBIOS
  compatible" (CONFIG_SCSI_NCR53C8XX_SYMBIOS_COMPAT) below may be set
  in a system with a mixture of Symbios and Tekram cards so that the
  Symbios cards can make use of the full range of Symbios features,
  differential, led pin, without causing problems for the Tekram
  card(s).  Also enables setting host and targets SCSI features as
  defined in the user setup for each host using a serial NVRAM. Read
  drivers/scsi/README.ncr53c8xx for more information. The default
  answer is N, the normal answer should be Y.

enable tagged command queuing
CONFIG_SCSI_NCR53C8XX_TAGGED_QUEUE
  This option allows you to enable tagged command queuing support at
  linux start-up.  Some scsi devices do not properly support this
  feature.  The suggested method is to say N here and to use the
  "settags" control command after boot-up to enable this feature:
      echo "settags 2 4" >/proc/scsi/ncr53c8xx/0
  asks the driver to use up to 4 concurrent tagged commands for target
  2 of controller 0.
  See the file drivers/scsi/README.ncr53c8xx for more information.
  WARNING! If you say Y here, then you have to say N to "not allow
  targets to disconnect", above.
  The safe answer therefore is N.
  The normal answer therefore is Y.

maximum number of queued commands
CONFIG_SCSI_NCR53C8XX_MAX_TAGS
  This option allows you to specify the maximum number of commands
  that can be queued to a device, when tagged command queuing is
  possible.  The default value is 4. Minimum is 2, maximum is 12.  The
  normal answer therefore is the default one.

assume boards are SYMBIOS compatible
CONFIG_SCSI_NCR53C8XX_SYMBIOS_COMPAT
  This option allows you to enable some features depending on GPIO
  wiring.  These General Purpose Input/Output pins can be used for
  vendor specific features or implementation of the standard SYMBIOS
  features.  Genuine SYMBIOS boards use GPIO0 in output for controller
  LED and GPIO3 bit as a flag indicating singled-ended/differential
  interface.
  If all the boards of your system are genuine SYMBIOS boards or use
  BIOS and drivers from SYMBIOS, you would want to enable this option.
  The driver behaves correctly on my system with this option enabled.
  (SDMS 4.0 + Promise SCSI ULTRA 875 rev 0x3 + ASUS SC200 810A rev
  0x12).  This option must be set to N if your system has at least one
  53C8XX based scsi board with a vendor-specific BIOS (example: Tekram
  DC-390/U/W/F). 
  However, if all your non Symbios compatible boards have NvRAM,
  setting option "detect and read serial NVRAMs"
  (CONFIG_SCSI_NCR53C8XX_NVRAM_DETECT) above allows the driver to
  distinguish Symbios compatible boards from other ones.  So, you can
  answer Y if all non Symbios compatible boards have NVRAM.
  If unsure, say N.

IBMMCA SCSI support
CONFIG_SCSI_IBMMCA
  If your computer sports an MCA bus system architecture (IBM PS/2)
  with an SCSI harddrive, say Y here. Please read
  Documentation/mca.txt. This driver is also available as a module ( =
  code which can be inserted in and removed from the running kernel
  whenever you want). The module will be called ibmmca.o. If you want
  to compile it as a module, say M here and read
  Documentation/modules.txt.  
  Normally, all IBM MCA SCSI adapters are automatically detected. If
  that doesn't work right however, you can completely override
  auto-detection by specifying "ibmmcascsi=io1,io2,..." at the boot
  loader's command prompt or "io_port=io1,io2,... scsi_id=id1,id2,..."
  as a parameter of insmod.  "io" and "id" are the I/O base address
  and the SCSI ID of each adapter, respectively.
  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called ibmmca.o.

Always IN2000 SCSI support
CONFIG_SCSI_IN2000
  This is support for an ISA bus SCSI host adapter. You'll find more
  information in drivers/scsi/in2000.readme. If it doesn't work out of
  the box, you may have to change the jumpers for IRQ or address
  selection. If you want to compile this as a module ( = code which
  can be inserted in and removed from the running kernel whenever you
  want), say M here and read Documentation/modules.txt. The module
  will be called in2000.o.

PAS16 SCSI support
CONFIG_SCSI_PAS16
  This is support for a SCSI host adapter. It is explained in section
  3.10 of the SCSI-HOWTO, available via ftp (user: anonymous) at
  sunsite.unc.edu:/pub/Linux/docs/HOWTO. If it doesn't work out of the
  box, you may have to change some settings in drivers/scsi/pas16.h.
  This driver is also available as
  a module ( = code which can be inserted in and removed from the
  running kernel whenever you want). The module will be called
  pas16.o. If you want to compile it as a module, say M here and read
  Documentation/modules.txt.

Qlogic FAS SCSI support
CONFIG_SCSI_QLOGIC_FAS
  This driver works only with the ISA, VLB, and PCMCIA versions of the
  Qlogic FastSCSI! cards as well as any other card based on the FASXX
  chip (including the Control Concepts SCSI/IDE/SIO/PIO/FDC cards); it
  does NOT support the PCI version. The PCI versions are supported by
  the Qlogic ISP driver though.  Information about this driver is
  contained in drivers/scsi/README.qlogicfas.  You should also read
  the SCSI-HOWTO, available via ftp (user: anonymous) at
  sunsite.unc.edu:/pub/Linux/docs/HOWTO. This driver is also available
  as a module ( = code which can be inserted in and removed from the
  running kernel whenever you want). The module will be called
  qlogicfas.o. If you want to compile it as a module, say M here and
  read Documentation/modules.txt.

Qlogic ISP SCSI support (EXPERIMENTAL)
CONFIG_SCSI_QLOGIC_ISP
  This driver works for all QLogic PCI SCSI host adapters (IQ-PCI,
  IQ-PCI-10, IQ_PCI-D) except for the PCI-basic card. (This latter
  card is supported by the "AM53/79C974 PCI SCSI" driver). If you say
  Y here, make sure to say Y to "PCI BIOS support" as well. More
  information is contained in the file
  drivers/scsi/README.qlogicisp. You should also read the SCSI-HOWTO,
  available via ftp (user: anonymous) at
  sunsite.unc.edu:/pub/Linux/docs/HOWTO. This driver is also available
  as a module ( = code which can be inserted in and removed from the
  running kernel whenever you want). The module will be called
  qlogicisp.o. If you want to compile it as a module, say M here and
  read Documentation/modules.txt.

Seagate ST-02 and Future Domain TMC-8xx SCSI support
CONFIG_SCSI_SEAGATE
  These are 8-bit SCSI controllers; the ST-01 is also supported by
  this driver.  It is explained in section 3.9 of the SCSI-HOWTO,
  available via ftp (user: anonymous) at
  sunsite.unc.edu:/pub/Linux/docs/HOWTO. If it doesn't work out of the
  box, you may have to change some settings in drivers/scsi/seagate.h.
  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you
  want). The module will be called seagate.o. If you want to compile
  it as a module, say M here and read Documentation/modules.txt.

Trantor T128/T128F/T228 SCSI support
CONFIG_SCSI_T128
  This is support for a SCSI host adapter. It is explained in section
  3.11 of the SCSI-HOWTO, available via ftp (user: anonymous) at
  sunsite.unc.edu:/pub/Linux/docs/HOWTO.  If it doesn't work out of
  the box, you may have to change some settings in
  drivers/scsi/t128.h. Note that Trantor was purchased by Adaptec, and
  some former Trantor products are being sold under the Adaptec
  name. This driver is also available as a module ( = code which can
  be inserted in and removed from the running kernel whenever you
  want). The module will be called t128.o. If you want to compile it
  as a module, say M here and read Documentation/modules.txt.

UltraStor SCSI support
CONFIG_SCSI_ULTRASTOR
  This is support for the UltraStor 14F, 24F and 34F SCSI-2 host
  adapter family. This driver is explained in section 3.12 of the
  SCSI-HOWTO, available via ftp (user: anonymous) at
  sunsite.unc.edu:/pub/Linux/docs/HOWTO. If it doesn't work out of the
  box, you may have to change some settings in
  drivers/scsi/ultrastor.h. If you want to compile this as a module (
  = code which can be inserted in and removed from the running kernel
  whenever you want), say M here and read
  Documentation/modules.txt. The module will be called ultrastor.o.
  Note that there is also another driver for the same hardware:
  "UltraStor 14F/34F support", above.
 
7000FASST SCSI support
CONFIG_SCSI_7000FASST
  This driver supports the Western Digital 7000 SCSI host adapter.
  Some information is in the source: drivers/scsi/wd7000.c.  This
  driver is also available as a module ( = code which can be inserted
  in and removed from the running kernel whenever you want). The
  module will be called wd7000.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

EATA ISA/EISA/PCI (DPT and generic EATA/DMA-compliant boards) support
CONFIG_SCSI_EATA
  This driver supports all the EATA/DMA-compliant SCSI host adapters
  and does not need any BIOS32 service.  DPT ISA and all EISA i/o
  addresses are probed looking for the "EATA" signature. If you said Y
  to "PCI bios support", the addresses of all the PCI SCSI controllers
  reported by BIOS32 are probed as well.  Note that there is also
  another driver for the same hardware available: "EATA-DMA
  support". You should say Y to only one of them.  You want to read
  the start of drivers/scsi/eata.c and the SCSI-HOWTO, available via
  ftp (user: anonymous) at sunsite.unc.edu:/pub/Linux/docs/HOWTO.  If
  you want to compile this as a module ( = code which can be inserted
  in and removed from the running kernel whenever you want), say M
  here and read Documentation/modules.txt. The module will be called
  eata.o.

enable tagged command queuing
CONFIG_SCSI_EATA_TAGGED_QUEUE
  This is a feature of SCSI-2 which improves performance: the host
  adapter can send several SCSI commands to a device's queue even if
  previous commands haven't finished yet. Some SCSI devices don't
  implement this properly, so the save answer is N.

enable linked commands
CONFIG_SCSI_EATA_LINKED_COMMANDS
  This is a feature of SCSI-2 which improves performance: the host
  adapter can send a whole list of commands to a device in one
  batch. Some SCSI devices might not implement this properly, so the
  save answer is N.

maximum number of queued commands
CONFIG_SCSI_EATA_MAX_TAGS
  This specifies how many SCSI commands can be maximally queued for a
  given SCSI device. Go with the default unless you know what you're
  doing. Minimum is 2 and maximum is 16. This number will only have an
  effect if you said Y to "enable tagged command queuing", above.

NCR53c406a SCSI support
CONFIG_SCSI_NCR53C406A
  This is support for the NCR53c406a SCSI host adapter. For user
  configurable parameters, check out drivers/scsi/NCR53c406.c in the
  kernel source. Also read the SCSI-HOWTO, available via ftp (user:
  anonymous) at sunsite.unc.edu:/pub/Linux/docs/HOWTO.  If you want to
  compile this driver as a module ( = code which can be inserted in
  and removed from the running kernel whenever you want), say M here
  and read Documentation/modules.txt. The module will be called
  NCR53c406.o.

Tekram DC390W/U/F (T) SCSI support
CONFIG_SCSI_DC390W
  This driver supports the Tekram DC390W/U/F (T) PCI SCSI host
  adapters with the NCR/Symbios 53c825/875 chips. Say Y here if you
  have one of those. If however you have a DC390 (T) adaptor with the
  Am53C974A chip, use the DC390(T) driver "Tekram DC390(T) (AMD
  PCscsi) SCSI support", below.
  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called ???.o.
  
Tekram DC390(T) (AMD PCscsi) SCSI support
CONFIG_SCSI_DC390T
  This driver supports the Tekram DC390(T) PCI SCSI host adapter with
  the Am53C974A chip, and perhaps other cards using the same chip.
  This driver does _not_ support the DC390W/U/F adaptor with the 
  NCR/Symbios chips; use "Tekram DC390W/U/F (T) SCSI support" for that
  one.
  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called tmscsim.o.

AM53/79C974 PCI SCSI support
CONFIG_SCSI_AM53C974
  This is support for the AM53/79C974 SCSI host adapters. Please read
  drivers/scsi/README.AM53C974 for details. Also, the SCSI-HOWTO,
  available via ftp (user: anonymous) at
  sunsite.unc.edu:/pub/Linux/docs/HOWTO, is for you. If you want to
  compile this driver as a module ( = code which can be inserted in
  and removed from the running kernel whenever you want), say M here
  and read Documentation/modules.txt. The module will be called
  AM53C974.o.

GDT SCSI Disk Array Controller support
CONFIG_SCSI_GDTH
  This is a driver for all SCSI Disk Array Controllers (EISA/ISA/PCI) 
  manufactured by ICP vortex. It is documented in the kernel source in
  drivers/scsi/gdth.c and drivers/scsi/gdth.h. This driver is also
  available as a module ( = code which can be inserted in and removed
  from the running kernel whenever you want). If you want to compile 
  it as a module, say M here and read Documentation/modules.txt. 	

IOMEGA Parallel Port ZIP drive SCSI support
CONFIG_SCSI_PPA
  This driver supports the parallel port version of IOMEGA's ZIP drive
  (a 100Mb removable media device).  For more information about this
  driver and how to use it you should read the file
  drivers/scsi/README.ppa.  You should also read the SCSI-HOWTO, which
  is available via anonymous ftp from sunsite.unc.edu in the directory
  /pub/Linux/docs/HOWTO. If you use this driver, you will still be
  able to use the parallel port for other tasks, such as a printer; it
  is safe to compile both drivers into the kernel. This driver is also
  available as a module which can be inserted in and removed from the
  running kernel whenever you want. To compile this driver as a
  module, say M here and read Documentation/modules.txt. The module
  will be called ppa.o. Note that you can say N here if you have the
  SCSI version of the ZIP drive: it will be supported automatically if
  you said Y to the generic "SCSI disk support", above.

EPP FIFO Checking
CONFIG_SCSI_PPA_HAVE_PEDANTIC
  EPP (Enhanced Parallel Port) is a standard for parallel ports which
  allows them to act as expansion buses that can handle up to 64
  peripheral devices. Some parallel port chipsets are slower than
  their motherboard, and so we have to control the state of the FIFO
  every now and then to avoid data loss.  The permitted values for
  this option are 0 (don't check FIFO), 1 (check FIFO every 4 bytes),
  2 (check FIFO every other byte) and 3 (check FIFO every time). If
  your EPP chipset is from the SMC series, you are likely to have to
  set this value greater than 0.

Network device support?
CONFIG_NETDEVICES
  You can say N here in case you don't intend to connect to any other
  computer at all or all your connections will be either via UUCP
  (UUCP is a protocol to forward mail and news between unix hosts over
  telephone lines; read the UUCP-HOWTO, available via ftp (user:
  anonymous) in sunsite.unc.edu:/pub/Linux/docs/HOWTO) or dialing up a
  shell account or a BBS, even using term (term is a program which
  gives you almost full Internet connectivity if you have a regular
  dial up shell account on some Internet connected Unix computer. Read
  http://www.bart.nl/~patrickr/term-howto/Term-HOWTO.html).  You'll
  have to say Y if your computer contains a network card that you want
  to use under linux (make sure you know its name because you will be
  asked for it and read the Ethernet-HOWTO; also, if you plan to use
  more than one network card under linux, read the
  Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini) or if you want to use
  SLIP (Serial Line Internet Protocol is the protocol used to send
  Internet traffic over telephone lines or nullmodem cables) or CSLIP
  (compressed SLIP) or PPP (Point to Point Protocol, a better and
  newer replacement for SLIP) or PLIP (Parallel Line Internet Protocol
  is mainly used to create a mini network by connecting the parallel
  ports of two local machines) or AX.25/KISS (protocol for sending
  internet traffic over radio links).  Make sure to read the
  NET-2-HOWTO.  Eventually, you will have to read Olaf Kirch's
  excellent book "Network Administrator's Guide", to be found in
  sunsite.unc.edu:/pub/Linux/docs/LDP.  If unsure, say Y.

Dummy net driver support
CONFIG_DUMMY
  This is essentially a bit-bucket device (i.e. traffic you send to
  this device is consigned into oblivion) with a configurable IP
  address. It is most commonly used in order to make your currently
  inactive SLIP address seem like a real address for local
  programs. If you use SLIP or PPP, you might want to say Y here. Read
  about it in the Network Administrator's Guide, available via ftp
  (user: anonymous) from sunsite.unc.edu:/pub/Linux/docs/LDP. Since
  this thing comes often handy, the default is Y. It won't enlarge
  your kernel either. What a deal.  If you want to compile this as a
  module ( = code which can be inserted in and removed from the
  running kernel whenever you want), say M here and read
  Documentation/modules.txt. The module will be called dummy.o. If you
  want to use more than one dummy device at a time, you need to
  compile this driver as a module. Instead of 'dummy', the devices
  will then be called 'dummy0', 'dummy1' etc.
  
SLIP (serial line) support
CONFIG_SLIP
  Say Y if you intend to use SLIP or CSLIP (compressed SLIP) to
  connect to your Internet service provider or to connect to some
  other local Unix box or if you want to configure your Linux box as a
  Slip/CSlip server for other people to dial in.  SLIP (Serial Line
  Internet Protocol) is the protocol used to send Internet traffic
  over telephone lines or serial cables (also known as
  nullmodems). Normally, your access provider has to support SLIP in
  order for you to be able to use it, but there is now a SLIP emulator
  called SLiRP around (available via ftp (user: anonymous) from
  sunsite.unc.edu:/pub/Linux/system/Network/serial/) which allows you
  to use SLIP over a regular dial up shell connection. If you plan to
  use SLiRP, make sure to say Y to CSLIP, below. The NET-2-HOWTO,
  available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO, explains how to configure
  SLIP. Note that you don't need this option if you just want to run
  term (term is a program which gives you almost full Internet
  connectivity if you have a regular dial up shell account on some
  Internet connected Unix computer. Read
  http://www.bart.nl/~patrickr/term-howto/Term-HOWTO.html). SLIP
  support will enlarge your kernel by about 4kB. If unsure, say N.  If
  you want to compile this as a module ( = code which can be inserted
  in and removed from the running kernel whenever you want), say M
  here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. The module will be called
  slip.o.
  
CSLIP compressed headers
CONFIG_SLIP_COMPRESSED
  This protocol is faster than SLIP because it uses compression on the
  TCP/IP headers (not on the data itself), but it has to be supported
  on both ends. Ask your access provider if you are not sure and say
  Y, just in case. You will still be able to use plain SLIP. If you
  plan to use SLiRP, the SLIP emulator (available via ftp (user:
  anonymous) from sunsite.unc.edu:/pub/Linux/system/Network/serial/)
  which allows you to use SLIP over a regular dial up shell
  connection, you definitely want to say Y here. The NET-2-HOWTO,
  available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO, explains how to configure
  CSLIP. This won't enlarge your kernel.

Keepalive and linefill
CONFIG_SLIP_SMART
  Adds additional capabilities to the SLIP driver to support the
  RELCOM line fill and keepalive monitoring. Ideal on poor quality
  analogue lines.

Six bit SLIP encapsulation
CONFIG_SLIP_MODE_SLIP6
  Just occasionally you may need to run IP over hostile serial
  networks that don't pass all control characters or are only seven
  bit. Saying Y here adds an extra mode you can use with SLIP:
  "slip6". In this mode, SLIP will only send normal ascii symbols over
  the serial device. Naturally, this has to be supported at the other
  end of the link as well. It's good enough, for example, to run IP
  over the async ports of a Camtec JNT Pad. If unsure, say N.

Radio network interfaces
CONFIG_NET_RADIO
  Radio based interfaces for Linux. This includes amateur radio
  (AX.25), support for wireless ethernet and other systems. Note that
  the answer to this question won't directly affect the kernel: saying
  N will just cause this configure script to skip all the questions
  about radio interfaces. Some user-level drivers for scarab devices
  which don't require special kernel support are available via ftp
  (user: anonymous) from shadow.cabi.net. 
  If unsure, say N.

AX.25 network interfaces
CONFIG_NET_HAM
  Say Y here if you want support for a device that connects your Linux
  box to your amateur radio (HAM). AX.25 is the protocol used for
  digital traffic over amateur radio connections. You might want to
  read the HAM-HOWTO and the AX25-HOWTO, both available via ftp (user:
  anonymous) from sunsite.unc.edu:/pub/Linux/docs/HOWTO. Note that the
  answer to this question won't directly affect the kernel: saying N
  will just cause this configure script to skip all the questions
  about amateur radio interfaces.

PPP (point-to-point) support
CONFIG_PPP
  PPP (Point to Point Protocol) is a newer and better SLIP. It serves
  the same purpose: sending Internet traffic over telephone (and other
  serial) lines.  Ask your access provider if they support it, because
  otherwise you can't use it (not quite true any more: the free
  program SLiRP can emulate a PPP line if you just have a regular dial
  up shell account on some UNIX computer; get it via ftp (user:
  anonymous) from sunsite.unc.edu:/pub/Linux/system/Network/serial/).
  To use PPP, you need an additional program called pppd as described
  in Documentation/networking/ppp.txt and in the PPP-HOWTO, available
  from sunsite.unc.edu:/pub/Linux/docs/HOWTO. If you upgrade from an
  older kernel, you might need to upgrade pppd as well.  Note that you
  don't need "PPP support" if you just want to run term (term is a
  program which gives you almost full Internet connectivity if you
  have a regular dial up shell account on some Internet connected UNIX
  computer. Read
  http://www.bart.nl/~patrickr/term-howto/Term-HOWTO.html). The PPP
  option enlarges your kernel by about 16kB. This driver is also
  available as a module ( = code which can be inserted in and removed
  from the running kernel whenever you want). If you said Y to
  "Version information on all symbols" above, then you cannot compile
  the PPP driver into the kernel; you can then only compile it as a
  module. The module will be called ppp.o. If you want to compile it
  as a module, say M here and read Documentation/modules.txt as well
  as Documentation/networking/net-modules.txt. Note that, no matter
  what you do, the BSD compression code (used to compress the IP
  packets sent over the serial line; has to be supported at the other
  end as well) will always be compiled as a module; it is called
  bsd_comp.o and will show up in the directory modules once you have
  said "make modules". If unsure, say N.

Shortwave radio modem driver
CONFIG_HFMODEM
  This experimental driver is used by a package (to be released)
  that implements the shortwave radio protocols RTTY, Sitor (Amtor),
  Pactor 1 and GTOR using a standard PC soundcard. If unsure,
  say N.

Shortwave radio modem driver support for SoundBlaster and compatible cards
CONFIG_HFMODEM_SBC
  This option enables the hfmodem driver to use SoundBlaster and
  compatible cards. It requires a 16bit capable card, i.e.
  SB16 or better, or ESS1688 or newer.

Shortwave radio modem driver support for WSS and Crystal cards
CONFIG_HFMODEM_WSS
  This option enables the hfmodem driver to use WindowsSoundSystem
  compatible cards. These cards feature a codec chip from either
  Analog Devices (such as AD1848, AD1845) or Crystal
  Semiconductors (such as CS4248, CS423x).

STRIP (Metricom Starmode radio IP)
CONFIG_STRIP
  Say Y if you have a Metricom radio and intend to use Starmode Radio
  IP.  STRIP is a radio protocol developed for the MosquitoNet project
  (http://mosquitonet.stanford.edu/) to send Internet traffic using
  Metricom radios.  Metricom radios are small, battery powered,
  100kbit/sec packet radio transceivers, about the size and weight of
  a cellular telephone.  (You may also have heard them called
  "Metricom modems" but we avoid the term "modem" because it misleads
  many people into thinking that you can plug a Metricom modem into a
  phone line and use it as a modem.)  You can use STRIP on any Linux
  machine with a serial port, although it is obviously most useful for
  people with laptop computers. If you think you might get a Metricom
  radio in the future, there is no harm in saying Y to STRIP now,
  except that it makes the kernel a bit bigger. You can also compile
  this as a module ( = code which can be inserted in and removed from
  the running kernel whenever you want), say M here and read
  Documentation/modules.txt. The module will be called strip.o.

LAPB over Ethernet driver
CONFIG_LAPBETHER
  This is a driver for a pseudo device (typically called /dev/lapb0)
  which allows you to open an LAPB point-to-point connection to some
  other computer on your ethernet network. In order to do this, you
  need to say Y or M to the driver for your ethernet card as well as
  to "LAPB Data Link Driver".  If you want to compile this driver as a
  module ( = code which can be inserted in and removed from the
  running kernel whenever you want), say M here and read
  Documentation/modules.txt. The module will be called lapbether.o.
  If unsure, say N.

X.25 async driver
CONFIG_X25_ASY
  This is a driver for sending and receiving X.25 frames over regular
  asynchronous serial lines such as telephone lines equipped with
  ordinary modems. Experts should note that this driver doesn't
  currently comply with the asynchronous HDLS framing protocols in
  CCITT recommendation X.25. If you want to compile this driver as a
  module ( = code which can be inserted in and removed from the
  running kernel whenever you want), say M here and read
  Documentation/modules.txt. The module will be called x25_asy.o.  If
  unsure, say N.

Z8530 SCC driver for AX.25
CONFIG_SCC
  These cards are used to connect your Linux box to an amateur radio
  in order to communicate with other computers.  If you want to use
  this, read Documentation/networking/z8530drv.txt and the
  AX.25-HOWTO, available via ftp (user: anonymous) at
  sunsite.unc.edu:/pub/Linux/docs/HOWTO.  Also make sure to say Y to
  "Amateur Radio AX.25 Level 2" support. If you want to compile this
  as a module ( = code which can be inserted in and removed from the
  running kernel whenever you want), say M here and read
  Documentation/modules.txt. The module will be called scc.o.

BAYCOM picpar and par96 driver for AX.25
CONFIG_BAYCOM_PAR
  This is a driver for Baycom style simple amateur radio
  modems that connect to a parallel interface. The driver 
  supports the picpar and par96 designs. To configure the
  driver, use the sethdlc utility available in the standard
  ax25 utilities package. For information on the modems, see
  http://www.baycom.de and Documentation/networking/baycom.txt. If you
  want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. This is
  recommended. The module will be called baycom_par.o.

BAYCOM ser12 full duplex driver for AX.25
CONFIG_BAYCOM_SER_FDX
  This is one of two drivers for Baycom style simple amateur radio
  modems that connect to a serial interface. The driver supports
  the ser12 design in full duplex mode. In addition, it allows the
  baudrate to be set between 300 and 4800 baud (however not all modems
  support all baudrates). This is the preferred driver. baycom_ser_hdx.o
  is the old driver and still provided in case this driver does not work
  with your serial interface chip. To configure the driver, use the
  sethdlc utility available in the standard ax25 utilities package. 
  For information on the modems, see http://www.baycom.de and
  Documentation/networking/baycom.txt. If you want to compile
  this driver as a module ( = code which can be inserted in 
  and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. This is
  recommended. The module will be called baycom_ser_fdx.o.

BAYCOM ser12 half duplex driver for AX.25
CONFIG_BAYCOM_SER_HDX
  This is one of two drivers for Baycom style simple amateur radio
  modems that connect to a serial interface. The driver supports
  the ser12 design in full duplex mode. This is the old driver. 
  It is still provided in case your serial interface chip does
  not work with the full duplex driver. This driver is depreciated.
  To configure the driver, use the sethdlc utility available
  in the standard ax25 utilities package. For information
  on the modems, see http://www.baycom.de and
  Documentation/networking/baycom.txt. If you want to compile
  this driver as a module ( = code which can be inserted in 
  and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. This is
  recommended. The module will be called baycom_ser_hdx.o.

Soundcard modem driver for AX.25
CONFIG_SOUNDMODEM
  This experimental driver allows a standard SoundBlaster or
  WindowsSoundSystem compatible soundcard to be used as a packet radio
  modem, to send digital traffic over amateur radio. To configure the
  driver, use the sethdlc, smdiag and smmixer utilities available in
  the standard ax25 utilities package. For information on how to key
  the transmitter, see
  http://www.ife.ee.ethz.ch/~sailer/pcf/ptt_circ/ptt.html and
  Documentation/networking/soundmodem.txt. If you want to compile this
  driver as a module ( = code which can be inserted in and removed
  from the running kernel whenever you want), say M here and read
  Documentation/modules.txt. This is recommended. The module will be
  called soundmodem.o.

Soundcard modem support for SoundBlaster and compatible cards
CONFIG_SOUNDMODEM_SBC
  This option enables the soundmodem driver to use SoundBlaster and
  compatible cards. If you have a dual mode card (i.e. a WSS cards
  with a SoundBlaster emulation) you should say N here and Y to
  "Soundcard modem support for WSS and Crystal cards", below, because
  this usually results in better performance. This option also supports
  SB16/32/64 in full duplex mode.

Soundcard modem support for WSS and Crystal cards
CONFIG_SOUNDMODEM_WSS
  This option enables the soundmodem driver to use WindowsSoundSystem
  compatible cards. These cards feature a codec chip from either
  Analog Devices (such as AD1848, AD1845, AD1812) or Crystal
  Semiconductors (such as CS4248, CS423x). This option also supports
  the WSS full duplex operation which currently works with Crystal
  CS423x chips. If you don't need full duplex operation, do not enable
  it to save performance.

Soundcard modem support for 1200 baud AFSK modulation
CONFIG_SOUNDMODEM_AFSK1200
  This option enables the soundmodem driver 1200 baud AFSK modem, 
  compatible to popular modems using TCM3105 or AM7911. The demodulator
  requires about 12% of the CPU power of a Pentium 75 CPU per channel.

Soundcard modem support for 2400 baud AFSK modulation (7.3728MHz crystal)
CONFIG_SOUNDMODEM_AFSK2400_7
  This option enables the soundmodem driver 2400 baud AFSK modem,
  compatible to TCM3105 modems (over-)clocked with a 7.3728MHz
  crystal.  Note that the availability of this driver does _not_ imply
  that I recommend building such links. It is only here since users
  especially in eastern Europe have asked me to do so. In fact this
  modulation scheme has many disadvantages, mainly its incompatibility
  with many transceiver designs and the fact that the TCM3105 (if
  used) is operated widely outside its specifications.

Soundcard modem support for 2400 baud AFSK modulation (8MHz crystal)
CONFIG_SOUNDMODEM_AFSK2400_8
  This option enables the soundmodem driver 2400 baud AFSK modem,
  compatible to TCM3105 modems (over-)clocked with an 8MHz crystal.
  Note that the availability of this driver does _not_ imply that I
  recommend building such links. It is only here since users
  especially in eastern Europe have asked me to do so. In fact this
  modulation scheme has many disadvantages, mainly its incompatibility
  with many transceiver designs and the fact that the TCM3105 (if
  used) is operated widely outside its specifications.

Soundcard modem support for 2666 baud AFSK modulation
CONFIG_SOUNDMODEM_AFSK2666
  This option enables the soundmodem driver 2666 baud AFSK modem.
  This modem is experimental, and not compatible to anything
  else I know of.

Soundcard modem support for 4800 baud 8PSK modulation
CONFIG_SOUNDMODEM_PSK4800
  This option enables the soundmodem driver 4800 baud 8PSK modem.
  This modem is experimental, and not compatible to anything
  else I know of.

Soundcard modem support for 4800 baud HAPN-1 modulation
CONFIG_SOUNDMODEM_HAPN4800
  This option enables the soundmodem driver 4800 baud HAPN-1
  compatible modem. This modulation seems to be widely used 'down
  under' and in the Netherlands. Here, nobody uses it, so I could not
  test if it works.  It is compatible to itself, however :-)

Soundcard modem support for 9600 baud FSK G3RUH modulation
CONFIG_SOUNDMODEM_FSK9600
  This option enables the soundmodem driver 9600 baud FSK modem,
  compatible to the G3RUH standard. The demodulator requires about 4%
  of the CPU power of a Pentium 75 CPU per channel. You can say Y to
  both 1200 baud AFSK and 9600 baud FSK if you want (but obviously you
  can only use one protocol at a time, depending on what the other end
  can understand).

Shortwave radio modem driver
CONFIG_HFMODEM
  This experimental driver is used by a package (to be released)
  that implements the shortwave radio protocols RTTY, Sitor (Amtor),
  Pactor 1 and GTOR using a standard PC soundcard. If unsure,
  say N.

Shortwave radio modem driver support for SoundBlaster and compatible cards
CONFIG_HFMODEM_SBC
  This option enables the hfmodem driver to use SoundBlaster and
  compatible cards. It requires a 16bit capable card, i.e.
  SB16 or better, or ESS1688 or newer.

Shortwave radio modem driver support for WSS and Crystal cards
CONFIG_HFMODEM_WSS
  This option enables the hfmodem driver to use WindowsSoundSystem
  compatible cards. These cards feature a codec chip from either
  Analog Devices (such as AD1848, AD1845, AD1812) or Crystal
  Semiconductors (such as CS4248, CS423x).

Serial port KISS driver for AX.25
CONFIG_MKISS
  KISS is the protocol used to send IP traffic over AX.25 radio
  connections, somewhat similar to SLIP for telephone lines. Say Y
  here if you intend to send internet traffic over amateur radio,
  using some device connected to your machine's serial port. In that
  case, you also have to say Y to "Amateur Radio AX.25 Level 2"
  support.  If you want to compile this driver as a module ( = code
  which can be inserted in and removed from the running kernel
  whenever you want), say M here and read
  Documentation/modules.txt. The module will be called mkiss.o.

PLIP (parallel port) support
CONFIG_PLIP
  PLIP (Parallel Line Internet Protocol) is used to create a mini
  network consisting of two (or, rarely, more) local machines. The
  parallel ports (the connectors at the computers with 25 holes) are
  connected using "null printer" or "Turbo Laplink" cables which can
  transmit 4 bits at a time or using special PLIP cables, to be used
  on bidirectional parallel ports only, which can transmit 8 bits at a
  time (you can find the wiring of these cables in
  drivers/net/README?.plip). The cables can be up to 15m long. This
  works also if one of the machines runs DOS/Windows and has some PLIP
  software installed, e.g. the Crynwr PLIP packet driver
  (http://sunsite.cnam.fr/packages/Telnet/PC/msdos/misc/pktdrvr.txt)
  and winsock or NCSA's telnet.  If you want to use this, say Y and
  read the PLIP mini-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini as well as the
  NET-2-HOWTO in sunsite.unc.edu:/pub/Linux/docs/HOWTO. Note that the
  PLIP protocol was changed and this PLIP driver won't work together
  with the PLIP support in Linux versions 1.0.x.  This option enlarges
  your kernel by about 8kB. If you want to compile this as a module (
  = code which can be inserted in and removed from the running kernel
  whenever you want), say M here and read Documentation/modules.txt as
  well as Documentation/networking/net-modules.txt. The module will be
  called plip.o.

EQL (serial line load balancing) support
CONFIG_EQUALIZER
  If you have two serial connections to some other computer (this
  usually requires two modems and two telephone lines) and you use
  SLIP (= the protocol for sending internet traffic over telephone
  lines) or PPP (= a better SLIP) on them, you can make them behave
  like one double speed connection using this driver. Naturally, this
  has to be supported at the other end as well, either with a similar
  EQL Linux driver or with a Livingston Portmaster 2e. Say Y if you
  want this and read drivers/net/README.eql. This driver is also
  available as a module ( = code which can be inserted in and removed
  from the running kernel whenever you want). The module will be
  called eql.o. If you want to compile it as a module, say M here
  and read Documentation/modules.txt.

Frame Relay (DLCI) support
CONFIG_DLCI
  This is support for the frame relay protocol; frame relay is a fast
  low-cost way to connect to a remote internet access provider or to
  form a private wide area network. The one physical line from your
  box to the local "switch" (i.e. the entry point to the frame relay
  network, usually at the phone company) can carry several logical
  point-to-point connections to other computers connected to the frame
  relay network. For a general explanation of the protocol, check out
  http://frame-relay.indiana.edu/4000/4000index.html on the WWW. (To
  browse the WWW, you need to have access to a machine on the Internet
  that has a program like lynx or netscape.) To use frame relay, you
  need supporting hardware (FRAD) and certain programs from the
  net-tools package as explained in
  Documentation/networking/framerelay.txt. This driver is also
  available as a module ( = code which can be inserted in and removed
  from the running kernel whenever you want). The module will be
  called dlci.o. If you want to compile it as a module, say M here
  and read Documentation/modules.txt.

Max open DLCI
CONFIG_DLCI_COUNT
  This is the maximal number of logical point-to-point frame relay
  connections (the identifiers of which are called DCLIs) that
  the driver can handle. The default is probably fine.

Max DLCI per device
CONFIG_DLCI_MAX
  You can specify here how many logical point-to-point frame relay
  connections (the identifiers of which are called DCLIs) should be
  handled by each of your hardware frame relay access devices. Go with
  the default.

Sangoma S502A FRAD support
CONFIG_SDLA
  Say Y here if you need a driver for the Sangoma S502A, S502E, and
  S508 Frame Relay Access Devices. These are multi-protocol cards, but
  only frame relay is supported by the driver at this time. Please
  read Documentation/framerelay.txt. This driver is also available as
  a module ( = code which can be inserted in and removed from the
  running kernel whenever you want). The module will be called
  sdla.o. If you want to compile it as a module, say M here and read
  Documentation/modules.txt.

WAN Router
CONFIG_WAN_ROUTER
      Wide Area Networks (WANs), such as X.25, frame relay and leased
  lines, are used to interconnect Local Area Networks (LANs) over vast
  distances with data transfer rates significantly higher than those
  achievable with commonly used asynchronous modem connections.
  Usually, a quite expensive external device called `WAN router' is
  needed to connect to a WAN.
      As an alternative, WAN routing can be built into the Linux
  kernel.  With relatively inexpensive WAN interface cards available
  on the market, a perfectly usable router can be built for less than
  half the price of an external router.  If you have one of those
  cards (with appropriate WAN Link Driver) and wish to use your Linux
  box as a WAN router, you may say 'Y' to this option.  You will also
  need a wan-tools package available via FTP (user: anonymous) from
  ftp.sangoma.com.  Read Documentation/networking/wan-router.txt for
  more information.
      WAN routing is always built as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module is called wanrouter.o.  For general information about 
  modules read Documentation/modules.txt.

WAN Drivers
CONFIG_WAN_DRIVERS
      Say 'Y' to this option if you are planning to use your Linux box
  as a WAN router ( = device used to interconnect local area networks
  over wide area communication links, such as leased lines and public
  data networks, e.g. X.25 and frame relay) and you will be offered a
  list of WAN drivers currently available.  For more information, read
  Documentation/networking/wan-router.txt.

Sangoma WANPIPE(tm) multiprotocol cards
CONFIG_VENDOR_SANGOMA
      WANPIPE from Sangoma Technologies Inc. (http://www.sangoma.com)
  is a family of intelligent multiprotocol WAN adapters with data
  transfer rates up to T1 (1.544 Mbps).  They are also known as
  Synchronous Data Link Adapters (SDLA) and designated S502E(A), S503
  or S508. These cards support the X.25, Frame Relay, and PPP
  protocols. If you have one or more of these cards, say 'Y' to this
  option.  The next questions will ask you about the protocols you
  want the driver to support. The driver will be compiled as a module
  ( = code which can be inserted in and removed from the running
  kernel whenever you want).  The module will be called wanpipe.o.
  For general information about modules read
  Documentation/modules.txt.

Maximum number of cards
CONFIG_WANPIPE_CARDS
      Enter number of WANPIPE adapters installed in your machine.  The
  driver can support up to 8 cards.  You may enter more than you
  actually have if you plan to add more cards in the future without
  re-compiling the driver, but remember that in this case you'll waste
  some kernel memory (about 1K per card).

WANPIPE X.25 support
CONFIG_WANPIPE_X25
      Say 'Y' to this option, if you are planning to connect a WANPIPE
  card to an X.25 network.  If you say 'N', the X.25 support will not
  be included in the driver (saves about 16K of kernel memory).

WANPIPE Frame Relay support
CONFIG_WANPIPE_FR
      Say 'Y' to this option, if you are planning to connect a WANPIPE
  card to a frame relay network.  If you say 'N', the frame relay
  support will not be included in the driver (saves about 16K of
  kernel memory).

WANPIPE PPP support
CONFIG_WANPIPE_PPP
      Say 'Y' to this option, if you are planning to connect a WANPIPE
  card to a leased line using Point-to-Point protocol (PPP).  If you
  say 'N', the PPP support will not be included in the driver (saves
  about 16K of kernel memory).

Sun LANCE Ethernet support
CONFIG_SUN_LANCE
  This is support for lance ethernet cards on Sun workstations such as
  the Sparcstation IPC (any Sparc with a network interface 'le0' under
  SunOS basically). This driver is also available as a module ( = code
  which can be inserted in and removed from the running kernel
  whenever you want). The module will be called lance.o. If you want
  to compile it as a module, say M here and read
  Documentation/modules.txt.

Sun Intel Ethernet support
CONFIG_SUN_INTEL
  This is support for the intel ethernet cards on some Sun workstations
  (all those with a network interface 'ie0' under SunOS).

Ethernet (10 or 100Mbit)
CONFIG_NET_ETHERNET
  Ethernet (also called IEEE 802.3 or ISO 8802-2) is the most common
  type of Local Area Networks (LANs) in universities or
  companies. 10-base-2 or Thinnet (10 Mbps over coaxial cable, linking
  computers in a chain), 10-base-T (10 Mbps over twisted pair
  telephone cable, linking computers to a central hub) and
  100-base-<whatever> (100 Mbps) are common types of ethernet. If your
  Linux machine will be connected to an Ethernet and you have an
  ethernet network card installed in your computer, say Y here and
  read the Ethernet-HOWTO, available via ftp (user: anonymous) from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO.  Note that the answer to this
  question won't directly affect the kernel: saying N will just cause
  this configure script to skip all the questions about Ethernet
  network cards. If unsure, say N.

Western Digital/SMC cards
CONFIG_NET_VENDOR_SMC
  If you have a network (ethernet) card belonging to this class, say Y
  and read the Ethernet-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO. If you plan to use more than
  one network card under linux, read the Multiple-Ethernet-mini-HOWTO,
  available from sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini. Note that
  the answer to this question doesn't directly affect the kernel:
  saying N will just cause this configure script to skip all the
  questions about Western Digital cards. If you say Y, you will be
  asked for your specific card in the following questions. If you plan
  to use more than one network card under linux, read the
  Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.

WD80*3 support
CONFIG_WD80x3
  If you have a network (ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO. This driver is also available
  as a module ( = code which can be inserted in and removed from the
  running kernel whenever you want). The module will be called
  wd.o. If you want to compile it as a module, say M here and read
  Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. If you plan to use more
  than one network card under linux, read the
  Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.

SMC Ultra support
CONFIG_ULTRA
  If you have a network (ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO.  This driver is also
  available as a module ( = code which can be inserted in and removed
  from the running kernel whenever you want). The module will be
  called smc-ultra.o. If you want to compile it as a module, say M
  here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. If you plan to use more
  than one network card under linux, read the
  Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.  Important: There have
  been many reports that, with some motherboards mixing an SMC Ultra
  and an Adaptec AHA1542 SCSI card causes corruption problems with
  many operating systems.

SMC 9194 Support
CONFIG_SMC9194
  This is support for the SMC9xxx based Ethernet cards.  Choose this
  option if you have a DELL laptop with the docking station, or
  another SMC9192/9194 based chipset.  Say Y if you want it compiled
  into the kernel, and read the the file drivers/net/README.smc9 and
  the Ethernet-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO.  This driver is also
  available as a module ( = code which can be inserted in and removed
  from the running kernel whenever you want). The module will be
  called smc9194.o. If you want to compile it as a module, say M here
  and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. If you plan to use more
  than one network card under linux, read the
  Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.

AMD LANCE and PCnet (AT1500 and NE2100) support
CONFIG_LANCE
  If you have a network (ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO. Some LinkSys cards are of
  this type. If you plan to use more than one network card under
  linux, read the Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.

3COM cards
CONFIG_NET_VENDOR_3COM
  If you have a network (ethernet) card belonging to this class, say Y
  and read the Ethernet-HOWTO, available via ftp (user: anonymous)
  in sunsite.unc.edu:/pub/Linux/docs/HOWTO. Note that the answer to
  this question doesn't directly affect the kernel: saying N will just
  cause this configure script to skip all the questions about 3COM
  cards. If you say Y, you will be asked for your specific card in the
  following questions. If you plan to use more than one network card
  under linux, read the Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini. 

3c501 support
CONFIG_EL1
  If you have a network (ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO.  Also, consider buying a new
  card, since the 3c501 is slow, broken, and obsolete: you will have
  problems. Some people suggest to ping ("man ping") a nearby machine
  every minute ("man cron") when using this card.  This driver is also
  available as a module ( = code which can be inserted in and removed
  from the running kernel whenever you want). The module will be
  called 3c501.o. If you want to compile it as a module, say M here
  and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. If you plan to use more
  than one network card under linux, read the
  Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini - and don't use 3c501s.

3c503 support
CONFIG_EL2
  If you have a network (ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO. This driver is also available
  as a module ( = code which can be inserted in and removed from the
  running kernel whenever you want). The module will be called
  3c503.o. If you want to compile it as a module, say M here and read
  Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. If you plan to use more
  than one network card under linux, read the
  Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.

3c505 support
CONFIG_ELPLUS
  Information about this network (ethernet) card can be found in
  Documentation/networking/3c505.txt. If you have a card of this type,
  say Y and read the Ethernet-HOWTO, available via ftp (user:
  anonymous) in sunsite.unc.edu:/pub/Linux/docs/HOWTO.  If you want to
  compile this as a module ( = code which can be inserted in and
  removed from the running kernel whenever you want), say M here and
  read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. The module will be called
  3c505.o. If you plan to use more than one network card under linux,
  read the Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.

3c507 support
CONFIG_EL16
  If you have a network (ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO. This driver is also available
  as a module ( = code which can be inserted in and removed from the
  running kernel whenever you want). The module will be called
  3c507.o. If you want to compile it as a module, say M here and read
  Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. If you plan to use more
  than one network card under linux, read the
  Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.

3c523 support 
CONFIG_ELMC
  If you have a network (ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO. This driver is also available
  as a module ( = code which can be inserted in and removed from the
  running kernel whenever you want). The module will be called
  3c523.o. If you want to compile it as a module, say M here and read
  Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. If you plan to use more
  than one network card under linux, read the
  Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.

3c509/3c579 support
CONFIG_EL3
  If you have a network (ethernet) card belonging to the 3Com
  EtherLinkIII series, say Y and read the Ethernet-HOWTO, available
  via ftp (user: anonymous) in sunsite.unc.edu:/pub/Linux/docs/HOWTO.
  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. The module will be called
  3c509.o. If you plan to use more than one network card under linux,
  read the Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini. If your card is not
  working you may need to use the DOS setup disk to disable Plug &
  Play mode, and to select the default media type.

3c590 series (592/595/597) "Vortex" support
CONFIG_VORTEX
  If you have a network (ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO. More specific information is
  in Documentation/networking/vortex.txt and in the comments at the
  beginning of drivers/net/3c59x.c. If you want to compile this as a
  module ( = code which can be inserted in and removed from the
  running kernel whenever you want), say M here and read
  Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. The module will be called
  3c59x.o. If you plan to use more than one network card under linux,
  read the Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini

Other ISA cards
CONFIG_NET_ISA
  If your network (ethernet) card hasn't been mentioned yet and its
  bus system (that's the way the components of the card talk to each
  other) is ISA (as opposed to EISA, VLB or PCI), say Y. Make sure you
  know the name of your card. Read the Ethernet-HOWTO, available via
  ftp (user: anonymous) in sunsite.unc.edu:/pub/Linux/docs/HOWTO. If
  unsure, say Y.  Note that the answer to this question doesn't
  directly affect the kernel: saying N will just cause this configure
  script to skip all the remaining ISA network card questions.  If you
  say Y, you will be asked for your specific card in the following
  questions.  If you plan to use more than one network card under
  linux, read the Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.

Generic ARCnet support
CONFIG_ARCNET
  If you have a network card of this type, say Y and check out the
  (arguably) beautiful poetry in Documentation/networking/arcnet.txt.
  You need both this driver, and the driver for the particular ARCnet
  chipset of your card. If you don't know, then it's probably a 
  COM90xx type card, so say Y (or M) to ARCnet COM90xx chipset support
  below.
  You might also want to have a look at the Ethernet-HOWTO, available
  via ftp (user: anonymous) in sunsite.unc.edu:/pub/Linux/docs/HOWTO
  (even though ARCnet is not really ethernet). This driver is also
  available as a module ( = code which can be inserted in and removed
  from the running kernel whenever you want). The module will be
  called arcnet.o. If you want to compile it as a module, say M here
  and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. If you plan to use more
  than one network card under linux, read the
  Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.
  
Enable arc0e (ARCnet "ether-encap" packet format)
CONFIG_ARCNET_ETH
  This allows you to use "ethernet encapsulation" with your ARCnet
  card via the virtual arc0e device.  You only need arc0e if you want
  to talk to nonstandard ARCnet software, specifically,
  DOS/Windows-style "NDIS" drivers.  You do not need to say Y here to
  communicate with industry-standard RFC1201 implementations, like the
  arcether.com packet driver or most DOS/Windows ODI drivers.  RFC1201
  is included automatically as the arc0 device.  Please read the
  ARCnet documentation in Documentation/networking/arcnet.txt for more
  information about using arc0e and arc0s.

Enable arc0s (ARCnet RFC1051 packet format)
CONFIG_ARCNET_1051
  This allows you to use RFC1051 with your ARCnet card via the virtual
  arc0s device.  You only need arc0s if you want to talk to ARCnet
  software complying with the "old" standard, specifically, the DOS
  arcnet.com packet driver, Amigas running AmiTCP, and some variants
  of NetBSD.  You do not need to say Y here to communicate with
  industry-standard RFC1201 implementations, like the arcether.com
  packet driver or most DOS/Windows ODI drivers.  RFC1201 is included
  automatically as the arc0 device.  Please read the ARCnet
  documentation in Documentation/networking/arcnet.txt for more
  information about using arc0e and arc0s.

ARCnet COM90xx chipset support
CONFIG_ARCNET_COM90xx
  This is the chipset driver for the standard COM90xx cards. If you always
  used the old arcnet driver without knowing what type of card you had, 
  this is probably the one for you.

ARCnet COM90xx IO mapped mode chipset support
CONFIG_ARCNET_COM90xxIO
  This is the chipset driver for the COM90xx cards, using them in IO-mapped
  mode instead of memory-mapped mode. This is slower than the normal driver.
  Only use it if your card doesn't support shared memory.

ARCnet RIM I chipset support
CONFIG_ARCNET_RIM_I
  This is yet another chipset driver for the COM90xx cards, but this time
  only using memory-mapped mode, and no IO ports at all. This driver is
  completely untested, so if you have one of these cards, please mail 
  dwmw2@cam.ac.uk, especially if it works!

ARCnet COM20020 chipset support
CONFIG_ARCNET_COM20020
  This is the driver for the new COM20020 chipset. It supports such things
  as promiscuous mode, so packet sniffing is possible, and extra diagnostic
  information.

Cabletron E21xx support
CONFIG_E2100
  If you have a network (ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO. This driver is also available
  as a module ( = code which can be inserted in and removed from the
  running kernel whenever you want). The module will be called
  e2100.o. If you want to compile it as a module, say M here and read
  Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. If you plan to use more
  than one network card under linux, read the
  Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.

CS89x0 support
CONFIG_CS89x0
  Support for CS89x0 chipset based ethernet cards.  If you have a
  network (ethernet) card of this type, say Y and read the
  Ethernet-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO as well as
  Documentation/networking/cs89x0.txt.  If you want to compile this as
  a module ( = code which can be inserted in and removed from the
  running kernel whenever you want), say M here and read
  Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. The module will be called
  cs89x.o. If you plan to use more than one network card under linux,
  read the Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.

DEPCA support
CONFIG_DEPCA
  If you have a network (ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO as well as
  drivers/net/depca.c.  If you want to compile this as a module ( =
  code which can be inserted in and removed from the running kernel
  whenever you want), say M here and read Documentation/modules.txt as
  well as Documentation/networking/net-modules.txt. The module will be
  called depca.o. If you plan to use more than one network card under
  linux, read the Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.

EtherWorks 3 support
CONFIG_EWRK3
  This driver supports the DE203, DE204 and DE205 network (ethernet)
  cards. If this is for you, say Y and read drivers/net/README.ewrk3
  in the kernel source as well as the Ethernet-HOWTO, available via
  ftp (user: anonymous) from sunsite.unc.edu:/pub/Linux/docs/HOWTO.
  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. The module will be called
  ewrk3.o. If you plan to use more than one network card under linux,
  read the Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.

SEEQ8005 support
CONFIG_SEEQ8005
  This is a driver for the SEEQ 8005 network (ethernet) card. If this
  is for you, read the Ethernet-HOWTO, available via ftp (user:
  anonymous) from sunsite.unc.edu:/pub/Linux/docs/HOWTO. If you plan
  to use more than one network card under linux, read the
  Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.

AT1700 support
CONFIG_AT1700
  If you have a network (ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO. This driver is also available
  as a module ( = code which can be inserted in and removed from the
  running kernel whenever you want). If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. The module will be called
  at1700.o. If you plan to use more than one network card under linux,
  read the Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.

FMV-181/182/183/184 support
CONFIG_FMV18X
  If you have a Fujitsu FMV-181/182/183/184 network (ethernet) card,
  say Y and read the Ethernet-HOWTO, available via ftp (user:
  anonymous) in sunsite.unc.edu:/pub/Linux/docs/HOWTO. This driver is
  also available as a module ( = code which can be inserted in and
  removed from the running kernel whenever you want). The module will
  be called fmv18x.o. If you want to compile it as a module, say M
  here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. If you plan to use more
  than one network card under linux, read the
  Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini. If you use FMV-183 or
  FMV-184 and it is not working, you may need to disable Plug & Play
  mode of the card.

EtherExpressPro support
CONFIG_EEXPRESS_PRO
  If you have a network (ethernet) card of this type, say Y. Note
  however that the EtherExpressPro 100 ethernet card has its own
  separate driver. Please read the Ethernet-HOWTO, available via ftp
  (user: anonymous) in sunsite.unc.edu:/pub/Linux/docs/HOWTO. This
  driver is also available as a module ( = code which can be inserted
  in and removed from the running kernel whenever you want). The
  module will be called eepro.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. If you plan to use more
  than one network card under linux, read the
  Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.

EtherExpress support
CONFIG_EEXPRESS
  If you have an EtherExpress16 network (ethernet) card, say Y and
  read the Ethernet-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO. Note that the Intel
  EtherExpress16 card used to be regarded as a very poor choice
  because the driver was very unreliable. We now have a new driver
  that should do better. If you want to compile this driver as a
  module ( = code which can be inserted in and removed from the
  running kernel whenever you want), say M here and read
  Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. The module will be called
  eexpress.o. If you plan to use more than one network card under
  linux, read the Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.

NI5010 support
CONFIG_NI5010
  If you have a network (ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO. If you plan to use more than
  one network card under linux, read the Multiple-Ethernet-mini-HOWTO,
  available from sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.
  Note that this is still experimental code. If you use this driver,
  please contact the authors to join the development team.

NI5210 support
CONFIG_NI52
  If you have a network (ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO. This driver is also available
  as a module ( = code which can be inserted in and removed from the
  running kernel whenever you want). The module will be called
  ni52.o. If you want to compile it as a module, say M here and read
  Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. If you plan to use more than
  one network card under linux, read the Multiple-Ethernet-mini-HOWTO,
  available from sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.

NI6510 support
CONFIG_NI65
  If you have a network (ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO. If you want to compile it as
  a module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. The module will be called
  ni65.o. If you plan to use more than one network card under linux,
  read the Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.

Ottawa PI and PI/2 support
CONFIG_PI
  This is a driver for the Ottawa Amateur Radio Club PI and PI2 cards,
  which are commonly used to send internet traffic over amateur radio.
  More information about these cards is on the WWW at
  http://hydra.carleton.ca/info/pi2.html (To browse the WWW, you need
  to have access to a machine on the Internet that has a program like
  lynx or netscape). If you have one of these cards, you can say Y
  here and should read the HAM-HOWTO, available via ftp (user:
  anonymous) in sunsite.unc.edu:/pub/Linux/docs/HOWTO. Also, you
  should have said Y to "AX.25 support" above, because AX.25 is the
  protocol used for digital traffic over radio links. If you want to
  compile this as a module ( = code which can be inserted in and
  removed from the running kernel whenever you want), say M here and
  read Documentation/modules.txt. The module will be called pi2.o.

Gracilis PackeTwin support
CONFIG_PT
  This is a card used mainly by amateur radio operators for packet
  radio.  You should have already said Y to "AX.25 support" as this
  card uses that protocol.  More information about this driver can be
  found in the file drivers/net/README.pt.  NOTE: The card is capable
  of DMA and full duplex but neither of these have been coded in the
  driver as yet.  This driver is also available as a module ( = code
  which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. The module will be called
  pt.o.

AT&T WaveLAN & DEC RoamAbout DS support
CONFIG_WAVELAN
  The Lucent Wavelan (formerly NCR and AT&T ; or DEC RoamAbout DS) is
  a Radio LAN (wireless ethernet-like Local Area Network) using the
  radio frequencies 900 MHz and 2.4 GHz.
  This driver support the ISA version of the Wavelan card. A driver
  for the pcmcia hardware is available in David Hinds's pcmcia
  package.
  If you want to use a card of this type under Linux, say Y and read
  the Ethernet-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO. Some more specific
  information is contained in drivers/net/README.wavelan. You will
  also need the wireless tools package available from
  ftp://ftp.inka.de/pub/comp/Linux/networking/NetTools/contrib/.
  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you
  want). The module will be called wavelan.o. If you want to compile
  it as a module, say M here and read Documentation/modules.txt as
  well as Documentation/networking/net-modules.txt. If you plan to use
  more than one network card under linux, read the
  Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.

HP PCLAN+ (27247B and 27252A) support
CONFIG_HPLAN_PLUS
  If you have a network (ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO. This driver is also available
  as a module ( = code which can be inserted in and removed from the
  running kernel whenever you want). The module will be called
  hp-plus.o. If you want to compile it as a module, say M here and
  read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. If you plan to use more
  than one network card under linux, read the
  Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.

HP PCLAN (27245 and other 27xxx series) support
CONFIG_HPLAN
  If you have a network (ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO. This driver is also available
  as a module ( = code which can be inserted in and removed from the
  running kernel whenever you want). The module will be called
  hp.o. If you want to compile it as a module, say M here and read
  Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. If you plan to use more
  than one network card under linux, read the
  Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.

HP 10/100VG PCLAN (ISA, EISA, PCI) support
CONFIG_HP100
  If you have a network (ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO.  If you want to compile this
  as a module ( = code which can be inserted in and removed from the
  running kernel whenever you want), say M here and read
  Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. The module will be called
  hp100.o. If you plan to use more than one network card under linux,
  read the Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.

NE2000/NE1000 support
CONFIG_NE2000
  If you have a network (ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO. Many ethernet cards without a
  specific driver are compatible with NE2000. This driver is also
  available as a module ( = code which can be inserted in and removed
  from the running kernel whenever you want). The module will be
  called ne.o. If you want to compile it as a module, say M here and
  read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. If you plan to use more
  than one network card under linux, read the
  Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.

SK_G16 support
CONFIG_SK_G16
  If you have a network (ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO. If you plan to use more than
  one network card under linux, read the Multiple-Ethernet-mini-HOWTO,
  available from sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.

EISA, VLB, PCI and on board controllers
CONFIG_NET_EISA
  This is another class of network cards which attach directly to the
  bus. If you have one of those, say Y and read the Ethernet-HOWTO,
  available via ftp (user: anonymous) from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO; if you are unsure, say
  Y. Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause this configure script to skip all
  the questions about this class of network cards. If you say Y, you
  will be asked for your specific card in the following questions.  If
  you plan to use more than one network card under linux, read the
  Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.

AMD PCnet32 (VLB and PCI) support
CONFIG_PCNET32
  if you have a PCnet32 or PCnetPCI based network (ethernet) card, say
  Y here and read the Ethernet-HOWTO, available via ftp (user:
  anonymous) in sunsite.unc.edu:/pub/Linux/docs/HOWTO.  If you plan to
  use more than one network card under linux, read the
  Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.

Ansel Communications EISA 3200 support
CONFIG_AC3200
  If you have a network (ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO. This driver is also available
  as a module ( = code which can be inserted in and removed from the
  running kernel whenever you want). The module will be called
  ac3200.o. If you want to compile it as a module, say M here and read
  Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. If you plan to use more
  than one network card under linux, read the
  Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.

Racal-Interlan EISA ES3210 support
CONFIG_ES3210
  If you have a network (ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO. This driver is also available
  as a module ( = code which can be inserted in and removed from the
  running kernel whenever you want). The module will be called
  es3210.o. If you want to compile it as a module, say M here and read
  Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. If you plan to use more
  than one network card under linux, read the
  Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.

Apricot Xen-II on board ethernet
CONFIG_APRICOT
  If you have a network (ethernet) controller of this type, say Y and
  read the Ethernet-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO.  If you want to compile this
  as a module ( = code which can be inserted in and removed from the
  running kernel whenever you want), say M here and read
  Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. The module will be called
  apricot.o. If you plan to use more than one network card under
  linux, read the Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.

Generic DECchip & DIGITAL EtherWORKS PCI/EISA
CONFIG_DE4X5
  This is support for the DIGITAL series of PCI/EISA ethernet
  cards. These include the DE425, DE434, DE435, DE450 and DE500
  models. If you have a network card of this type, say Y and read the
  Ethernet-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO.  More specific information is
  contained in drivers/net/README.de4x5. This driver is also available
  as a module ( = code which can be inserted in and removed from the
  running kernel whenever you want). The module will be called
  de4x5.o. If you want to compile it as a module, say M here and read
  Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. If you plan to use more
  than one network card under linux, read the
  Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.

DECchip Tulip (dc21x4x) PCI support
CONFIG_DEC_ELCP
  This driver is developed for the SMC EtherPower series ethernet
  cards and also works with cards based on the DECchip
  21040/21041/21140 (Tulip series) chips. Some LinkSys PCI cards are
  of this type. (If your card is NOT SMC EtherPower 10/100 PCI
  (smc9332dst), you can also try the driver for "Generic DECchip"
  cards, above. However, most people with a network card of this type
  will say Y here.) Do read the Ethernet-HOWTO, available via ftp
  (user: anonymous) in sunsite.unc.edu:/pub/Linux/docs/HOWTO. More
  specific information is contained in
  Documentation/networking/tulip.txt. This driver is also available as
  a module ( = code which can be inserted in and removed from the
  running kernel whenever you want). The module will be called
  tulip.o. If you want to compile it as a module, say M here and read
  Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

Digi Intl. RightSwitch support
CONFIG_DGRS
  This is support for the Digi International RightSwitch series of
  PCI/EISA ethernet switch cards.  These include the SE-4 and the SE-6
  models. If you have a network card of this type, say Y and read the
  Ethernet-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO.  More specific information is
  contained in drivers/net/README.dgrs. This driver is also available
  as a module ( = code which can be inserted in and removed from the
  running kernel whenever you want). The module will be called
  dgrs.o. If you want to compile it as a module, say M here and read
  Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. If you plan to use more
  than one network card under linux, read the
  Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.

EtherExpressPro/100 support
CONFIG_EEXPRESS_PRO100
  If you have an Intel EtherExpressPro 100 PCI network (ethernet)
  card, say Y and read the Ethernet-HOWTO, available via ftp (user:
  anonymous) in sunsite.unc.edu:/pub/Linux/docs/HOWTO. This driver is
  also available as a module ( = code which can be inserted in and
  removed from the running kernel whenever you want). The module will
  be called eepro100.o. If you want to compile it as a module, say M
  here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. If you plan to use more
  than one network card under linux, read the
  Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.

ICL EtherTeam 16i/32 support
CONFIG_ETH16I
  If you have a network (ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO. This driver is also available
  as a module ( = code which can be inserted in and removed from the
  running kernel whenever you want). The module will be called
  eth16i.o. If you want to compile it as a module, say M here and read
  Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. If you plan to use more
  than one network card under linux, read the
  Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.

TI ThunderLAN support (EXPERIMENTAL)
CONFIG_TLAN
  If you have a TLAN based network card which is supported by this
  driver, say Y and read the Ethernet-HOWTO.  Devices currently
  supported are the Compaq Netelligent 10, Netelligent 10/100, and
  Internal NetFlex 3.  This driver is also available as a module.  The
  module will be called tlan.o. Please email feedback to
  james.banks@caldera.com.

Zenith Z-Note support
CONFIG_ZNET
  The Zenith Z-Note notebook computer has a built-in network
  (ethernet) card, and this is the Linux driver for it. Note that the
  IBM Thinkpad 300 is compatible with the Z-Note and is also supported
  by this driver. Read the Ethernet-HOWTO, available via ftp (user:
  anonymous) in sunsite.unc.edu:/pub/Linux/docs/HOWTO.

Pocket and portable adapters
CONFIG_NET_POCKET
  Cute little network (ethernet) devices which attach to the parallel
  port ("pocket adapters"), commonly used with laptops. If you have
  one of those, say Y and read the Ethernet-HOWTO, available via ftp
  (user: anonymous) from sunsite.unc.edu:/pub/Linux/docs/HOWTO. If you
  want to plug a network card into the PCMCIA slot of your laptop
  instead (PCMCIA is the standard for credit card size extension cards
  used by all modern laptops), look in
  cb-iris.stanford.edu:/pub/pcmcia and say N here.  Note that the
  answer to this question doesn't directly affect the kernel: saying N
  will just cause this configure script to skip all the questions
  about this class of network devices.  If you say Y, you will be
  asked for your specific device in the following questions.  If you
  plan to use more than one network device under linux, read the
  Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.

AT-LAN-TEC/RealTek pocket adapter support
CONFIG_ATP
  This is a network (ethernet) device which attaches to your parallel
  port. Read drivers/net/atp.c as well as the Ethernet-HOWTO,
  available via ftp (user: anonymous) from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO if you want to use this. If
  you plan to use more than one network card under linux, read the
  Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini. If you intend to use
  this driver, you should have said N to the Parallel Printer support,
  because the two drivers don't like each other.

D-Link DE600 pocket adapter support
CONFIG_DE600
  This is a network (ethernet) device which attaches to your parallel
  port. Read drivers/net/README.DLINK as well as the Ethernet-HOWTO,
  available via ftp (user: anonymous) from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO if you want to use this. It is
  possible to have several devices share a single parallel port and it
  is safe to compile the corresponding drivers into the kernel. If you
  want to compile this driver as a module however ( = code which can
  be inserted in and removed from the running kernel whenever you
  want), say M here and read Documentation/modules.txt. The module
  will be called de600.o. If you plan to use more than one network
  card under linux, read the Multiple-Ethernet-mini-HOWTO, available
  from sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.

D-Link DE620 pocket adapter support
CONFIG_DE620
  This is a network (ethernet) device which attaches to your parallel
  port. Read drivers/net/README.DLINK as well as the Ethernet-HOWTO,
  available via ftp (user: anonymous) from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO if you want to use this. It is
  possible to have several devices share a single parallel port and it
  is safe to compile the corresponding drivers into the kernel. If you
  want to compile this driver as a module however ( = code which can
  be inserted in and removed from the running kernel whenever you
  want), say M here and read Documentation/modules.txt. The module
  will be called de620.o. If you plan to use more than one network
  card under linux, read the Multiple-Ethernet-mini-HOWTO, available
  from sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.
 
Token Ring driver support
CONFIG_TR
  Token Ring is IBM's way of communication on a local network; the
  rest of the world uses ethernet. If you are connected to a token
  ring network and want to use your Token Ring card under Linux, say Y.
  Most people can say N here.

IBM Tropic chipset based adapter support
CONFIG_IBMTR
  This is support for all IBM Token Ring cards that don't use DMA. If
  you have such a beast, say Y, otherwise N. Warning: this driver will
  almost definitely fail if more than one active Token Ring card is
  present. This driver is also available as a module ( = code which
  can be inserted in and removed from the running kernel whenever you
  want). The module will be called ibmtr.o. If you want to compile it
  as a module, say M here and read Documentation/modules.txt.

Traffic Shaper (EXPERIMENTAL)
CONFIG_SHAPER
  The traffic shaper is a virtual network device that allows you to
  limit the rate of outgoing data flow over another network
  device. See Documentation/networking/shaper.txt for more
  information.  To set up and configure shaper devices, you need the
  shapecfg program, available via ftp (user: anonymous) from
  shadow.cabi.net/pub/Linux in the shaper package.  This driver is
  also available as a module ( = code which can be inserted in and
  removed from the running kernel whenever you want). The module will
  be called shaper.o. If you want to compile it as a module, say M
  here and read Documentation/modules.txt. If unsure, say N.

FDDI driver support
CONFIG_FDDI
  Fiber Distributed Data Interface is a high speed local area network
  design; essentially a replacement for high speed ethernet. FDDI can
  run over copper or fiber. If you are connected to such a network and
  want a driver for the FDDI card in your computer, say Y here (and
  then also Y to the driver for your FDDI card, below). Most people
  will say N.

Digital DEFEA and DEFPA adapter support
CONFIG_DEFXX
  This is support for the DIGITAL series of EISA (DEFEA) and PCI
  (DEFPA) controllers which can connect you to a local FDDI network.

Support CDROM drives that are not SCSI or IDE/ATAPI
CONFIG_CD_NO_IDESCSI
  If you have a CDROM drive that is neither SCSI nor IDE/ATAPI, say Y
  here, otherwise N. Read the CDROM-HOWTO, available via ftp (user:
  anonymous) from sunsite.unc.edu:/pub/Linux/docs/HOWTO. Note that the
  answer to this question doesn't directly affect the kernel: saying N
  will just cause this configure script to skip all the questions
  about these CDROM drives. If you are unsure what you have, say Y and
  find out whether you have one of the following drives.
  For each of these drivers, a file Documentation/cdrom/<driver_name>
  exists. Especially in cases where you do not know exactly which kind
  of drive you have you should read there.
  Most of these drivers use a file drivers/cdrom/<driver_name>.h where
  you can define your interface parameters and switch some internal
  goodies.
  All these CDROM drivers are also usable as a module (= code which can
  be inserted in and removed from the running kernel whenever you want).
  If you want to compile them as module, say M instead of Y and read
  Documentation/modules.txt.
  If you want to use any of these CDROM drivers, you also have to say
  Y to "ISO9660 cdrom filesystem support" below (this answer will get
  "defaulted" for you if you enable any of the Linux CDROM drivers).

Sony CDU31A/CDU33A CDROM support
CONFIG_CDU31A
  These CDROM drives have a spring-pop-out caddyless drawer, and a
  rectangular green LED centered beneath it.  NOTE: these CDROM drives
  will not be auto detected by the kernel at boot time; you have to
  provide the interface address as an option to the kernel at boot
  time as described in Documentation/cdrom/cdu31a or fill in your
  parameters into linux/drivers/cdrom/cdu31a.c. Try "man bootparam" or
  see the documentation of your boot loader (lilo or loadlin) about
  how to pass options to the kernel. The lilo procedure is also
  explained in the SCSI-HOWTO. If you say Y here, you should also say
  Y to "ISO9660 cdrom filesystem support" below, because that's the
  filesystem used on CDROMs. This driver is also available as a module
  ( = code which can be inserted in and removed from the running
  kernel whenever you want). The module will be called cdu31a.o. If
  you want to compile it as a module, say M here and read
  Documentation/modules.txt.

Standard Mitsumi [no XA/Multisession] CDROM support
CONFIG_MCD
  This is the older of the two drivers for the older Mitsumi models
  LU-005, FX-001 and FX-001D. This is not the right driver for the
  FX-001DE and the triple or quad speed models (all these are
  IDE/ATAPI models).
  With the old LU-005 model, the whole drive chassis slides out for cd
  insertion.  The FX-xxx models use a motorized tray type mechanism.
  Note that this driver does not support XA or MultiSession CDs
  (PhotoCDs).  There is a new driver (next question) which can do
  this. If you want that one, say N here.
  If the driver doesn't work out of the box, you might want to have a
  look at linux/drivers/cdrom/mcd.h.  If you say Y here, you should
  also say Y to "ISO9660 cdrom filesystem support" below, because
  that's the filesystem used on CDROMs. Please also read the file
  Documentation/cdrom/mcd. This driver is also available as a module (
  = code which can be inserted in and removed from the running kernel
  whenever you want). The module will be called mcd.o. If you want to
  compile it as a module, say M here and read
  Documentation/modules.txt.

Mitsumi [XA/MultiSession] support
CONFIG_MCDX
  Use this driver if you want to be able to read XA or MultiSession
  CDs (PhotoCDs) as well as ordinary CDs with your Mitsumi LU-005,
  FX-001 or FX-001D CDROM drive. In addition, this driver uses much less
  kernel memory than the old one, if that is a concern. This driver is
  able to support more than one drive, but each drive needs a separate
  interface card.
  If you say Y here, you should also say Y to "ISO9660 cdrom
  filesystem support" below, because that's the filesystem used on
  CDROMs. Please also read the file Documentation/cdrom/mcdx. This
  driver is also available as a module ( = code which can be inserted
  in and removed from the running kernel whenever you want). The
  module will be called mcdx.o. If you want to compile it as a module,
  say M here and read Documentation/modules.txt.

Matsushita/Panasonic/Creative, Longshine, TEAC CDROM support
CONFIG_SBPCD
  This driver supports most of the drives which use the Panasonic or
  SoundBlaster interface.
  The Matsushita CR-521, CR-522, CR-523, CR-562, CR-563 drives
  (sometimes labeled "Creative"), the CreativeLabs CD200, the
  Longshine LCS-7260, the "IBM External ISA CDROM" (in fact a CR-56x
  model), the TEAC CD-55A fall under this category. Some other
  "electrically compatible" drives (Vertos, Genoa, some Funai models)
  are currently not supported; for the Sanyo H94A drive currently a
  separate driver (asked later) is responsible.  Most drives have a
  uniquely shaped faceplate, with a caddyless motorized drawer, but
  without external brand markings. The older CR-52x drives have a
  caddy and manual loading/eject, but still no external markings.  The
  driver is able to do an extended auto-probing for interface
  addresses and drive types; this can help to find facts in cases you
  are not sure, but can consume some time during the boot process if
  none of the supported drives gets found.
  Once your drive got found, you should enter the reported parameters 
  into linux/drivers/cdrom/sbpcd.h and set "DISTRIBUTION 0" there.
  This driver can support up to four CDROM interface cards, and each
  card can support up to four CDROM drives; if you say Y here, you
  will be asked how many controllers you have. If compiled as a
  module, only one interface card (but with up to four drives) is
  usable. 
  If you say Y here, you should also say Y to "ISO9660 cdrom
  filesystem support" below, because that's the filesystem used on
  CDROMs. Please also read the file Documentation/cdrom/sbpcd. This
  driver is also available as a module ( = code which can be inserted
  in and removed from the running kernel whenever you want). The
  module will be called sbpcd.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

Matsushita/Panasonic, ... second CDROM controller support
CONFIG_SBPCD2
  Say Y here only if you have two CDROM controller boards of this type
  (usually only if you have more than four drives). You should enter
  the parameters for the second, third and fourth interface card into
  linux/drivers/cdrom/sbpcd.h before compiling the new kernel. Read
  the file Documentation/cdrom/sbpcd.

Aztech/Orchid/Okano/Wearnes/TXC/CyDROM  CDROM support
CONFIG_AZTCD
  This is your driver if you have an Aztech CDA268-01A, Orchid
  CD-3110, Okano or Wearnes CDD110, Conrad TXC, or CyCDROM CR520 or
  CR540 CDROM drive.  This driver - just like all these CDROM drivers
  - is NOT for CDROM drives with IDE/ATAPI interface, such as Aztech
  CDA269-031SE. If you say Y here, you should also say Y to "ISO9660
  cdrom filesystem support" below, because that's the filesystem used
  on CDROMs. Please also read the file Documentation/cdrom/aztcd. This
  driver is also available as a module ( = code which can be inserted
  in and removed from the running kernel whenever you want). The
  module will be called aztcd.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

Sony CDU535 CDROM support
CONFIG_CDU535
  This is the driver for the older Sony CDU-535 and CDU-531 CDROM
  drives.  If you say Y here, you should also say Y to "ISO9660 cdrom
  filesystem support" below, because that's the filesystem used on
  CDROMs. Please also read the file Documentation/cdrom/sonycd535. 
  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you
  want). The module will be called sonycd535.o. If you want to compile
  it as a module, say M here and read Documentation/modules.txt.

Goldstar R420 CDROM support
CONFIG_GSCD
  If this is your CDROM drive, say Y here.  As described in
  linux/Documentation/cdrom/gscd, you might have to change a setting
  in the file linux/drivers/cdrom/gscd.h before compiling the kernel. 
  Please read the file Documentation/cdrom/gscd. If you say Y here, 
  you should also say Y to "ISO9660 cdrom filesystem support" below,
  because that's the filesystem used on CDROMs. This driver is also
  available as a module ( = code which can be inserted in and removed
  from the running kernel whenever you want). The module will be
  called gscd.o. If you want to compile it as a module, say M here and
  read Documentation/modules.txt.

MicroSolutions backpack CDROM support
CONFIG_BPCD
  MicroSolutions backpack CDROM is an external drive that connects to
  the parallel port.  This driver supports model 164550 (and perhaps
  other models).  Say Y if you have one of these, and read the file
  Documentation/cdrom/bpcd. If you say Y here, you should also say Y
  to "ISO9660 cdrom filesystem support" below, because that's the
  filesystem used on CDROMs. It is possible for several devices to
  share a parallel port and it is safe to compile the corresponding
  drivers all into the kernel. This driver is also available as a
  module ( = code which can be inserted in and removed from the
  running kernel whenever you want). The module will be called
  bpcd.o. If you want to compile it as a module, say M here and read
  Documentation/modules.txt.

Philips/LMS CM206 CDROM support
CONFIG_CM206
  If you have a Philips/LMS CDROM drive cm206 in combination with a
  cm260 host adapter card, say Y here.  Please also read the file
  Documentation/cdrom/cm206. If you say Y here, you should also say Y
  to "ISO9660 cdrom filesystem support" below, because that's the
  filesystem used on CDROMs. This driver is also available as a module
  ( = code which can be inserted in and removed from the running
  kernel whenever you want). The module will be called cm206.o. If you
  want to compile it as a module, say M here and read
  Documentation/modules.txt.

Optics Storage DOLPHIN 8000AT CDROM support
CONFIG_OPTCD
  This is the driver for the 'DOLPHIN' drive with a 34-pin Sony
  compatible interface. It also works with the Lasermate CR328A. If
  you have one of those, say Y. This driver does not work for the
  Optics Storage 8001 drive; use the IDE-ATAPI CDROM driver for that
  one. Please read the file Documentation/cdrom/optcd. 
  If you say Y here, you should also say Y to "ISO9660 cdrom
  filesystem support" below, because that's the filesystem used on
  CDROMs. This driver is also available as a module ( = code which can
  be inserted in and removed from the running kernel whenever you
  want). The module will be called optcd.o. If you want to compile it
  as a module, say M here and read Documentation/modules.txt.

Sanyo CDR-H94A CDROM support
CONFIG_SJCD
  If this is your CDROM drive, say Y here and read the file
  Documentation/cdrom/sjcd. You should then also say Y to "ISO9660
  cdrom filesystem support" below, because that's the filesystem used
  on CDROMs. This driver is also available as a module ( = code which
  can be inserted in and removed from the running kernel whenever you
  want). The module will be called sjcd.o. If you want to compile it
  as a module, say M here and read Documentation/modules.txt.

Soft configurable cdrom interface card support
CONFIG_CDI_INIT
  If you want to include boot-time initialization of any cdrom
  interface card that is software configurable, say Y here.  Currently
  only the ISP16/MAD16/Mozart soundcards with built-in cdrom
  interfaces are supported.  Note that the answer to this question
  doesn't directly affect the kernel: saying N will just cause this
  configure script to skip all the questions about these CDROM drives.

ISP16/MAD16/Mozart soft configurable cdrom interface support
CONFIG_ISP16_CDI
  These are soundcards with with built-in cdrom interfaces using the
  OPTi 82C928 or 82C929 chips. Say Y here to have them detected and
  possibly configured at boot time. In addition, You'll have to say Y
  to a driver for the particular cdrom drive you have attached to the
  card. Read Documentation/cdrom/isp16 for details.  This driver is
  also available as a module ( = code which can be inserted in and
  removed from the running kernel whenever you want). The module will
  be called isp16.o. If you want to compile it as a module, say M here
  and read Documentation/modules.txt.

Preload dcache
CONFIG_DCACHE_PRELOAD
  Preloading will create dcache entries when a directory is scanned
  (e.g. with ls) for the *first* time. This should speed up successive
  lookups of information about files in that directory, but can also
  consume large amounts of memory.  
  Please report speedups (or slowdowns due to the memory usage if they
  occur) to schoebel@informatik.uni-stuttgart.de .
  If unsure, say N.

Quota support
CONFIG_QUOTA
  If you say Y here, you will be able to set per user limits for disk
  usage (also called diskquotas). Currently, it works only for the
  ext2 filesystem. You need additional software in order to use quota
  support; it is available via ftp (user: anonymous) from
  ftp.funet.fi/pub/Linux/kernel/src/subsystems/quota/. Probably the
  quota support is only useful for multi user systems. If unsure, say
  N.

Online mirror support
CONFIG_OMIRR
  omirr is a package for _symmetric_ mirroring of files over the
  internet. In contrast to rdist, the online mirror daemon (omirrd)
  is running all the time and transfers any changes on the file system
  as soon as possible to all other servers. Symmetric means that all
  servers have equal rights in changing a file: the last changer of a
  file will win. This is the same behaviour as multiple processes
  operating on a global file system. In effect, omirr can do the same
  as nfs mounts, but will have better performance since the data is
  stored on local disks. In contrast to a cache filesystem which has a
  dedicated master copy, broken connections and/or servers are no problem
  for continuing work on the remaining ones, because there is no master
  copy. You must say Y if you want to use omirrd, but you should (but
  need not) say N if you don't (for performance reasons).

Filename translation support
CONFIG_TRANS_NAMES
  This is a useful feature if you have a pool of diskless Linux
  clients which mount their root filesystems from a central
  server. Depending on their hostnames, the clients can then see
  different versions of certain files, which keeps maintenance at a
  minimum when used for configuration files. The kernel running on the
  clients should have this option enabled. If you don't administer a
  pool of Linux clients, say N here, otherwise read on:
  When you say Y here, filenames, directory names etc become
  context-sensitive.  If you have a file named
  "/etc/config#host=banana#", it will appear (by default) as
  hardlinked to "/etc/config" on host "banana", while on host "mango"
  another file "/etc/config#host=mango#" will appear as having been
  hardlinked to "/etc/config".
  This default behaviour can be changed by setting the _first_
  environment variable NAMETRANS to a colon-separated list of suffixes
  which are tried in the specified order. For example, in 'env -
  NAMETRANS=#host=mango#:#ktype=diskless# "`env`" command ...' the
  command will see the same files as if it had been executed on host
  "mango" with a diskless kernel.
  Using NAMETRANS supersedes _all_ default translations. Thus
  translations can be completely switched off with an empty list,
  e.g. 'env - NAMETRANS= "`env`" command ...'.  Note that some system
  utilities like tar, dump, restore should be used with translation
  switched off, in order to avoid doubled space in archive files and
  when extracting from them. Also, make sure that nfsd, mountd (and
  similar ones like samba daemons) run without translation, in order
  to avoid doubled (or even wrong) translation at the server and at
  the client.
  You can automatically force the creation of context-dependent
  filenames if there exists a template filename like
  "/etc/mtab#host=CREATE#". As soon as a process running on "mango"
  tries to create a file "/etc/mtab", the version
  "/etc/mtab#host=mango#" is created instead (which appears in turn as
  hardlinked to "/etc/mtab").  Note that if you want to make
  "/etc/fstab" context-dependent, you should execute "touch
  /etc/mtab#host=CREATE#" and "touch /etc/mtab.tmp#host=CREATE#",
  because mount, umount and others running on different hosts would
  otherwise try to create one shared /etc/mtab which would result in a
  clash. Also one should execute "touch /etc/nologin#host=CREATE#" to
  prevent global side effects from shutdown resp. runlevel.
  Please read Documentation/transname.txt if you intend to say Y here.

Restrict translation to gid
CONFIG_TRANS_RESTRICT
  If you say Y here, default filename translations are carried out
  only if the parent directory of the context-sensitive file belongs
  to a specific group id (gid). Trying to translate names everywhere
  will decrease performance of file openings. Normally translations
  are used only in system configuration files but not in ordinary user
  filespace. So you should change the gid of directories containing
  context-dependent files to some special group like "adm" (group id
  4) and enable this option. As a result, users will not notice any
  performance degradation resulting from filename translation.
  Note that translations resulting from the first environment variable
  "NAMETRANS=..." are always carried out regardless of the gid of
  directories.
  Beware: before turning on this option make sure that all directories
  containing context-dependent files belong to the special group, or
  system initialization may fail. If unsure, select N.

Group id (gid) for translation restriction
CONFIG_TRANS_GID
  Default name translations will be carried out only inside directories
  belonging to the group id (gid) that you specify here.
  Default is 4 (group "adm").

Nodename (hostname) translation
CONFIG_TR_NODENAME
  Enables translation of name suffixes like in
  "/etc/config#host=banana#".  The syntax is
  <filename>#host=<hostname>#. The hostname can be queried with the
  command "uname -n". Normally this option is used heavily when
  translation is enabled. If unsure, say Y.

Kernelname translation
CONFIG_TR_KERNNAME
  Enables translation of name suffixes like in
  "/etc/config#kname=default#".  The string is hard compiled into the
  kernel by the following option.  Useful if your kernel does not know
  the hostname at boot time, and there is no way to tell the hostname
  by lilo or bootp. Please avoid using this option and prefer
  "Nodename (hostname) translation" (CONFIG_TR_NODENAME) wherever
  possible. When mounting the root over nfs, the own hostname must be
  known at boot time anyway; this option is just for special use.
  Note that the default translations are tried in the order as
  occurring in the configuration, that is 1) host 2) kname 3) ktype 4)
  machine 5) system. If unsure, say Y.

String for kernelname translation
CONFIG_KERNNAME
  Enter the string you want to compile into the kernel. The string
  will be used as context in context-dependent files like
  "/etc/config#kname=<string>#".

Kerneltype translation
CONFIG_TR_KERNTYPE
  Enables translation of name suffixes like in
  "/etc/config#ktype=default#".  The syntax is
  <filename>#ktype=<string>#. The string is hard compiled in the
  kernel by the following option. Use if you want to create different
  kernels with different behaviour. For example, use the string
  "default" on your server, and use "diskless" on all your diskless
  clients (and perhaps "dataless" on dataless clients). This way you
  can avoid dozens of "config#host=<something># with same contents and
  you have no effort when new machines are added. If unsure, say Y.

String for kerneltype translation
CONFIG_KERNTYPE
  Enter the string you want to compile into the kernel. The string
  will be used as context in context-dependent files like
  "/etc/config#ktype=default#". If your kernel is to be used on a
  server, you probably can use "default" here. If your kernel is
  intended for a diskless client, you probably should enter "diskless"
  here.

Machine type translation
CONFIG_TR_MACHINE
  Enables translation of name suffixes like in
  "/etc/config#machine=i486#".  The syntax is
  <filename>#machine=<id>#. The machine types can be queried with the
  command "uname -m". Normally used only on multi-architecture
  installations. If unsure, say Y.

System name translation
CONFIG_TR_SYSNAME
  Enables translation of name suffixes like in
  "/etc/config#system=Linux#".  The syntax is
  <filename>#system=<id>#. The system name can be queried with the
  command "uname -s". Currently only supported by Linux, but hopefully
  other operating systems will pick up the idea of context-dependent
  translations. If unsure, say Y.

Minix fs support
CONFIG_MINIX_FS
  Minix is a simple operating system used in many classes about
  OS's. The minix filesystem (= method to organize files on a harddisk
  partition or a floppy disk) was the original filesystem for Linux,
  has been superseded by the second extended filesystem ext2fs but is
  still used for root/boot and other floppies or ram disks since it is
  leaner. You don't want to use it on your harddisk because of certain
  built-in restrictions. This option will enlarge your kernel by about
  25 kB. Everyone should say Y or M so that they are able to read this
  common floppy format.  If you want to compile this as a module ( =
  code which can be inserted in and removed from the running kernel
  whenever you want), say M here and read
  Documentation/modules.txt. The module will be called minix.o. Note
  that the filesystem of your root partition cannot be compiled as a
  module.

Second extended fs support
CONFIG_EXT2_FS
  This is the de facto standard Linux filesystem (= method to organize
  files on a storage device) for harddisks. You want to say Y, unless
  you intend to use Linux exclusively from inside a DOS partition
  using the umsdos filesystem. The advantage of the latter is that you
  can get away without repartitioning your hard drive (which often
  implies backing everything up and restoring afterwards); the
  disadvantage is that Linux becomes susceptible to DOS viruses and
  that umsdos is somewhat slower than ext2fs. Even if you want to run
  Linux in this fashion, it might be a good idea to have ext2fs
  around: it enables you to read more floppy disks and facilitates the
  transition to a *real* Linux partition later. Another (rare) case
  which doesn't require ext2fs is a diskless Linux box which mounts
  all files over the network using NFS (in this case it's sufficient
  to say Y to "NFS filesystem support" below). There is a short
  ext2fs-FAQ, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/faqs. This option will enlarge your
  kernel by about 41 kB. If you want to compile this filesystem as a
  module ( = code which can be inserted in and removed from the
  running kernel whenever you want), say M here and read
  Documentation/modules.txt. The module will be called ext2.o. Be
  aware however that the filesystem of your root partition cannot be
  compiled as a module, and so this could be dangerous. Most everyone
  wants to say Y here.

fat fs support
CONFIG_FAT_FS
  If you want to use one of the FAT-based filesystems (the MS-DOS,
  VFAT (Windows'95) and UMSDOS (used to run Linux on top of an
  ordinary DOS partition) filesystems), then you must include FAT
  support. This is not a filesystem in itself, but it provides the
  foundation for the other filesystems. This option will enlarge your
  kernel by about 24 kB. If unsure, say Y. If you want to compile this
  as a module however ( = code which can be inserted in and removed
  from the running kernel whenever you want), say M here and read
  Documentation/modules.txt. The module will be called fat.o. Note
  that if you compile the FAT support as a module, you cannot compile
  any of the FAT-based filesystems into the kernel - they will have to
  be modules as well.  The filesystem of your root partition cannot be
  a module, so don't say M here if you intend to use UMSDOS as your
  root filesystem.

msdos fs support
CONFIG_MSDOS_FS
  This allows you to mount MSDOS partitions of your harddrive (unless
  they are compressed; to access compressed MSDOS partitions under
  Linux, you can either use the DOS emulator DOSEMU, described in the
  DOSEMU-HOWTO, available via ftp (user: anonymous) at
  sunsite.unc.edu:/pub/Linux/docs/HOWTO, or try dmsdosfs in
  sunsite.unc.edu:/pub/Linux/system/Filesystems/dosfs. If you intend
  to use dosemu with a non-compressed MSDOS partition, say Y here) and
  MSDOS floppies. This means that file access becomes transparent,
  i.e. the MSDOS files look and behave just like all other Unix files.
  Another way to read and write MSDOS floppies from within Linux (but
  not transparently) is with the mtools ("man mtools") program suite,
  which doesn't require the msdos filesystem support.  If you want to
  use umsdos, the Unix-like filesystem on top of DOS, which allows you
  to run Linux from within a DOS partition without repartitioning,
  you'll have to say Y or M here. If your have Windows'95 or Windows
  NT installed on your MSDOS partitions, you should use the VFAT
  filesystem instead, or you will not be able to see the long
  filenames generated by Windows'95 / Windows NT. This option will
  enlarge your kernel by about 7 kB. If unsure, say Y. This will only
  work if you said Y to "fat fs support" as well. If you want to
  compile this as a module however ( = code which can be inserted in
  and removed from the running kernel whenever you want), say M here
  and read Documentation/modules.txt. The module will be called
  msdos.o.

vfat fs support
CONFIG_VFAT_FS
  This allows you to mount MSDOS partitions of your harddrive. It
  will let you use filenames in a way compatible with the long 
  filenames used by Windows'95 and Windows NT fat-based (not NTFS)
  partitions. It does not support Windows'95 compressed filesystems.
  You cannot use the VFAT filesystem for your root partition; use
  UMSDOS instead. This option enlarges your kernel by about 10 kB and
  it only works if you said Y to the "fat fs support" above. Please read
  the file Documentation/filesystems/vfat.txt for details.
  If unsure, say N. If you want to compile this as a module ( = code 
  which can be inserted in and removed from the running kernel whenever 
  you want), say M here and read Documentation/modules.txt. The module
  will be called vfat.o.

umsdos: Unix like fs on top of std MSDOS fs
CONFIG_UMSDOS_FS
  Say Y here if you want to run Linux from within an existing DOS
  partition of your harddrive. The advantage of this is that you can
  get away without repartitioning your hard drive (which often implies
  backing everything up and restoring afterwards) and hence you're
  able to quickly try out Linux or show it to your friends; the
  disadvantage is that Linux becomes susceptible to DOS viruses and
  that UMSDOS is somewhat slower than ext2fs.  Another use of umsdos
  is to write files with long unix filenames to MSDOS floppies; it
  also allows unix style softlinks and owner/permissions of files on
  MSDOS floppies. You will need a program called umssync in order to
  make use of umsdos; read Documentation/filesystems/umsdos.txt. This
  option enlarges your kernel by about 25 kB and it only works if you
  said Y to both "fat fs support" and "msdos fs support" above. If you
  want to compile this as a module ( = code which can be inserted in
  and removed from the running kernel whenever you want), say M here
  and read Documentation/modules.txt. The module will be called
  umsdos.o. Note that the filesystem of your root partition cannot be
  a module, so this could be dangerous. If unsure, say N.

nls: Native language codepages and Unicode support
CONFIG_NLS
  This is required by the FAT filesystems and by the ISO9660 filesystem
  when it is compiled with Joliet support.  Joliet is a Microsoft
  extension for CDROMs that supports Unicode.  This allows translation
  between different character sets. When dealing with the FAT based
  filesystems, there are two character sets that are important. The
  first is the codepage.  Codepages are character sets that are used by
  DOS to allow filenames to have native language characters when
  character sets were limited to 256 characters. The codepage is the
  character set that is used to store native language characters on
  disk.  The two most common codepages are 437 in the United States and
  850 in much of Europe. The second important character set is the
  input/output character set. This is the character set that is
  displayed on the screen. In the United States, this will almost always
  be the ISO 8859-1 character set. This is the default. Linux will only
  do a translation of the FAT filenames, not the contents of the files.

nls iso8859-1
CONFIG_NLS_ISO8859_1
  ISO8859-1 is the Latin 1 character set, and it covers most West
  European languages such as Albanian, Catalan, Danish, Dutch, English,
  Faeroese, Finnish, French, German, Galician, Irish, Icelandic, Italian,
  Norwegian, Portuguese, Spanish, Swedish, and Valencian.

nls iso8859-2
CONFIG_NLS_ISO8859_2
  ISO8859-2 is the Latin 2 character set, and it works for most
  Latin-written Slavic and Central European languages: Czech, German,
  Hungarian, Polish, Rumanian, Croatian, Slovak, Slovene.

nls iso8859-3
CONFIG_NLS_ISO8859_3
  ISO8859-3 is the Latin 3 character set, and it s popular with authors
  of Esperanto, Galician, Maltese, and Turkish.

nls iso8859-4
CONFIG_NLS_ISO8859_4
  ISO8859-4 is the Latin 4 character set, and it introduces letters
  for Estonian, Latvian, and Lithuanian. It is an incomplete predecessor of
  Latin 6.

nls iso8859-5
CONFIG_NLS_ISO8859_5
  ISO8859-5 is a Cyrillic character set, and you can type Bulgarian,
  Byelorussian, Macedonian, Russian, Serbian, and Ukrainian.
  Note that the charset KOI8-R is preferred in Russia.

nls iso8859-6
CONFIG_NLS_ISO8859_6
  ISO8859-6 is the Arabic character set.

nls iso8859-7
CONFIG_NLS_ISO8859_7
  ISO8859-7 is the Modern Greek character set.

nls iso8859-8
CONFIG_NLS_ISO8859_8
  ISO8859-8 is the Hebrew character set.

nls iso8859-9
CONFIG_NLS_ISO8859_9
  ISO8859-9 is the Latin 5 character set, and it replaces the rarely
  needed Icelandic letters in Latin 1 with the Turkish ones. Useful in
  Turkey.

nls iso8859-10
CONFIG_NLS_ISO8859_10
  ISO8859-10 is the Latin 6 character set, and it adds the last Inuit
  (Greenlandic) and Sami (Lappish) letters that were missing in Latin 4 to
  cover the entire Nordic area. 

nls koi8-r
CONFIG_NLS_KOI8_R
  This is the preferred Russian character set.

nls codepage 437
CONFIG_NLS_CODEPAGE_437
  This is the DOS codepage that is used in the United States and parts of
  Canada.

nls codepage 737
CONFIG_NLS_CODEPAGE_737
  This is the codepage used by DOS for Greek.

nls codepage 775
CONFIG_NLS_CODEPAGE_775
  This is the codepage used by DOS for the Baltic Rim Languages.

nls codepage 850
CONFIG_NLS_CODEPAGE_850
  This is the DOS codepage that is used in much of Europe--United Kingdom,
  Germany, Spain, Italy, and [add more countries here]. It has some
  characters useful to many European languages that are not part of
  codepage 437.

nls codepage 852
CONFIG_NLS_CODEPAGE_852
  This is the Latin 2 codepage used by DOS for much of Central and
  Eastern Europe.  It has all the required characters for these languages:
  Albanian, Croatian, Czech, English, Finnish, Hungarian, Irish, German,
  Polish, Romanian, Serbian (Latin transcription), Slovak, Slovenian, and
  Sorbian.

nls codepage 855
CONFIG_NLS_CODEPAGE_855
  This is the DOS codepage that is used for Cyrillic.

nls codepage 857
CONFIG_NLS_CODEPAGE_857
  This is the DOS codepage that is used for Turkish.

nls codepage 860
CONFIG_NLS_CODEPAGE_860
  This is the DOS codepage that is used for Portuguese.

nls codepage 861
CONFIG_NLS_CODEPAGE_861
  This is the DOS codepage that is used for Icelandic.

nls codepage 862
CONFIG_NLS_CODEPAGE_862
  This is the DOS codepage that is used for Hebrew.

nls codepage 863
CONFIG_NLS_CODEPAGE_863
  This is the DOS codepage that is used for Canadian French.

nls codepage 864
CONFIG_NLS_CODEPAGE_864
  This is the DOS codepage that is used for Arabic.

nls codepage 865
CONFIG_NLS_CODEPAGE_865
  This is the DOS codepage that is used in the Nordic European countries.

nls codepage 866
CONFIG_NLS_CODEPAGE_866
  This is the DOS codepage that is used for Cyrillic/Russian.

nls codepage 869
CONFIG_NLS_CODEPAGE_869
  This is the DOS codepage that is used for Greek.

nls codepage 874
CONFIG_NLS_CODEPAGE_874
  This is the DOS codepage that is used for Thai.

/proc filesystem support
CONFIG_PROC_FS
  This is a virtual filesystem providing information about the status
  of the system. "Virtual" means that it doesn't take up any space on
  your harddisk: the files are created on the fly when you access
  them. Also, you cannot read the files with less: you need to use
  more or cat. The filesystem is explained in the Kernel Hacker's
  Guide at http://www.redhat.com:8080/HyperNews/get/khg.html on the
  Web, and also on the proc(8) manpage ("man 8 proc").  This option
  will enlarge your kernel by about 18 kB. It's totally cool; for
  example, "cat /proc/interrupts" gives information about what the
  different IRQs are used for at the moment (there is a small number
  of Interrupt ReQuest lines in your computer that are used by the
  attached devices to gain the CPU's attention - often a source of
  trouble if two devices are mistakenly configured to use the same
  IRQ). Several programs depend on this, so everyone should say Y
  here.
  
NFS filesystem support
CONFIG_NFS_FS
  If you are connected to some other (usually local) Unix computer
  (using SLIP, PLIP, PPP or ethernet) and want to mount files residing
  on that computer (the NFS server) using the Network File Sharing
  protocol, say Y. "Mounting files" means that the client can access
  the files with usual UNIX commands as if they were sitting on the
  client's harddisk. For this to work, the server must run the
  programs nfsd and mountd (but does not need to have NFS filesystem
  support enabled). NFS is explained in the Network Administrator's
  Guide, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/LDP, and on its man page: "man
  nfs". There is also a NFS-FAQ in
  sunsite.unc.edu:/pub/Linux/docs/faqs which presumes that you know
  the basics of NFS already. If you say Y here, you should have said Y
  to TCP/IP networking also. This option would enlarge your kernel by
  about 27 kB. This filesystem is also available as a module ( = code
  which can be inserted in and removed from the running kernel
  whenever you want). The module is called nfs.o. If you want to
  compile it as a module, say M here and read
  Documentation/modules.txt. If you configure a diskless machine which
  will mount its root filesystem over nfs (in order to do that, check
  out the netboot package, available via ftp (user: anonymous) from
  sunsite.unc.edu in /pub/Linux/system/Linux-boot/, extract with "tar
  xzvf filename", and say Y to "Root file system on NFS" below), then
  you cannot compile this driver as a module. If you don't know what
  all this is about, say N.

Root file system on NFS
CONFIG_ROOT_NFS
  If you want your Linux box to mount its whole root filesystem from
  some other computer over the net via NFS (presumably because your
  box doesn't have a harddisk), say Y. Read Documentation/nfsroot.txt
  for details. Most people say N here. 

NFS server support
CONFIG_NFSD
  If you want your Linux box to act as a NFS *server*, so that other
  computers on your local network which support NFS can access files
  on your box transparently, you have two options: you can use the
  self-contained user space program nfsd, in which case you should say
  N here, or you can say Y and use this new experimental kernel based
  NFS server. The advantage of the kernel based solution is that it is
  faster; it might not be completely stable yet, though. You will need
  the support software from the linux-nfs package available at
  ftp://ftp.mathematik.th-darmstadt.de/pub/linux/okir/.  
  The nfs server is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you
  want). The module is called nfsd.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt. If unsure,
  say N.

ISO9660 cdrom filesystem support
CONFIG_ISO9660_FS
  This is the standard filesystem used on CDROMs. It was previously
  known as "High Sierra Filesystem" and is called "hsfs" on other Unix
  systems. The so-called Rock-Ridge extensions which allow for long
  Unix filenames are also supported by this driver. If you have a
  CDROM drive and want to do more with it than just listen to audio
  CDs and watch its LEDs, say Y (and read the CDROM-HOWTO, available
  via ftp (user: anonymous) from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO), thereby enlarging your
  kernel by about 27 kB; otherwise say N.  If you want to compile this
  as a module ( = code which can be inserted in and removed from the
  running kernel whenever you want), say M here and read
  Documentation/modules.txt. The module will be called isofs.o.

OS/2 HPFS filesystem support (read only)
CONFIG_HPFS_FS
  OS/2 is IBM's operating system for PC's, the same as Warp, and HPFS
  is the filesystem used for organizing files on OS/2 harddisk
  partitions. Say Y if you want to be able to read files from an OS/2
  HPFS partition of your harddrive. OS/2 floppies however are in
  regular MSDOS format, so you don't need this option in order to be
  able to read them. Read Documentation/filesystems/hpfs.txt. This
  filesystem is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you
  want). The module is called hpfs.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt. If unsure,
  say N.
  
System V and Coherent filesystem support
CONFIG_SYSV_FS
  SCO, Xenix and Coherent are commercial Unix systems for intel
  machines. Saying Y here would allow you to read and write to and
  from their floppies and harddisk partitions. If you have a floppy or
  harddisk partition like that, it is probable that they contain
  binaries from those other Unix systems; in order to run these
  binaries, you will want to install iBCS2 (iBCS2 [Intel Binary
  Compatibility Standard] is a kernel module which lets you run SCO,
  Xenix, Wyse, Unix Ware, Dell Unix and System V programs under Linux
  and is often needed to run commercial software, most prominently
  WordPerfect. It's in tsx-11.mit.edu:/pub/linux/BETA). If you only
  intend to mount files from some other Unix over the network using
  NFS, you don't need the System V filesystem support (but you need
  nfs filesystem support obviously). Note that this option is
  generally not needed for floppies, since a good portable way to
  transport files and directories between unixes (and even other
  operating systems) is given by the tar program ("man tar").  Note
  also that this option has nothing whatsoever to do with the option
  "System V IPC". Read about the System V filesystem in
  Documentation/filesystems/sysv-fs.txt. This option will enlarge your
  kernel by about 34 kB. If you want to compile this as a module ( =
  code which can be inserted in and removed from the running kernel
  whenever you want), say M here and read
  Documentation/modules.txt. The module will be called sysv.o. If you
  haven't heard about all of this before, it's safe to say N.

Kernel automounter support (experimental)
CONFIG_AUTOFS_FS
  The automounter is a tool to automatically mount remote filesystems
  on demand.  This implementation is partially kernel-based to reduce
  overhead in the already-mounted case; this is unlike the BSD
  automounter (amd), which is only in user space.  To use the
  automounter you need the user-space tools from
  ftp.kernel.org:/pub/linux/daemons/autofs; you also want to say Y to
  "NFS filesystem support", above.  If you want to compile this as a
  module ( = code which can be inserted in and removed from the
  running kernel whenever you want), say M here and read
  Documentation/modules.txt. The module will be called autofs.o.
  If you are not a part of a fairly large, distributed network, you
  probably do not need an automounter, and can say N here.

BSD UFS filesystem support (read only)
CONFIG_UFS_FS
  BSD and derivate versions of Unix (such as SunOS, FreeBSD, NetBSD
  and NeXTstep) use a filesystem called UFS. Some System V Unixes can
  create and mount partitions and diskettes using this filesystem as
  well. Saying Y here allows you to mount these partitions and
  diskettes read-only. If you only intend to mount files from some
  other Unix over the network using NFS, you don't need the UFS
  filesystem support (but you need nfs filesystem support
  obviously). Note that this option is generally not needed for
  floppies, since a good portable way to transport files and
  directories between unixes (and even other operating systems) is
  given by the tar program ("man tar"). When accessing NeXTstep files,
  you may need to convert them from the NeXT character set to the
  Latin1 character set; use GNU recode for this purpose.  Say Y to
  build UFS support into your kernel. If you want to compile this as a
  module ( = code which can be inserted in and removed from the
  running kernel whenever you want), say M here and read
  Documentation/modules.txt. The module will be called ufs.o. If you
  haven't heard about all of this before, it's safe to say N.

BSD disklabel (FreeBSD partition tables) support
CONFIG_BSD_DISKLABEL
  FreeBSD uses its own partition scheme on your PC. It requires only
  one entry in the primary partition table of your disk and manages it
  similarly to DOS extended partitions, putting in its first sector a
  new partition table in disklabel format. Saying Y here allows you to
  read these disklabels and further mount FreeBSD partitions on your
  Linux box if you also have configured BSD ufs filesystem support. If
  you don't know what all this is about, say N.

SMD disklabel (Sun partition tables) support
CONFIG_SMD_DISKLABEL
  Like most systems, SunOS uses its own partition table format,
  incompatible with all others. Saying Y here allows you to read these
  partition tables and further mount SunOS disks on your Linux box if
  you also have configured BSD ufs filesystem support. This is mainly
  used to carry data from a Sparc under SunOS to your Linux box via a
  removable medium like magneto-optical or ZIP drives. If you don't
  know what all this is about, say N.

SMB filesystem support (to mount WfW shares etc..)
CONFIG_SMB_FS
  SMB (Server Message Buffer) is the protocol Windows for Workgroups
  (WfW), Windows 95, Windows NT and Lan Manager use to share files and
  printers over local networks. Saying Y here allows you to mount
  their filesystems (often called "shares" in this context) and access
  them just like any other unix directory. Currently, this works only
  if the Windows machines use TCP/IP as the underlying transport
  protocol, and not Netbeui.  For details, read
  Documentation/filesystems/smbfs.txt.  Note: if you just want your
  box to act as an SMB *server* and make files and printing services
  available to Windows clients (which need to have a TCP/IP stack),
  you don't need to say Y here; you can use the program samba
  (available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/system/Network/samba) for that. General
  information about how to connect Linux, Windows machines and Macs is
  on the WWW at http://eats.com/linux_mac_win.html (to browse the WWW,
  you need to have access to a machine on the Internet that has a
  program like lynx or netscape).  If you want to compile the SMB
  support as a module ( = code which can be inserted in and removed
  from the running kernel whenever you want), say M here and read
  Documentation/modules.txt. The module will be called smbfs.o. Most
  people say N, however.

Coda filesystem support
CONFIG_CODA_FS
  CODA is an advanced network filesystem.  It has support for disconnected
  operation for laptops, read/write server replication, persistent client
  caches and write back caching. 
  By choosing this option you are compiling kernel support for Coda clients
  into the Linux kernel.  You will need user level code as well, both for 
  the client and server. Server's are currently user level, i.e. need
  no kernel support. For further information see
  http://www.coda.cs.cmu.edu or contact Peter Braam <braam@cs.cmu.edu>. 


SMB Win95 bug work-around
CONFIG_SMB_WIN95
  If you want to connect to a share exported by Windows 95, you should
  say Y here. The Windows 95 server contains a bug that makes listing
  directories unreliable. This option slows down the listing of
  directories. This makes the Windows 95 server a bit more stable.

NCP filesystem support (to mount NetWare volumes)
CONFIG_NCP_FS
  NCP (NetWare Core Protocol) is a protocol that runs over IPX and is
  used by Novell NetWare clients to talk to file servers. It is to IPX
  what nfs is to tcp/ip, if that helps. Saying Y here allows you to
  mount NetWare file server volumes and to access them just like any
  other Unix directory. For details, please read the file
  Documentation/filesystems/ncpfs.txt in the kernel source and the
  IPX-HOWTO on sunsite.unc.edu:/pub/Linux/docs/howto.  If you want to
  compile this as a module ( = code which can be inserted in and
  removed from the running kernel whenever you want), say M here and
  read Documentation/modules.txt. The module will be called
  ncpfs.o. Say N unless you are connected to a Novell network.

Amiga FFS filesystem support
CONFIG_AFFS_FS
  The Fast File System (FFS) is the common filesystem used on
  harddisks by Amiga(tm) Systems since AmigaOS Version 1.3
  (34.20). With this driver you can also mount diskfiles used by the
  Un*X Amiga Emulator by Bernd Schmidt
  (http://www-users.informatik.rwth-aachen.de/~crux/uae.html).  If you
  want to do the latter, you will also need to say Y to "Loop device
  support", above. Say Y if you want to be able to read and write
  files from and to an Amiga FFS partition on your harddrive. Amiga
  floppies however cannot be read with this driver due to an
  incompatibility of the floppy controller used in an Amiga and the
  standard floppy controller in PCs and workstations. Read
  Documentation/filesystems/affs.txt. This filesystem is also
  available as a module ( = code which can be inserted in and removed
  from the running kernel whenever you want). The module is called
  affs.o. If you want to compile it as a module, say M here and read
  Documentation/modules.txt.  If unsure, say N.

ROM filesystem support
CONFIG_ROMFS_FS
  This is a very small read-only filesystem mainly intended for
  initial ram disks of installation disk, but it could be used for
  other read-only media as well. Read
  Documentation/filesystems/romfs.txt for details. This filesystem is
  also available as a module ( = code which can be inserted in and
  removed from the running kernel whenever you want). The module is
  called romfs.o. If you want to compile it as a module, say M here
  and read Documentation/modules.txt.  If you don't know whether you
  need it, then you don't need it: say N.

Virtual terminal
CONFIG_VT
  This includes support for a terminal device using display and
  keyboard devices. Only people using embedded systems want to say N
  here; most everybody says Y.

Console on virtual terminal
CONFIG_VT_CONSOLE
  If you enable this option, all kernel messages will be sent to the
  device /dev/tty which corresponds to the virtual terminal you have
  visible on your display. You should say N here only if you have some
  other console device, in which case you probably want to say Y to
  "Console on serial port", below. If unsure, say N.

Software generated cursor
CONFIG_SOFTCURSOR
  If you enable this option, you'll be able to do lots of nice things
  with your cursor -- for example to turn it into a non-blinking one.
  See Documentation/VGA-softcursor.txt for more information.

Standard/generic serial support
CONFIG_SERIAL
  This selects whether you want to include the driver for the standard
  serial ports.  People who might say N here are those that are
  setting up dedicated ethernet WWW/ftp servers, or users that have
  one of the various bus mice instead of a serial mouse.  (Note that
  the Cyclades and Stallion multi serial port drivers do not need this
  driver built in for them to work.)  If you want to compile this
  driver as a module, say M here and read
  Documentation/modules.txt. The module will be called
  serial.o. [WARNING: Do not compile this driver as a module if you
  are using non-standard serial ports, since the configuration
  information will be lost when kerneld automatically unloads the
  driver.  This limitation may be lifted in the future.] BTW: If you
  have a mouseman serial mouse which is not recognized by the X window
  system, try running gpm first.  Most people will say Y or M here, so
  that they can use serial mice, modems and similar devices connecting
  to the standard serial ports.

Console on serial port
CONFIG_SERIAL_CONSOLE
  If you enable this option, all kernel messages will be sent to the
  device /dev/ttyS0 which corresponds to a serial port; this could be
  useful if you attached a terminal or printer to that port. (You can
  change the number of the serial port used from 0 to something else
  by setting the variable CONFIG_SERIAL_CONSOLE_PORT.) You can use
  this option in combination with the option "Console on virtual
  terminal" above, in which case you get the output on both the serial
  port and on your display. Most people say N here so that they can
  use the serial port for modem, mouse or some other device.

Comtrol Rocketport support
CONFIG_ROCKETPORT
  This is a driver for the Comtrol Rocketport cards which provide
  multiple serial ports.  You would need something like this to
  connect more than two modems to your linux box, for instance in
  order to become a BBS.If you want to compile this driver as a
  module, say M here and read Documentation/modules.txt. The module
  will be called rocket.o.

Digiboard Intelligent async support
CONFIG_DIGIEPCA
  This is a driver for Digi International's Xx, Xeve, and Xem series
  of cards which provide multiple serial ports.  You would need
  something like this to connect more than two modems to your linux
  box, for instance in order to become a BBS. This driver supports the
  original PC (ISA) boards as well as PCI, and EISA.  If you have a
  card like this, say Y here and read the file
  Documentation/digiepca.txt.  NOTE: There is another, separate driver
  for the Digiboard PC boards: "Digiboard PC/Xx Support" below. You
  should (and can) only select one of the two drivers. If you want to
  compile this driver as a module, say M here and read
  Documentation/modules.txt. The module will be called epca.o.

Digiboard PC/Xx Support
CONFIG_DIGI
  This is a driver for the Digiboard PC/Xe, PC/Xi, and PC/Xeve cards
  that give you many serial ports. You would need something like this
  to connect more than two modems to your linux box, for instance in
  order to become a BBS. If you have a card like that, say Y here and
  read the file Documentation/digiboard.txt. If you want to compile
  this driver as a module, say M here and read
  Documentation/modules.txt. The module will be called pcxx.o.

SDL RISCom/8 card support
CONFIG_RISCOM8
  This is a driver for the SDL Communications RISCom/8 multiport card,
  which gives you many serial ports. You would need something like
  this to connect more than two modems to your linux box, for instance
  in order to become a BBS. If you have a card like that, say Y here
  and read the file Documentation/riscom8.txt. Also it's possible to
  say M here and compile this driver as kernel loadable module; the
  module will be called riscom8.o.

Specialix IO8+ card support
CONFIG_SPECIALIX
  This is a driver for the Specialix IO8+ multiport card, that give 
  you many serial ports. You would need something like this to 
  connect more than two modems to your linux box, for instance in
  order to become a BBS. If you have a card like that, say Y here and
  read the file Documentation/specialix.txt. Also it's possible to say
  M here and compile this driver as kernel loadable module.

Specialix DTR/RTS pin is RTS
CONFIG_SPECIALIX_RTSCTS
  The Specialix card can only support either RTS or DTR. When this
  option is off, the driver will use the pin as "DTR" when the tty is
  in software handshake mode. When this option is on or hardware 
  handshake is on, it will always be RTS. Read the file 
  Documentation/specialix.txt for more information. 

Cyclades async mux support
CONFIG_CYCLADES
  This is a driver for a card that gives you many serial ports. You
  would need something like this to connect more than two modems to
  your linux box, for instance in order to become a BBS. If you want
  to compile this as a module ( = code which can be inserted in and
  removed from the running kernel whenever you want), say M here and
  read Documentation/modules.txt. The module will be called
  cyclades.o. If you haven't heard about it, it's safe to say N. (As
  of 1.3.9x kernels, this driver's minor numbers start at 0 instead of
  32.)

Stallion multiport serial support 
CONFIG_STALDRV
  Stallion cards give you many serial ports. You would need something
  like this to connect more than two modems to your linux box, for
  instance in order to become a BBS. If you say Y here, you will be
  asked for your specific card model in the next questions. Make sure
  to read drivers/char/README.stallion in this case. If you have never
  heard about all this, it's safe to say N.
 
Stallion EasyIO or EC8/32 support 
CONFIG_STALLION
  If you have an EasyIO or EasyConnection 8/32 multiport Stallion
  card, then this is for you; say Y. Make sure to read
  Documentation/stallion.txt. If you want to compile this as a
  module ( = code which can be inserted in and removed from the
  running kernel whenever you want), say M here and read
  Documentation/modules.txt. The module will be called stallion.o.

Stallion EC8/64, ONboard, Brumby support
CONFIG_ISTALLION
  If you have an EasyConnection 8/64, ONboard, Brumby or Stallion
  serial multiport card, say Y here. Make sure to read
  Documentation/stallion.txt. To compile it as a module ( = code
  which can be inserted in and removed from the running kernel
  whenever you want), say M here and read
  Documentation/modules.txt. The module will be called istallion.o.

Hayes ESP serial port support
CONFIG_ESPSERIAL
  This is a driver which supports Hayes ESP serial ports.  It uses DMA
  to transfer data to and from the host.  Make sure to read
  Documentation/hayes-esp.txt. To compile this driver as a module ( = code
  which can be inserted in and removed from the running kernel
  whenever you want), say M here and read
  Documentation/modules.txt. The module will be called esp.o.
  If unsure, say N.

Hayes ESP serial port DMA channel
CONFIG_ESPSERIAL_DMA_CHANNEL
  This is the DMA channel to be used to transfer data to and from the
  host.  One DMA channel is shared between all the ESP ports.  Valid
  values are 1 and 3.

Hayes ESP serial port receive trigger level
CONFIG_ESPSERIAL_RX_TRIGGER
  This is the trigger level (in bytes) of the receive FIFO.  Larger
  values may result in fewer interrupts; however, a value too high
  could result in data loss.  Valid values are 1 through 1023.

Hayes ESP serial port transmit trigger level
CONFIG_ESPSERIAL_TX_TRIGGER
  This is the trigger level (in bytes) of the transmit FIFO.  Larger
  values may result in fewer interrupts; however, a value too high
  could result in degraded transmit performance.  Valid values are 1
  through 1023.

Hayes ESP serial port flow off level
CONFIG_ESPSERIAL_FLOW_OFF
  This is the level (in bytes) at which the ESP port will "flow off"
  the remote transmitter (i.e. tell him to stop stop sending more
  bytes).  Valid values are 1 through 1023.  This value should be
  greater than the receive trigger level and the flow on level.

Hayes ESP serial port flow on level
CONFIG_ESPSERIAL_FLOW_ON
  This is the level (in bytes) at which the ESP port will "flow on"
  the remote transmitter (i.e. tell him to resume sending bytes) after
  having flowed it off.  Valid values are 1 through 1023.  This value
  should be less than the flow off level, but greater than the receive
  trigger level.

Hayes ESP serial port receiver timeout
CONFIG_ESPSERIAL_RX_TMOUT
  This is the amount of time that the ESP port will wait after
  receiving the final character before signaling an interrupt.  Valid
  values are 0 through 255.  A value too high will increase latency,
  and a value too low will cause unnecessary interrupts.

Parallel printer support
CONFIG_PRINTER
  If you intend to attach a printer to the parallel port of your Linux
  box (as opposed to using a serial printer; if the connector at the
  printer has 9 or 25 holes ["female"], then it's serial), say Y. Also
  read the Printing-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO.  It is possible to share one
  parallel port among several devices (e.g. printer and ZIP drive) and
  it is safe to compile the corresponding drivers into the kernel. If
  you want to compile this driver as a module however ( = code which
  can be inserted in and removed from the running kernel whenever you
  want), say M here and read Documentation/modules.txt. The module
  will be called lp.o.  If you have several parallel ports, you
  should specify the base address for the port to use by the printer
  with the "lp" kernel command line option. (Try "man bootparam" or
  see the documentation of your boot loader (lilo or loadlin) about
  how to pass options to the kernel at boot time. The lilo procedure
  is also explained in the SCSI-HOWTO, available via ftp (user:
  anonymous) in sunsite.unc.edu:/pub/Linux/docs/HOWTO.) The standard
  base addresses as well as the syntax of the "lp" command line option
  can be found in drivers/char/lp.c. If you have more than 3 printers,
  you need to increase the LP_NO variable in lp.c.

CONFIG_PRINTER_READBACK
  If your printer conforms to IEEE 1284, it may be able to provide a
  status indication when you read from it (for example, with `cat
  /dev/lp1').  To use this feature, say Y here.

Mouse Support (not serial mice)
CONFIG_MOUSE
  This is for machines with a bus mouse or a PS/2 mouse as opposed to
  a serial mouse. Most people have a regular serial MouseSystem or
  Microsoft mouse (made by Logitech) that plugs into a COM port
  (rectangular with 9 or 25 pins). These people say N here. If you
  have something else, read the Busmouse-HOWTO, available via ftp
  (user: anonymous) in sunsite.unc.edu:/pub/Linux/docs/HOWTO and say Y
  here. If you have a laptop, you either have to check the
  documentation or experiment a bit to find out whether the trackball
  is a serial mouse or not; it's best to say Y here for you. Note that
  the answer to this question won't directly affect the kernel: saying
  N will just cause this configure script to skip all the questions
  about non-serial mice.  If unsure, say Y.

Logitech busmouse support
CONFIG_BUSMOUSE
  Logitech mouse connected to a proprietary interface card. It's
  generally a round connector with 9 pins. Note that the newer mice
  made by Logitech don't use the Logitech protocol anymore; for those,
  you don't need this option. You want to read the Busmouse-HOWTO,
  available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO.  If you want to compile this
  as a module ( = code which can be inserted in and removed from the
  running kernel whenever you want), say M here and read
  Documentation/modules.txt. The module will be called busmouse.o. If
  you are unsure, say N and read the HOWTO nevertheless: it will tell
  you what you have.

PS/2 mouse (aka "auxiliary device") support
CONFIG_PSMOUSE
  The PS/2 mouse connects to a special mouse port that looks much like
  the keyboard port (small circular connector with 6 pins). This way,
  the mouse does not use any serial ports. This port can also be used
  for other input devices like light pens, tablets, keypads. Compaq,
  AST and IBM all use this as their mouse port on currently shipping
  machines. The trackballs of some laptops are PS/2 mice also. In
  particular, the C&T 82C710 mouse on TI Travelmates is a PS/2
  mouse. Although PS/2 mice are not technically bus mice, they are
  explained in detail in the Busmouse-HOWTO, available via ftp (user:
  anonymous) in sunsite.unc.edu:/pub/Linux/docs/HOWTO.  When using a
  PS/2 mouse, you can get problems if you want to use the mouse both
  on the Linux console and under X. Using the "-R" option of the Linux
  mouse managing program gpm (available from
  sunsite.unc.edu:/pub/Linux/system/Daemons) solves this problem, or
  you can get the "mconv" utility also from sunsite.
  If you want to compile this mouse driver as a module ( = code which
  can be inserted in and removed from the running kernel whenever you
  want), say M here and read Documentation/modules.txt. The module
  will be called psaux.o. If you are unsure, say N and read the HOWTO
  nevertheless: it will tell you what you have.

C&T 82C710 mouse port support (as on TI Travelmate)
CONFIG_82C710_MOUSE
  This is a certain kind of PS/2 mouse used on the TI Travelmate. If
  you are unsure, try first to say N here and come back if the mouse
  doesn't work. Read the Busmouse-HOWTO, available via ftp (user:
  anonymous) in sunsite.unc.edu:/pub/Linux/docs/HOWTO.

PC110 digitizer pad support
CONFIG_PC110_PAD
  This drives the digitizer pad on the IBM PC110 palmtop (see
  http://toy.cabi.net). It can turn the digitizer pad into a PS/2
  mouse emulation with tap gestures or into an absolute pad.  If you
  want to compile this as a module ( = code which can be inserted in
  and removed from the running kernel whenever you want), say M here
  and read Documentation/modules.txt. The module will be called
  pc110pad.o.

Microsoft busmouse support
CONFIG_MS_BUSMOUSE
  These animals (also called Inport mice) are connected to an
  expansion board using a round connector with 9 pins. If this is what
  you have, say Y and read the Busmouse-HOWTO, available via ftp
  (user: anonymous) in sunsite.unc.edu:/pub/Linux/docs/HOWTO.  If you
  want to compile this as a module ( = code which can be inserted in
  and removed from the running kernel whenever you want), say M here
  and read Documentation/modules.txt. The module will be called
  msbusmouse.o. If you are unsure, say N and read the HOWTO
  nevertheless: it will tell you what you have. Also be aware that
  several vendors talk about 'Microsoft busmouse' and actually mean
  PS/2 busmouse - so count the pins on the connector.

ATIXL busmouse support
CONFIG_ATIXL_BUSMOUSE
  This is a rare type of busmouse that is connected to the back of an
  ATI video card. Note that most ATI mice are actually Microsoft
  busmice. Read the Busmouse-HOWTO, available via ftp (user:
  anonymous) in sunsite.unc.edu:/pub/Linux/docs/HOWTO.  If you want to
  compile this as a module ( = code which can be inserted in and
  removed from the running kernel whenever you want), say M here and
  read Documentation/modules.txt. The module will be called
  atixlmouse.o. If you are unsure, say N and read the HOWTO
  nevertheless: it will tell you what you have.

Support for user miscellaneous modules
CONFIG_UMISC
  This option forces generic miscellaneous minor device support in the
  kernel, and allows later loading of user miscellaneous device
  modules, such as drivers for optic pens and touchscreens. Unless you
  need such specific modules, or are willing to write/test one, just
  say N.

QIC-02 tape support
CONFIG_QIC02_TAPE
  If you have a non-SCSI tape drive like that, say Y. Or, if you want
  to compile this driver as a module ( = code which can be inserted in
  and removed from the running kernel whenever you want), say M here
  and read Documentation/modules.txt. The module will be called
  tpqic02.o.

Do you want runtime configuration for QIC-02
CONFIG_QIC02_DYNCONF
  You can either configure this driver once and for all by editing a
  header file (include/linux/tpqic02.h), in which case you should
  say N, or you can fetch a program via anonymous ftp which is able
  to configure this driver during runtime. The program to do this is
  called 'qic02conf' and it is part of the 'tpqic02-support-X.Y.tar.gz'
  support package.
  If you want to use the qic02conf program, say Y.

Floppy tape drive (QIC-80/40/3010/3020/TR-1/TR-2/TR-3) support
CONFIG_FTAPE
    If you have a tape drive that is connected to your floppy
  controller, say `Y' here. Some tape drives (like the Seagate "Tape
  Store 3200" or the Iomega "Ditto 3200" or the Exabyte "Eagle TR-3")
  come with a "high speed" controller of their own. These drives (and
  their companion controllers) are also supported.
    If you have a special controller (such as the CMS FC-10, FC-20,
  Mountain Mach-II, or any controller that is based on the Intel 82078
  FDC like the high speed controllers by Seagate and Exabyte and
  Iomega's "Ditto Dash") you must configure it by selecting the
  appropriate entries from the "Floppy tape controllers" sub-menu and
  possibly modify the default values for the IRQ and DMA channel and
  the IO base in ftape's configuration menu. If you want to use your
  floppy tape drive on a PCI-bus based system, please read the file
  `./drivers/char/ftape/README.PCI'.
    The ftape kernel driver is also available as a runtime loadable
  module ( = code which can be inserted in and removed from the
  running kernel whenever you want). If you want to compile it as a
  module, say `M' here and read `./Documentation/modules.txt'.
    Note that the `Ftape-HOWTO' is out of date (sorry), but there is a
  web page with more recent documentation at
  `http://www-math.math.rwth-aachen.de/~LBFM/claus/ftape/'. This page
  always contains the latest release of the ftape driver and useful
  information (backup software, ftape related patches and
  documentation, FAQ). The Ftape-HOWTO still contains useful
  information, though, but documents the older 2.08 version of ftape,
  whereas this version of ftape is 3.04.
    Note that the file system interface has changed quite a lot
  compared to previous versions of ftape. Please read
  `./Documentation/ftape.txt'

The file system interface for ftape
CONFIG_ZFTAPE
    Normally, you want to say `Y' or `M'. DON'T say `N' here or you
  WON'T BE ABLE TO USE YOUR FLOPPY TAPE DRIVE.
    The ftape module itself no longer contains the routines necessary
  to interface with the kernel VFS layer (i.e. to actually write data
  to and read data from the tape drive). Instead the file system
  interface (i.e. the hardware independent part of the driver) has
  been moved to a separate module.
    If you say `M' zftape will be compiled as as a runtime loadable
  module ( = code which can be inserted in and removed from the
  running kernel whenever you want). In this case you should read
  `./Documentation/modules.txt'.
    There will also be another module called `zft-compressor.o' which
  contains code to support user transparent on-the-fly compression
  based on Ross William's lzrw3 algorithm. `zft-compressor.o' will be
  compiled as a runtime loadable module only. If you have enabled
  auto-loading of kernel modules via `kerneld' (i.e. have said `Y' to
  CONFIG_KERNELD) then `zft-compressor.o' will be loaded automatically
  by zftape when needed.
    Despite of its name zftape does NOT use compression by
  default. The file `./Documentation/ftape.txt' contains a short
  description of the most important changes in the file system
  interface compared to previous versions of ftape. The ftape home
  page `http://www-math.math.rwth-aachen.de/~LBFM/claus/ftape/'
  contains further information. IMPORTANT NOTE: zftape can read
  archives created by previous versions of ftape and provide file mark
  support (i.e. fast skipping between tape archives) but previous
  version of ftape will lack file mark support when reading archives
  produced by zftape.

Builtin on-the-fly compression for zftape, based on lzrw3
CONFIG_ZFT_COMPRESSOR
    This module implements builtin on-the-fly compression for ftape's
  file system interface zftape. `zft-compressor.o' is compiled as a
  runtime loadable module only and will be loaded by zftape on demand
  if support for auto-loading of modules via `kerneld' has been
  enabled (CONFIG_KERNELD).

Default block size for zftape
CONFIG_ZFT_DFLT_BLK_SZ
    If unsure leave this at its default value, i.e. 10240.  Note that
  you specify only the default block size here. The block size can be
  changed at run time using the MTSETBLK tape operation with the
  MTIOCTOP ioctl (i.e. with "mt -f /dev/qft0 setblk #BLKSZ" from the
  shell command line).
    The probably most striking difference between zftape and previous
  versions of ftape is the fact that all data must be written or read
  in multiples of a fixed block size. The block size defaults to
  10240 which is what GNU tar uses. The values for the block size
  should be either 1 or multiples of 1024 up to a maximum value of
  63488 (i.e. 62k). If you specify `1' then zftape's builtin
  compression will be disabled.
    Reasonable values are `10240' (GNU tar's default block size),
  `5120' (afio's default block size), `32768' (default block size some
  backup programs assume for SCSI tape drives) or `1' (no restriction
  on block size, but disables builtin compression).

Number of DMA buffers
CONFIG_FT_NR_BUFFERS
    Please leave this at `3"' unless you REALLY know what you are
  doing. It is not necessary to change this value. Values below 3 make
  the proper use of ftape impossible, values greater than 3 are waste
  of memory. You can change the amount of DMA memory used by ftape at
  runtime with "mt -f /dev/qft0 setdrvbuffer #NUMBUFFERS". Each buffer
  wastes 32kb of memory. Please note that this memory cannot be
  swapped out.

Procfs entry for ftape
CONFIG_FT_PROC_FS
    Optional. Saying `Y' will result in creation of a file
  `/proc/ftape' under the proc file system. This files can be viewed
  with your favorite pager (i.e. use "more /proc/ftape/history" or
  "less /proc/ftape/history" or simply "cat /proc/ftape/history"). The
  file will contain some status information about the inserted
  cartridge, the kernel driver, your tape drive, the floppy disk
  controller and the error history for the most recent use of the
  kernel driver. Saying `Y' will enlarge the size of the ftape driver
  by approximately 2k.
  WARNING: When compiling ftape as a module (i.e. saying `M' to
  `CONFIG_FTAPE') it is dangerous to use ftape's proc file system
  interface. Accessing `/proc/ftape' while the module is unloaded will
  result in a kernel Oops. This cannot be fixed from inside ftape.

Controlling the amount of debugging output of ftape
CONFIG_FT_NORMAL_DEBUG
    This option controls the amount of debugging output the ftape driver
  is ABLE to produce; it does not increase or diminish the debugging
  level itself. If unsure, leave this at its default setting,
  i.e. choose "Normal".
    Ftape can print lots of debugging messages to the system console
  resp. kernel log files. Reducing the amount of possible debugging
  output reduces the size of the kernel module by some kb, so it might
  be a good idea to use "None" for emergency boot floppies.
    If you want to save memory then the following strategy is
  recommended: leave this option at its default setting "Normal" until
  you know that the driver works as expected, afterwards reconfigure
  the kernel, this time specifying "Reduced" or "None" and recompile
  and install the kernel as usual. Note that choosing "Excessive"
  debugging output does not increase the amount of debugging output
  printed to the console but only makes it possible to produce
  "Excessive" debugging output.
    Please read `./Documentation/ftape.txt' for a short description
  how to control the amount of debugging output.

The floppy drive controller for ftape
CONFIG_FT_STD_FDC
    Only change this setting if you have a special controller. If you
  didn't plug any add-on card into your computer system but just
  plugged the floppy tape cable into the already existing floppy drive
  controller then you don't want to change the default setting,
  i.e. choose "Standard".
  Choose "MACH-2" if you have a Mountain Mach-2 controller.
  Choose "FC-10/FC-20" if you have a Colorado FC-10 or FC-20
  controller.
  Choose "Alt/82078" if you have another controller that is located at
  an IO base address different from the standard floppy drive
  controller's base address of `0x3f0', or uses an IRQ (interrupt)
  channel different from `6', or a DMA channel different from
  `2'. This is necessary for any controller card that is based on
  Intel's 82078 FDC such as Seagate's, Exabyte's and Iomega's "high
  speed" controllers.
    If you choose something other than "Standard" then please make
  sure that the settings for the IO base address and the IRQ and DMA
  channel in the configuration menus below are correct. Use the manual
  of your tape drive to determine the correct settings!
    If you are already successfully using your tape drive with another
  operating system then you definitely should use the same settings
  for the IO base, the IRQ and DMA channel that have proven to work
  with that other OS.
    Note that this menu lets you specify only the default setting for
  the hardware setup. The hardware configuration can be changed at
  boot time (when ftape is compiled into the kernel, i.e. if you
  have said `Y' to `CONFIG_FTAPE') or module load time (i.e. if you
  have said `M' to `CONFIG_FTAPE').
    Please read also the file `./Documentation/ftape.txt' which
  contains a short description of the parameters that can be set at
  boot or load time. If you want to use your floppy tape drive on a
  PCI-bus based system, please read the file
  `./drivers/char/ftape/README.PCI'.

IO base of the floppy disk controller used with Ftape
CONFIG_FT_FDC_BASE
    You don't need to specify a value if the following default
  settings for the base IO address are correct:
  <<< MACH-2     : 0x1E0 >>>
  <<< FC-10/FC-20: 0x180 >>>
  <<< Secondary  : 0x370 >>>
  Secondary refers to a secondary FDC controller like the "high speed"
  controllers delivered by Seagate or Exabyte or Iomega's Ditto Dash.
    Please make sure that the setting for the IO base address
  specified here is correct. USE THE MANUAL OF YOUR TAPE DRIVE OR
  CONTROLLER CARD TO DETERMINE THE CORRECT SETTING. If you are already
  successfully using the tape drive with another operating system then
  you definitely should use the same settings for the IO base that has
  proven to work with that other OS.
    Note that this menu lets you specify only the default setting for
  the IO base. The hardware configuration can be changed at boot time
  (when ftape is compiled into the kernel, i.e. if you specify `Y' to
  `CONFIG_FTAPE') or module load time (i.e. if you have say `M' to
  `CONFIG_FTAPE').
    Please read also the file `./Documentation/ftape.txt' which
  contains a short description of the parameters that can be set at
  boot or load time.
  
IRQ channel for the floppy disk controller used with Ftape
CONFIG_FT_FDC_IRQ
    You don't need to specify a value if the following default
  settings for the interrupt channel are correct:
  <<< MACH-2     : 6 >>>
  <<< FC-10/FC-20: 9 >>>
  <<< Secondary  : 6 >>>
  Secondary refers to secondary a FDC controller like the "high speed"
  controllers delivered by Seagate or Exabyte or Iomega's Ditto Dash.
    Please make sure that the setting for the IO base address
  specified here is correct. USE THE MANUAL OF YOUR TAPE DRIVE OR
  CONTROLLER CARD TO DETERMINE THE CORRECT SETTING. If you are already
  successfully using the tape drive with another operating system then
  you definitely should use the same settings for the IO base that has
  proven to work with that other OS.
    Note that this menu lets you specify only the default setting for
  the IRQ channel. The hardware configuration can be changed at boot
  time (when ftape is compiled into the kernel, i.e. if you specify
  `Y' to `CONFIG_FTAPE') or module load time (i.e. if you have say `M'
  to `CONFIG_FTAPE').
    Please read also the file `./Documentation/ftape.txt' which
  contains a short description of the parameters that can be set at
  boot or load time.
  
DMA channel for the floppy disk controller used with Ftape
CONFIG_FT_FDC_DMA
    You don't need to specify a value if the following default
  settings for the DMA channel are correct:
  <<< MACH-2     : 2 >>>
  <<< FC-10/FC-20: 3 >>>
  <<< Secondary  : 2 >>>
  Secondary refers to a secondary FDC controller like the "high speed"
  controllers delivered by Seagate or Exabyte or Iomega's Ditto Dash.
    Please make sure that the setting for the IO base address
  specified here is correct. USE THE MANUAL OF YOUR TAPE DRIVE OR
  CONTROLLER CARD TO DETERMINE THE CORRECT SETTING. If you are already
  successfully using the tape drive with another operating system then
  you definitely should use the same settings for the IO base that has
  proven to work with that other OS.
    Note that this menu lets you specify only the default setting for
  the DMA channel. The hardware configuration can be changed at boot
  time (when ftape is compiled into the kernel, i.e. if you specify
  `Y' to `CONFIG_FTAPE') or module load time (i.e. if you have say `M'
  to `CONFIG_FTAPE').
    Please read also the file `./Documentation/ftape.txt' which
  contains a short description of the parameters that can be set at
  boot or load time.

FDC FIFO Threshold before requesting DMA service
CONFIG_FT_FDC_THR
    Set the FIFO threshold of the FDC. If this is higher the DMA
  controller may serve the FCD after a higher latency time. If this is
  lower, less DMA transfers occur leading to less bus contention.
    You may try to tune this if ftape annoys you with "reduced data
  rate because of excessive overrun errors" messages. However, this
  doesn't seem to have too much an effect.
  If unsure, don't touch the initial value, i.e. leave it at "8".

FDC maximum data rate
CONFIG_FT_FDC_MAX_RATE
    With some mother board/FDC combinations ftape will not be able to
  run your FDC/tape drive combination at the highest available
  speed. If this is the case you'll encounter "reduced data rate
  because of excessive overrun errors" messages and lots of retries
  before ftape finally decides to reduce the data rate.
    In this case it might be desirable to tell ftape beforehand that
  it need not try to run the tape drive at the highest available
  speed. If unsure, leave this disabled, i.e. leave it at 2000
  bits/sec.

Main CPU frequency, only for DEC alpha machine
CONFIG_FT_ALPHA_CLOCK
  On some DEC Alpha machines the CPU clock frequency cannot be
  determined automatically, so you need to specify it here ONLY if
  running a DEC Alpha, otherwise this setting has no effect.

Zilog serial support
CONFIG_SUN_ZS
  This driver does not exist at this point, so you might as well say
  N.

Advanced Power Management
CONFIG_APM
  APM is a BIOS specification for saving power using several different
  techniques.  This is mostly useful for battery powered laptops with
  APM compliant BIOSes.  Specifically, the time will be reset after a
  USER RESUME operation, the /proc/apm device will provide battery
  status information, and user-space programs will receive
  notification of APM "events" (e.g., battery status
  change). Supporting software can be gotten via ftp (user: anonymous)
  from tsx-11.mit.edu/pub/linux/packages/laptops/apm/. This driver
  does not spin down disk drives (see hdparm(8) for that); and it
  doesn't turn off VESA-compliant "green" monitors.  This driver does
  not support the TI 4000M TravelMate and the ACER 486/DX4/75 because
  they don't have compliant BIOSes.  Many "green" desktop machines
  also don't have compliant BIOSes, and this driver will cause those
  machines to panic during the boot phase (typically, these machines
  are using a data segment of 0040, which is reserved for the Linux
  kernel). Generally, if you don't have a battery in your machine,
  there isn't much point in using this driver and you should say N.
  If you get random kernel OOPSes or reboots that don't seem to be
  related to anything, try disabling/enabling this option. Some other
  things to try when experiencing seemingly random, "weird" problems:
   1) passing the "no-hlt" option to the kernel 
   2) passing the "no-387" option to the kernel 
   3) passing the "floppy=nodma" option to the kernel
   4) passing the "mem=4M" option to the kernel (thereby disabling 
      all but the first 4M of RAM)
   5) reading the sig11 FAQ at http://www.bitwizard.nl/sig11/
   6) disabling the cache from your BIOS settings
   7) installing a better fan
   8) exchanging RAM chips 
   9) exchanging the motherboard.

Ignore USER SUSPEND
CONFIG_APM_IGNORE_USER_SUSPEND
  This option will ignore USER SUSPEND requests.  On machines with a
  compliant APM BIOS, you want to say N.  However, on the NEC Versa M
  series notebooks, it is necessary to say Y because of a BIOS bug.

Enable APM at boot time
CONFIG_APM_DO_ENABLE
  Enable APM features at boot time.  From page 36 of the APM BIOS
  specification: "When disabled, the APM BIOS does not automatically
  power manage devices, enter the Standby State, enter the Suspend State,
  or take power saving steps in response to CPU Idle calls."  This driver
  will make CPU Idle calls when Linux is idle (unless this feature is
  turned off -- see below).  This should always save battery power, but
  more complicated APM features will be dependent on your BIOS
  implementation.  You may need to turn this option off if your computer
  hangs at boot time when using APM support, or if it beeps continuously
  instead of suspending.  Turn this off if you have a NEC UltraLite Versa
  33/C or a Toshiba T400CDT.  This is off by default since most machines
  do fine without this feature.

Do CPU IDLE calls
CONFIG_APM_CPU_IDLE
  Enable calls to APM CPU Idle/CPU Busy inside the kernel's idle loop.
  On some machines, this can activate improved power savings, such as a
  slowed CPU clock rate, when the machine is idle.  These idle calls are
  made after the idle loop has run for some length of time (e.g., 333
  mS).  On some machines, this will cause a hang at boot time or whenever
  the CPU becomes idle.  (On machines with more than one CPU, this option
  does nothing.)

Enable console blanking using APM
CONFIG_APM_DISPLAY_BLANK
  Enable console blanking using the APM.  Some laptops can use this to
  turn off the LCD backlight when the VC screen blanker blanks the
  screen.  Note that this is only used by the VC screen blanker, and
  won't turn off the backlight when using X11 (this also doesn't have
  anything to do with your VESA-compliant power-saving monitor).
  Further, this option doesn't work for all laptops -- it might not turn
  off your backlight at all, or it might print a lot of errors to the
  console, especially if you are using gpm.

Power off on shutdown 
CONFIG_APM_POWER_OFF
  This option will power off the computer after the Linux kernel is halted
  (e.g., with the halt(8) command).  As with the other APM options, this
  option may not work reliably with some APM BIOS implementations.

Watchdog Timer Support 
CONFIG_WATCHDOG
  If you say Y here (and to one of the following options) and create a
  character special file /dev/watchdog with major number 10 and minor
  number 130 using mknod ("man mknod"), you will get a watchdog, i.e.:
  subsequently opening the file and failing to write to it for longer
  than 1 minute will result in rebooting the machine. This could be
  useful for a networked machine that needs to come back online as
  fast as possible after a lock-up. There's both a watchdog
  implementation entirely in software (which can sometimes fail to
  reboot the machine) and a driver for hardware watchdog boards, which
  are more robust and can also keep track of the temperature inside
  your computer. For details, read Documentation/watchdog.txt in the
  kernel source.
  The watchdog is usually used together with the watchdog daemon which
  is available via ftp (user: anonymous) from
  tsx-11.mit.edu/pub/linux/sources/sbin/. This daemon can also monitor
  NFS connections and can reboot the machine when the process table is
  full.
  If unsure, say N.

Disable watchdog shutdown on close
CONFIG_WATCHDOG_NOWAYOUT
  The default watchdog behaviour (which you get if you say N here) is
  to stop the timer if the process managing it closes the file
  /dev/watchdog. It's always remotely possible that this process might
  get killed. If you say Y here, the watchdog cannot be stopped once
  it has been started.

WDT Watchdog timer
CONFIG_WDT
  If you have a WDT500P or WDT501P watchdog board, say Y here,
  otherwise N. It is not possible to probe for this board, which means
  that you have to set the IO port and IRQ it uses in the kernel
  source at the top of drivers/char/wdt.c. If you want to compile this
  as a module ( = code which can be inserted in and removed from the
  running kernel whenever you want), say M here and read
  Documentation/modules.txt. The module will be called wdt.o.

WDT501 features
CONFIG_WDT_501
  Saying Y here and creating a character special file /dev/temperature
  with major number 10 and minor number 131 ("man mknod") will give
  you a thermometer inside your computer: reading from
  /dev/temperature yields one byte, the temperature in degrees
  Fahrenheit. This works only if you have a WDT501P watchdog board
  installed.

Fan Tachometer
CONFIG_WDT_501_FAN
  Enable the Fan Tachometer on the WDT501. Only do this if you have a fan
  tachometer actually set up.

Software Watchdog
CONFIG_SOFT_WATCHDOG
  A software monitoring watchdog. This will fail to reboot your system
  from some situations that the hardware watchdog will recover
  from. Equally it's a lot cheaper to install. This driver is also
  available as a module ( = code which can be inserted in and removed
  from the running kernel whenever you want). If you want to compile
  it as a module, say M here and read Documentation/modules.txt. The
  module will be called softdog.o.

Berkshire Products PC Watchdog
CONFIG_PCWATCHDOG
  This is the driver for the Berkshire Products PC Watchdog card.
  This card simply watches your kernel to make sure it doesn't freeze,
  and if it does, it resets your computer after a certain amount of
  time.  This driver is like the WDT501 driver but for different
  hardware. Please read Documentation/pcwd-watchdog.txt. The PC
  watchdog cards can be ordered from http://www.berkprod.com. Some
  example rc.local files are available from ftp.bitgate.com. This
  driver is also available as a module ( = code which can be inserted
  in and removed from the running kernel whenever you want). The
  module is called pcwd.o. If you want to compile it as a module, say
  M here and read Documentation/modules.txt.  Most people will say N.

Acquire SBC Watchdog Timer
CONFIG_ACQUIRE_WDT
  This is the driver for the hardware watchdog on the PSC-6x86 Single
  Board Computer produced by Acquire Inc (and others). This watchdog
  simply watches your kernel to make sure it doesn't freeze, and if
  it does, it resets your computer after a certain amount of time.
  This driver is like the WDT501 driver but for different hardware.
  This driver is also available as a module ( = code which can be 
  inserted in and removed from the running kernel whenever you want).
  The module is called pscwdt.o. If you want to compile it as a module,
  say M here and read Documentation/modules.txt.  Most people will say N.
  
Enhanced Real Time Clock Support
CONFIG_RTC
  If you say Y here and create a character special file /dev/rtc with
  major number 10 and minor number 135 using mknod ("man mknod"), you
  will get access to the real time clock built into your
  computer. Every PC has such a clock built in. It can be used to
  generate signals from as low as 1Hz up to 8192Hz, and can also be
  used as a 24 hour alarm.  It reports status information via the file
  /proc/rtc and its behaviour is set by various ioctls on
  /dev/rtc. People running SMP (= multiprocessor) versions of Linux
  should say Y here to read and set the RTC clock in a SMP compatible
  fashion. (They should also read Documentation/smp.) If you think you
  have a use for such a device (such as periodic data sampling), then
  say Y here, and go read the file Documentation/rtc.txt for details.

/dev/nvram support
CONFIG_NVRAM
  If you say Y here and create a character special file /dev/nvram
  with major number 10 and minor number 144 using mknod ("man mknod"),
  you get access to the 50 bytes of non-volatile memory in the real
  time clock (RTC), which is contained in every PC and most
  Ataris. This memory is conventionally called "CMOS RAM" on PCs and
  "NVRAM" on Ataris. /dev/nvram may be used to view settings there, or
  to change them (with some utility). It could also be used to
  frequently save a few bits of very important data that may not be
  lost over power-off and for which writing to disk is too
  insecure. On Atari machines, /dev/nvram is always configured and
  does not need to be selected.  This driver is also available as a
  module ( = code which can be inserted in and removed from the
  running kernel whenever you want). The module will be called
  nvram.o. If you want to compile it as a module, say M here and read
  Documentation/modules.txt.

PC joystick support
CONFIG_JOYSTICK
  If you have a PC compatible analog or digital joystick, you can
  say Y here. If you then create a character special file under /dev
  with major number 15 and minor number 0 or 1 (for the two joystick
  ports) using mknod ("man mknod"), you can read the status of the
  buttons and the x and y coordinates from that file. More
  information, an example program and a calibration program are
  contained in the joystick package which is available at:
  ftp://sunsite.unc.edu/pub/Linux/kernel/patches/console
  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called joystick.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

ARC console time
CONFIG_RTC_ARC
  If you boot your Alpha using the ARC firmware, say Y here. This option
  adjusts the RTC clock to take into account the different starting epoch
  used by ARC.

Sound card support
CONFIG_SOUND
  If you have a Sound Card in your Computer, i.e. if it can say more
  than an occasional beep, say Y. Be sure to have all the information
  about your sound card and its configuration down (I/O port,
  interrupt and DMA channel), because you will be asked for it. You
  want to read the Sound-HOWTO, available via ftp (user: anonymous)
  from sunsite.unc.edu:/pub/Linux/docs/HOWTO. There is also some
  information in various README files in drivers/sound.  If you want
  to compile this as a module ( = code which can be inserted in and
  removed from the running kernel whenever you want), say M here and
  read Documentation/modules.txt. I'm told that even without a sound
  card, you can make your computer say more than an occasional beep,
  by programming the PC speaker. Kernel patches and programs to do
  that are at
  sunsite.unc.edu:/pub/Linux/kernel/patches/console/pcsndrv-X.X.tar.gz,
  to be extracted with "tar xzvf filename".

ProAudioSpectrum 16 support
CONFIG_PAS
  Answer Y only if you have a Pro Audio Spectrum 16, ProAudio Studio
  16 or Logitech SoundMan 16.  Don't answer Y if you have some other
  card made by Media Vision or Logitech since they are not PAS16
  compatible.

SoundBlaster (SB, SBPro, SB16, clones) support
CONFIG_SB
  Answer Y if you have an original SoundBlaster card made by
  Creative Labs or a 100% hardware compatible clone (like the
  Thunderboard or SM Games). If your card was in the list of supported
  cards look at the card specific instructions in the
  drivers/sound/Readme.cards file before answering this question. For
  an unknown card you may answer Y if the card claims to be
  SoundBlaster compatible.

Generic OPL2/OPL3 FM synthesizer support
CONFIG_ADLIB
  Answer Y if your card has a FM chip made by Yamaha (OPL2/OPL3/OPL4).
  Answering Y is usually a safe and recommended choice, however some
  cards may have software (TSR) FM emulation. Enabling FM support with
  these cards may cause trouble (I don't currently know of any such
  cards, however).

Gravis Ultrasound support
CONFIG_GUS
  Say Y here for any type of Gravis Ultrasound card, including
  the GUS or GUS MAX.

MPU-401 support (NOT for SB16)
CONFIG_MPU401
  Be careful with this question. The MPU401 interface is supported by
  all soundcards. However, some natively supported cards have their
  own driver for MPU401. Enabling this MPU401 option with these cards
  will cause a conflict. Also, enabling MPU401 on a system that
  doesn't really have a MPU401 could cause some trouble. If your card
  was in the list of supported cards, look at the card specific
  instructions in the drivers/sound/Readme.cards file. It's safe to
  answer Y if you have a true MPU401 MIDI interface card.

6850 UART Midi support
CONFIG_UART6850
  This option enables support for MIDI interfaces based on the 6850
  UART chip. This interface is rarely found on sound cards.  It's safe
  to answer N to this question.

PSS (ECHO-ADI2111) support
CONFIG_PSS
  Answer Y only if you have Orchid SW32, Cardinal DSP16 or some other
  card based on the PSS chipset (AD1848 codec + ADSP-2115 DSP chip +
  Echo ESC614 ASIC CHIP).

16 bit sampling option of GUS (_NOT_ GUS MAX)
CONFIG_GUS16
  Answer Y if you have installed the 16 bit sampling daughtercard on
  your GUS.  Answer N if you have a GUS MAX, since saying Y here
  disables GUS MAX support.

GUS MAX support
CONFIG_GUSMAX
  Answer Y only if you have a Gravis Ultrasound MAX.

Microsoft Sound System support
CONFIG_MSS
  Again think carefully before answering Y to this question.  It's
  safe to answer Y if you have the original Windows Sound System card
  made by Microsoft or Aztech SG 16 Pro (or NX16 Pro).  Also you may
  answer Y in case your card is NOT among these:
     ATI Stereo F/X, AdLib, Audio Excell DSP16, Cardinal DSP16,
     Ensoniq SoundScape (and compatibles made by Reveal and Spea),
     Gravis Ultrasound, Gravis Ultrasound ACE, Gravis Ultrasound Max,
     Gravis Ultrasound with 16 bit option, Logitech Sound Man 16,
     Logitech SoundMan Games, Logitech SoundMan Wave, MAD16 Pro (OPTi
     82C929), Media Vision Jazz16, MediaTriX AudioTriX Pro, Microsoft
     Windows Sound System (MSS/WSS), Mozart (OAK OTI-601), Orchid
     SW32, Personal Sound System (PSS), Pro Audio Spectrum 16, Pro
     Audio Studio 16, Pro Sonic 16, Roland MPU-401 MIDI interface,
     Sound Blaster 1.0, Sound Blaster 16, Sound Blaster 16ASP, Sound
     Blaster 2.0, Sound Blaster AWE32, Sound Blaster Pro, TI TM4000M
     notebook, ThunderBoard, Turtle Beach Tropez, Yamaha FM
     synthesizers (OPL2, OPL3 and OPL4), 6850 UART MIDI Interface.
  For cards having native support in VoxWare, consult the card
  specific instructions in drivers/sound/Readme.cards. Some drivers
  have their own MSS support and saying Y to this option will cause a
  conflict.

Ensoniq Soundscape support
CONFIG_SSCAPE
  Answer Y if you have a soundcard based on the Ensoniq SoundScape
  chipset. Such cards are being manufactured at least by Ensoniq, Spea
  and Reveal (Reveal makes also other cards).

MediaTriX AudioTriX Pro support
CONFIG_TRIX
  Answer Y if you have the AudioTriX Pro sound card manufactured
  by MediaTrix.

Support for MAD16 and/or Mozart based cards
CONFIG_MAD16
  Answer Y if your card has a Mozart (OAK OTI-601) or MAD16
  (OPTi 82C928 or 82C929) audio interface chip. These chips are
  currently quite common so it's possible that many no-name cards
  have one of them. In addition the MAD16 chip is used in some
  cards made by known manufacturers such as Turtle Beach (Tropez),
  Reveal (some models) and Diamond (latest ones).

Support for Crystal CS4232 based (PnP) cards
CONFIG_CS4232
  Say Y here if you have a card based on the Crystal CS4232 chip set,
  which use the Plug and Play protocol.

Support for Turtle Beach Wave Front (Maui, Tropez) synthesizers
CONFIG_MAUI
  Say Y here if you have a Turtle Beach Wave Front, Maui, or 
  Tropez sound card.

/dev/dsp and /dev/audio support
CONFIG_AUDIO
  Answering N disables /dev/dsp and /dev/audio, the A/D and D/A
  converter devices.  Answer N only if you know you will not need
  the option.  They are usually required.  Answer Y.

MIDI interface support
CONFIG_MIDI
  Answering N disables /dev/midixx devices and access to any MIDI
  ports using /dev/sequencer and /dev/music. This option also affects
  any MPU401 and/or General MIDI compatible devices.  Answer Y.

FM synthesizer (YM3812/OPL-3) support
CONFIG_YM3812
  Answer Y here, unless you know you will not need the option.

Sun Audio support
CONFIG_SUN_AUDIO
  This is support for the soundcards on Sun workstations. The code
  does not exist yet, so you might as well say N here.

SB32/AWE support
CONFIG_AWE32_SYNTH
  Say Y here if you have a SB32 or SB AWE soundcard. See
  linux/drivers/sound/lowlevel/README.awe for more info.

Additional low level drivers
CONFIG_LOWLEVEL_SOUND
  If you need additional low level sound drivers which are not part
  of USS/Lite (UNIX Sound System), say Y.  The only such driver at
  present is the ACI driver for the miroSOUND PCM12 and PCM20.

ACI mixer (miroPCM12)
CONFIG_ACI_MIXER
  Audio Command Interface (ACI) driver.  ACI is a protocol used to
  communicate with the microcontroller on some sound cards produced
  by miro, e.g. the miroSOUND PCM12 and PCM20.  The main function
  of the ACI is to control the mixer and to get a product
  identification.  This Voxware ACI driver currently only supports
  the ACI functions on the miroSOUND PCM12 card.  On the PCM20, ACI
  also controls the radio tuner on this card, however this is not
  yet supported in this software.

Gallant's Audio Excel DSP 16 support (SC-6000 and SC-6600)
CONFIG_AEDSP16
  Answer Y if you have a Gallant's Audio Excel DSP 16 card. This card
  can emulate an SBPro or a Microsoft Sound System card, so you should
  have said Y to either "SoundBlaster (SB, SBPro, SB16, clones)
  support" or "Microsoft Sound System support", above, and you need to
  answer the "MSS emulation" and "SBPro emulation" questions below
  accordingly. You should say Y to one and only one of these
  questions.  Read the drivers/sound/lowlevel/README.aedsp16 file and
  the head of drivers/sound/lowlevel/aedsp16.c to get more
  information about this driver and its configuration.  This driver
  supports Audio Excel DSP 16 but not the III nor Pnp versions of this
  card. Read drivers/sound/lowlevel/README.aedsp16 if you want to know
  something more on how to use the III version with this sound driver.

SC-6600 based audio cards (new Audio Excel DSP 16)
CONFIG_SC6600
  The SC6600 is the new version of DSP mounted on the Audio Excel DSP 16
  cards. Find in the manual the FCC ID of your audio card and answer Y if
  you have an SC6600 DSP.

Audio Excel DSP 16 (MSS emulation)
CONFIG_AEDSP16_MSS
  Answer Y if you want your audio card to emulate Microsoft Sound
  System.  You should then say Y to "Microsoft Sound System support"
  and say N to "Audio Excel DSP 16 (SBPro emulation)".

Audio Excel DSP 16 (SBPro emulation)
CONFIG_AEDSP16_SBPRO
  Answer Y if you want your audio card to emulate Sound Blaster Pro.
  You should then say Y to "SoundBlaster (SB, SBPro, SB16, clones)
  support" and N to "Audio Excel DSP 16 (MSS emulation)".

Kernel profiling support
CONFIG_PROFILE
  This is for kernel hackers who want to know how much time the kernel
  spends in the various procedures. The information is stored in
  /proc/profile (say Y to "/proc filesystem support"!) and in order to
  read it, you need the readprofile package from sunsite.unc.edu. Its
  manpage gives information regarding the format of profiling data. To
  become a kernel hacker, you can start with the Kernel Hacker's Guide
  at http://www.redhat.com:8080/HyperNews/get/khg.html. Mere mortals
  say N.
 
Profile shift count
CONFIG_PROFILE_SHIFT
  This is used to adjust the granularity with which the addresses of
  executed instructions get recorded in /proc/profile. But since you
  said Y to "Kernel profiling support", you must be a kernel hacker and
  hence you know what this is about :-)

Magic System Request Key support
CONFIG_MAGIC_SYSRQ
  This is for kernel hackers who want to have some control over the
  system even if the system crashes during kernel debugging (e.g., to
  flush the disks, reboot the system immediately or dump some status
  information). This is accomplished by pressing various keys while
  holding SysRq (Alt+PrintScreen). As you are expected to be a kernel
  hacker to use this, the simple rule about learning what the keys
  mean is "Use the source, Luke!" -- read drivers/char/sysrq.c.  
  Don't say Y unless you really know what this hack does.

ISDN subsystem
CONFIG_ISDN
  ISDN ("Integrated Services Digital Networks", called RNIS in France)
  is a special type of fully digital telephone service; it's mostly
  used to connect to your Internet service provider (with SLIP or
  PPP). The main advantage is that the speed is higher than ordinary
  modem/telephone connections, and that you can have voice
  conversations while downloading stuff. It only works if your
  computer is equipped with an ISDN card and both you and your service
  provider purchased an ISDN line from the phone company.  For
  details, read http://alumni.caltech.edu/~dank/isdn/ on the WWW. (To
  browse the WWW, you need to have access to a machine on the Internet
  that has a program like lynx or netscape.)  This driver allows you
  to use an ISDN-card for networking connections and as dialin/out
  device. The isdn-tty's have a built in AT-compatible modem
  emulator. Network devices support autodial, channel-bundling,
  callback and caller-authentication without having a daemon
  running. A reduced T.70 protocol is supported with tty's suitable
  for German BTX. On D-Channel, the protocols EDSS1 and 1TR6 are
  supported. See Documentation/isdn/README for more information.  If
  you want to compile the ISDN as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called isdn.o.  If unsure, say N.

Support synchronous PPP
CONFIG_ISDN_PPP
  Over digital connections such as ISDN, there is no need to
  synchronize sender and recipient's clocks with start and stop bits
  as is done over telephone lines. Instead, one can use "synchronous
  PPP". Saying Y here will include this protocol. This protocol is
  used by Cisco and Sun for example. So you want to say Y here if the
  other end of your ISDN connection supports it. You will need a
  special version of pppd (called ipppd) for using this feature. See
  Documentation/isdn/README.syncppp and Documentation/isdn/syncPPP.FAQ
  for more information.

Support generic MP (RFC 1717)
CONFIG_ISDN_MPP
  With synchronous PPP enabled, it is possible to increase throughput
  by bundling several ISDN-connections, using this protocol. See
  Documentation/isdn/README.syncppp for more information.

Use VJ-compression with synchronous PPP
CONFIG_ISDN_PPP_VJ
  This enables Van Jacobson header compression for synchronous PPP.

Support audio via ISDN
CONFIG_ISDN_AUDIO
  If you say Y here, the modem-emulator will support a subset of the
  EIA Class 8 Voice commands. Using a getty with voice-support
  (mgetty+sendfax by gert@greenie.muc.de with an extension, available
  with the ISDN utility package for example), you will be able to use
  your Linux box as an ISDN-answering machine. Of course, this must be
  supported by the lowlevel driver also. Currently, the HiSax driver
  is the only voice-supporting driver. See
  Documentation/isdn/README.audio for more information.

ICN 2B and 4B support
CONFIG_ISDN_DRV_ICN
  This enables support for two kinds of ISDN-cards made by a German
  company called ICN. 2B is the standard version for a single ISDN
  line with two B-channels, 4B supports two ISDN lines. For running
  this card, additional firmware is necessary, which has to be
  downloaded into the card using a utility which is distributed
  separately.  See Documentation/isdn/README and README.icn for more
  information. If you want to compile this as a module ( = code which
  can be inserted in and removed from the running kernel whenever you
  want), say M here and read Documentation/modules.txt. The module
  will be called icn.o.

HiSax SiemensChipSet driver support
CONFIG_ISDN_DRV_HISAX
  This is a driver supporting the Siemens chipset on various
  ISDN-cards (like AVM A1, Elsa ISDN cards, Teles S0-16.0, Teles
  S0-16.3, Teles S0-8, Teles/Creatix PnP, ITK micro ix1 and many
  compatibles). If you want to compile this as a module ( = code which
  can be inserted in and removed from the running kernel whenever you
  want), say M here and read Documentation/modules.txt. The module
  will be called hisax.o.  See Documentation/isdn/README.HiSax for
  further informations on using this driver.

HiSax Support for Teles 16.0/8.0
CONFIG_HISAX_16_0
  This enables HiSax support for the Teles ISDN-cards S0-16.0,
  S0-8 and many compatibles.
  See Documentation/isdn/README.HiSax on how to configure it 
  using the different cards, a different D-channel protocol, or
  non-standard irq/port/shmem settings.

HiSax Support for Teles 16.3 or PNP or PCMCIA
CONFIG_HISAX_16_3
  This enables HiSax support for the Teles ISDN-cards S0-16.3
  the Teles/Creatix PnP and the Teles PCMCIA.
  See Documentation/isdn/README.HiSax on how to configure it 
  using the different cards, a different D-channel protocol, or
  non-standard irq/port/shmem settings.

HiSax Support for AVM A1 (Fritz)
CONFIG_HISAX_AVM_A1
  This enables HiSax support for the AVM A1 (aka "Fritz").
  See Documentation/isdn/README.HiSax on how to configure it
  using the different cards, a different D-channel protocol, or
  non-standard irq/port/shmem settings.

HiSax Support for Elsa ISA cards
CONFIG_HISAX_ELSA_PCC
  This enables HiSax support for the Elsa Mircolink ISA cards and
  for the Elsa Quickstep series cards.
  See Documentation/isdn/README.HiSax on how to configure it 
  using the different cards, a different D-channel protocol, or
  non-standard irq/port/shmem settings.

HiSax Support for Elsa PCMCIA card
CONFIG_HISAX_ELSA_PCMCIA
  This enables HiSax support for the Elsa PCMCIA cards.
  See Documentation/isdn/README.HiSax on how to configure it 
  using the different cards, a different D-channel protocol, or
  non-standard irq/port/shmem settings.

HiSax Support for ITK ix1-micro Revision 2
CONFIG_HISAX_IX1MICROR2
  This enables HiSax support for the ITK ix1-micro Revision 2 card.
  See Documentation/isdn/README.HiSax on how to configure it 
  using the different cards, a different D-channel protocol, or
  non-standard irq/port/shmem settings.

HiSax Support for EURO/DSS1
CONFIG_HISAX_EURO
  You should choose the D-channel protocol your local
  telephone service provider uses here by saying Y or N.
  NOTE: This is mutually exclusive with HiSax Support for
  German 1TR6 if you have only one ISDN card installed.

HiSax Support for US/NI-1
CONFIG_HISAX_NI1
  You should choose the D-channel protocol your local
  telephone service provider uses here by saying Y or N.
  
HiSax Support for German 1TR6
CONFIG_HISAX_1TR6
  You should choose the D-channel protocol your local
  telephone service provider uses here by saying Y or N.
  NOTE: This is mutually exclusive with HiSax Support for
  EURO/DSS1 if you have only one ISDN card installed.

PCBIT-D support
CONFIG_ISDN_DRV_PCBIT
  This enables support for the PCBIT ISDN-cards. This card is
  manufactured in Portugal by Octal. For running this card, additional
  firmware is necessary, which has to be downloaded into the card
  using a utility which is distributed separately.  See
  Documentation/isdn/README and Documentation/isdn/README.pcbit for
  more information. If you want to compile this as a module ( = code
  which can be inserted in and removed from the running kernel
  whenever you want), say M here and read
  Documentation/modules.txt. The module will be called pcbit.o.

Spellcaster support (EXPERIMENTAL)
CONFIG_ISDN_DRV_SC
  This enables support for the Spellcaster BRI ISDN boards. This
  driver currently builds only in a modularized version ( = code which
  can be inserted in and removed from the running kernel whenever you
  want, details in Documentation/modules.txt); the module will be
  called sc.o.  See Documentation/isdn/README.sc and
  http://www.spellcast.com for more information.

AVM-B1 with CAPI2.0 support
CONFIG_ISDN_DRV_AVMB1
  This enables support for the AVM B1 ISDN networking cards. In
  addition, a CAPI (Common ISDN Application Programming Interface, a
  standard making it easy for programs to access ISDN hardware, see
  http://www.capi.org/) interface for this card is provided. In order
  to use this card, additional firmware is necessary, which has to be
  downloaded into the card using a utility which is distributed
  separately. Please read the file Documentation/isdn/README.avmb1.
  This code is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you
  want). The module will be called avmb1.o. If you want to compile it
  as a module, say M here and read Documentation/modules.txt.

Verbose reason code reporting (kernel size +=7K)
CONFIG_ISDN_DRV_AVMB1_VERBOSE_REASON
  If you say Y here, the AVM B1 driver will give verbose reasons for
  disconnecting. This will increase the size of the kernel by 7K. If
  unsure, say Y.

Support for AP1000 multicomputer
CONFIG_AP1000
  This enables support for a sparc based parallel multi-computer
  called AP1000+. For details on our efforts to port Linux to this
  machine see http://cap.anu.edu.au/cap/projects/linux or mail to
  hackers@cafe.anu.edu.au

Sparc ESP SCSI support
CONFIG_SCSI_SUNESP
  This is the driver for the Sun ESP SCSI host adapter. The ESP
  chipset is present in most SPARC-based computers.

Sparc /dev/openprom compatibility driver
CONFIG_SUN_OPENPROMIO
  This driver provides user programs with an interface to the Sparc
  PROM device tree. The driver implements a SunOS-compatible
  interface and a NetBSD-compatible interface. If you want to
  compile this as a module ( = code which can be inserted in and
  removed from the running kernel whenever you want), say M and read
  Documentation/modules.txt. If unsure, say Y.

Support for Cyrix processors
CONFIG_CYRIX
  This enables recognition of Cyrix processors. Without it
  /proc/cpuinfo will list your processor as an unknown model
  of Cyrix. With it it will list the correct details. It should
  be safe to say Y here regardless of what processor you are
  actually using. If this option is not enabled none of the
  Cyrix feature options are available.

Enable suspend on halt power saving feature
CONFIG_CYRIX_SUSP_HLT
  Suspend on halt causes the processor to enter a low power state
  when the "hlt" instruction is executed. This is disabled at
  power up and many BIOSs leave it that way. You probably want it
  enabled since it dramatically reduces the operating temperature
  of the processor. In a few rare cases there may be problems
  with some bus master DMA cards if this is enabled.

No I/O recovery delays
CONFIG_CYRIX_FAST_IO
  Historically programmers used "jmp $+2" instructions to create
  delays between I/O instructions. The branch prediction of 5x86
  and higher processors renders this ineffective and so a selectable
  delay is implemented for I/O instructions in the processor. Linux
  uses dummy I/O instructions where necessary rather than jumps
  and so the extra processor imposed delay should not be necessary.
  Enabling this option removes this delay.

5x86 performance features
CONFIG_CYRIX_5X86
  The Cyrix 5x86 has several performance feature which are enabled
  using on-chip registers. This code attempts to ensure that the
  useful features are set to suit Linux. Read Documentation/CPU/Cyrix
  before enabling this.
    WARNING: If this is enabled you may find that the only way to
  reboot is to power cycle the machine. Even a hard reboot seems
  to fail on some systems.

6x86 performance features
CONFIG_CYRIX_6X86
  The Cyrix 6x86 has several performance feature which are enabled
  using on-chip registers. Most are normally enabled by the BIOS
  however this code ensures that all the useful ones are set to
  suit Linux. Read Documentation/CPU/Cyrix before enabling this.

Avoid unnecessary locked cycles
CONFIG_CYRIX_6X86_NOLOCK
  Enabling this option causes the 6x86 not to use locked bus cycles
  except for page table access and interrupt acknowledge cycles.
  This allows the data used by descriptor tables, xchg instructions
  and instructions preceeded by the LOCK prefix to be cached leading
  to improved performance. Enabling this option has no effect if
  an SMP kernel is being built - SMP requires locked cycles to
  guarantee processor synchronization.

Allocate L1 cache lines on write misses
CONFIG_CYRIX_6X86_WTALLOC
  If this is enabled L1 cache write misses will cause a cache line
  to be allocated. This may result in increased performance. On the
  other hand it may cause excessive trashing of the L1 cache when
  copying or zeroing pages. In general you _probably_ win...

Branch Target Buffer features
CONFIG_CYRIX_6X86_BTB
  The Cyrix 6x86 has branch prediction logic which is normally
  only set to handle short branches (as in small loops and ifs).
  This code attempts on configure the branch prediction logic
  appropriately. Read Documentation/CPU/Cyrix before enabling this.

Variable sized paging mechanism (VSPM)
CONFIG_CYRIX_6X86_VSPM
  Variable sized paging mechanism (VSPM) is a feature of the Cyrix
  6x86 family of processors that allows large regions of memory
  to be mapped in one go, significantly reducing the amount of work
  the MMU has to do compared with traditional paging. However VSPM
  is known to be buggy in many 6x86 chip revisions. Please read
  Documentation/CPU/Cyrix before enabling this.
    WARNING: If this is enabled you may find that the only way to
  reboot is to power cycle the machine. Even a hard reboot seems
  to fail on some systems.

Allocate L1 cache lines on write misses
CONFIG_AMD_K5_WTALLOC
  If this is enabled L1 cache write misses will cause a cache line
  to be allocated. This may result in increased performance. On the
  other hand it may cause excessive trashing of the L1 cache when
  copying or zeroing pages. In general you _probably_ win...

Allocate L1 cache lines on write misses
CONFIG_AMD_K6_WTALLOC
  If this is enabled L1 cache write misses will cause a cache line
  to be allocated. This may result in increased performance. On the
  other hand it may cause excessive trashing of the L1 cache when
  copying or zeroing pages. In general you _probably_ win...

Use write cacheability detection
CONFIG_AMD_K6_WTALLOC_WCDE
  Write cacheability detection requires the system logic to assert
  the cache enable bus signal during a write cycle. Some chipsets
  do this and some do not. Some, such as Triton, do but not at
  the appropriate point during the write cycle. Cacheability
  detection is not normally useful unless you have memory mapped
  devices which exist outside the 640k-1M range but within your
  actual memory. (There is another option that disables write
  allocate for the 15M-16M range commonly used by older VLB
  video cards). You probably do not want to enable this.

No write allocate between 15MB-16MB
CONFIG_AMD_K6_WTALLOC_WAE15M
  There were a small number of cards, mainly VESA Local Bus
  video cards, that were memory mapped to the 15M-16M address
  range. If you have such a card you do not want write allocate
  to delay or reorder writes to this space so you must enable
  this option. Other memory mapped cards are either outside the
  systems memory space or are in the 640k-1M range which is
  not subject to write allocate so this option is not normally
  required.

# m68k-specific kernel options
# Documented by Chris Lawrence <quango@themall.net> et al.

Amiga support
CONFIG_AMIGA
  This option enables support for the Amiga series of computers.  If
  you plan to use this kernel on an Amiga, say Y here and browse the
  material available in Documentation/m68k; otherwise say N.

Atari support
CONFIG_ATARI
  This option enables support for the 68000-based Atari series of
  computers (including the TT, Falcon and Medusa).  If you plan to use
  this kernel on an Atari, say Y here and browse the material
  available in Documentation/m68k; otherwise say N.

Macintosh support
CONFIG_MAC
  This option would enable support for the Apple Macintosh if there was
  any for it.  Say N unless you've coded all the necessary support. ;)

# CONFIG_APOLLO, etc. coming soon (?)

68020 support
CONFIG_M68020
  If you anticipate running this kernel on a computer with a MC68020
  processor, say Y.  Otherwise, say N.  Note that the 68020 requires a
  68851 MMU (= memory management unit) to run Linux/m68k.

68030 support
CONFIG_M68030
  If you anticipate running this kernel on a computer with a MC68030
  processor, say Y.  Otherwise, say N.  Note that a MC68EC030 will not
  work, as it does not include an MMU (= memory management unit).

68040 support
CONFIG_M68040
  If you anticipate running this kernel on a computer with a MC68LC040
  or MC68040 processor, say Y.  Otherwise, say N.  Note that an
  MC68EC040 will not work, as it does not include an MMU (= memory
  management unit).

Use -m68040 flag for 68040 specific optimizations
CONFIG_OPTIMIZE_040
  If you will only be running this kernel on a 68040-series processor,
  this will make the kernel run somewhat faster.  However, it will no
  longer run on a 68020 or 68030, no matter whether you included 68020
  and 68030 support or not.  Say N unless the only processor you are
  compiling support for is the 68040 (or 68LC040).

68060 support
CONFIG_M68060
  If you anticipate running this kernel on a computer with a MC68060
  processor, say Y.  Otherwise, say N.

Use -m68060 flag for 68060 specific optimizations
CONFIG_OPTIMIZE_060
  If you will only be running this kernel on a 68060-series processor,
  this will make the kernel run somewhat faster.  However, it will no
  longer run on a 68020, 68030 or 68040, no matter whether you
  included support for those processors or not.  Say N unless the only
  processor you are compiling support for is the 68060.

Advanced processor options
CONFIG_ADVANCED_CPU
  This gives you access to some advanced options for the CPU.  The
  defaults should be fine for most users, but these options may make
  it possible for you to improve performance somewhat if you know what
  you are doing.  Most users should say N to this question.

Use read-modify-write instructions
CONFIG_RMW_INSNS
  This allows to use certain instructions that work with indivisible
  read-modify-write bus cycles. While this is faster than the
  workaround of disabling interrupts, it can conflict with DMA (=
  direct memory access) on many Amiga systems, and it is also said to
  destabilize other machines. It is very likely that this will cause
  serious problems on any Amiga or Atari Medusa if set. The only
  configuration where it should work are 68030-based Ataris, where it
  apparently improves performance. But you've been warned! Unless you
  really know what you are doing, say N. Try Y only if you're
  quite adventurous.

Amiga AutoConfig Identification
CONFIG_ZORRO
  This enables support for automatic identification of Amiga expansion
  cards that obey the AutoConfig(tm) specification.
  Say Y if you want your expansion cards to be identified on bootup;
  it will enlarge your kernel by about 10KB. The identification
  information is also available through /proc/zorro (say Y to
  "/proc filesystem support"!).
  Note that even if you say N here, you can still use your expansion
  cards. If in doubt, say Y.

Amiga OCS chipset support
CONFIG_AMIFB_OCS
  This enables support for the original Agnus and Denise video chips,
  found in the Amiga 1000 and most A500's and A2000's.  If you intend
  to run Linux on any of these systems, say Y; otherwise say N.

Amiga ECS chipset support
CONFIG_AMIFB_ECS
  This enables support for the Enhanced Chip Set, found in later
  A500's, later A2000's, the A600, the A3000, the A3000T and CDTV.  If
  you intend to run Linux on any of these systems, say Y; otherwise
  say N.

Amiga AGA chipset support
CONFIG_AMIFB_AGA
  This enables support for the Advanced Graphics Architecture (also
  known as the AGA or AA) Chip Set, found in the A1200, A4000, A4000T
  and CD32.  If you intend to run Linux on any of these systems, say Y;
  otherwise say N.

Amiga Cybervision support
CONFIG_FB_CYBER
  This enables support for the Cybervision 64 graphics card from Phase5.
  Please note that its use is not all that intuitive (i.e. if you have
  any questions, be sure to ask!).  Say N unless you have a Cybervision
  64 or plan to get one before you next recompile the kernel.
  Please note that this driver DOES NOT support the Cybervision 64 3D
  card at present, as they use incompatible video chips.

Amiga GSP (TMS340x0) support
CONFIG_AMIGA_GSP
  Include support for Amiga graphics cards that use the Texas
  Instruments TMS340x0 GSP (= graphics signal processor) chips.  Say Y
  if you want to use a DMI Resolver or Commodore A2410 (Lowell)
  graphics card on an Amiga; otherwise, say N.

DMI Resolver support
CONFIG_GSP_RESOLVER
  Include support in the kernel for the DMI Resolver graphics card.  If
  you have one, say Y; otherwise, say N.

A2410 support
CONFIG_GSP_A2410
  Include support in the kernel for the Commodore/University of Lowell
  A2410 graphics card.  If you have one, say Y; otherwise, say N.

Amiga Zorro II ramdisk support
CONFIG_AMIGA_Z2RAM
  This enables support for using Chip RAM and Zorro II RAM as a
  ramdisk or as a swap partition.  Say Y if you want to include this
  driver in the kernel.  This driver is also available as a module ( =
  code which can be inserted in and removed from the running kernel
  whenever you want). The module is called z2ram.o. If you want to
  compile it as a module, say M here and read
  Documentation/modules.txt.

Atari ACSI support
CONFIG_ATARI_ACSI
  This enables support for the Atari ACSI interface. The driver
  supports hard disks and CD-ROMs, which have 512-byte sectors, or can
  be switched to that mode. Due to the ACSI command format, only disks
  up to 1 GB are supported. Special support for certain ACSI to SCSI
  adapters, which could relax that, isn't included yet. The ACSI
  driver is also the basis for certain other drivers for devices
  attached to the ACSI bus: Atari SLM laser printer, BioNet-100
  Ethernet, and PAMsNet Ethernet. If you want to use one of these
  devices, you need ACSI support, too. This driver is
  also available as a module ( = code which can be inserted in and
  removed from the running kernel whenever you want). The module will
  be called acsi.o.

Probe all LUNs on each ACSI device
CONFIG_ACSI_MULTI_LUN
  If you have a ACSI device that supports more than one LUN (Logical
  Unit Number), e.g. a CD jukebox, you should say Y here so that all
  will be found by the ACSI driver. An ACSI device with multiple LUNs
  acts logically like multiple ACSI devices. The vast majority of ACSI
  devices have only one LUN, and so most people can say N here and
  should in fact do so, because it is safer.

Atari SLM laser printer support
CONFIG_ATARI_SLM
  If you have an Atari SLM laser printer, say Y to include support for
  it in the kernel. Otherwise, say N. This driver is also available as
  a module ( = code which can be inserted in and removed from the
  running kernel whenever you want). The module will be called
  acsi_slm.o.  Be warned: the driver needs much ST-RAM and can cause
  problems due to that fact!

A3000 WD33C93A support
CONFIG_A3000_SCSI
  If you have an Amiga 3000 and have SCSI devices connected to the
  built-in SCSI controller, say Y.  Otherwise, say N.  This driver is
  also available as a module ( = code which can be inserted in and
  removed from the running kernel whenever you want). The module is
  called wd33c93.o. If you want to compile it as a module, say M here
  and read Documentation/modules.txt.

A2091 WD33C93A support
CONFIG_A2091_SCSI
  If you have a Commodore A2091 SCSI controller, say Y.  Otherwise,
  say N.  This driver is also available as a module ( = code which can
  be inserted in and removed from the running kernel whenever you
  want). The module is called wd33c93.o. If you want to compile it as
  a module, say M here and read Documentation/modules.txt.

GVP Series II WD33C93A support
CONFIG_GVP11_SCSI
  If you have a Great Valley Products Series II SCSI controller, say
  Y.  Also say Y if you have a later model of GVP SCSI controller
  (such as the GVP A4008 or a Combo board).  Otherwise, say N.
  This driver does NOT work for the T-Rex series of accelerators from
  TekMagic and GVP-M.
  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you
  want). The module will be called gvp11.o. If you want to compile it
  as a module, say M here and read Documentation/modules.txt.

Cyberstorm SCSI support
CONFIG_CYBERSTORM_SCSI
  If you have an Amiga with an original (MkI) Phase5 Cyberstorm
  accelerator board and the optional Cyberstorm SCSI controller, say
  Y.  Otherwise, say N.

Cyberstorm II SCSI support
CONFIG_CYBERSTORMII_SCSI
  If you have an Amiga with a Phase5 Cyberstorm MkII accelerator board
  and the optional Cyberstorm SCSI controller, say Y.  Otherwise, say N.

Blizzard 2060 SCSI support
CONFIG_BLZ2060_SCSI
  If you have an Amiga with a Phase5 Blizzard 2060 accelerator board
  and want to use the onboard SCSI controller, say Y.  Otherwise, say
  N.

Blizzard 1230IV/1260 SCSI support
CONFIG_BLZ1230_SCSI
  If you have an Amiga 1200 with a Phase5 Blizzard 1230IV or Blizzard
  1260 accelerator, and the optional SCSI module, say Y.  Otherwise,
  say N.

Fastlane SCSI support
CONFIG_FASTLANE_SCSI
  If you have the Phase5 Fastlane Z3 SCSI controller, or plan to use one
  in the near future, say Y to this question.  Otherwise, say N.

Atari native SCSI support
CONFIG_ATARI_SCSI
  If you have an Atari with built-in NCR5380 SCSI controller (TT,
  Falcon, ...) say Y to get it supported. Of course also, if you have
  an compatible SCSI controller (e.g. for Medusa). This driver is also
  available as a module ( = code which can be inserted in and removed
  from the running kernel whenever you want). The module is called
  atari_scsi.o. If you want to compile it as a module, say M here and
  read Documentation/modules.txt.  This driver supports both styles of
  NCR integration into the system: the TT style (separate DMA), and
  the Falcon style (via ST-DMA, replacing ACSI). It does NOT support
  other schemes, like in the Hades (without DMA).

Long delays for Toshiba CD-ROMs
CONFIG_ATARI_SCSI_TOSHIBA_DELAY
  This option increases the delay after a SCSI arbitration to
  accommodate some flaky Toshiba CD-ROM drives. Say Y if you intend to
  use a Toshiba CD-ROM drive; otherwise, the option is not needed and
  would impact performance a bit, so say N.

Ariadne support
CONFIG_ARIADNE
  If you have a VillageTronics Ariadne Ethernet adapter, say Y.
  Otherwise, say N.
  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you
  want). The module is called ariadne.o. If you want to compile it as
  a module, say M here and read Documentation/modules.txt.

A2065 support
CONFIG_A2065
  If you have a Commodore A2065 Ethernet adapter, say Y.  Otherwise,
  say N.
  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you
  want). The module is called a2065.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

Hydra support
CONFIG_HYDRA
  If you have a Hydra Ethernet adapter, say Y.  Otherwise, say N.
  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you
  want). The module is called hydra.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

Atari Lance support
CONFIG_ATARILANCE
  Say Y to include support for several Atari Ethernet adapters based
  on the AMD Lance chipset: RieblCard (with or without battery), or
  PAMCard VME (also the version by Rhotron, with different addresses).

BioNet-100 support
CONFIG_ATARI_BIONET
  Say Y to include support for BioData's BioNet-100 Ethernet adapter
  for the ACSI port. The driver works (has to work...) with a polled
  I/O scheme, so it's rather slow :-(

PAMsNet support
CONFIG_ATARI_PAMSNET
  Say Y to include support for the PAMsNet Ethernet adapter for the
  ACSI port ("ACSI node"). The driver works (has to work...) with a
  polled I/O scheme, so it's rather slow :-(

Multiface Card III parallel support
CONFIG_MULTIFACE_III_LP
  If you have a Multiface III card for your Amiga, and want to use its
  parallel port in Linux, say Y.  Otherwise, say N.  This driver is
  also available as a module ( = code which can be inserted in and
  removed from the running kernel whenever you want). The module is
  called lp_m68k.o. If you want to compile it as a module, say M here
  and read Documentation/modules.txt.

Amiga mouse support
CONFIG_AMIGAMOUSE
  If you want to be able to use an Amiga mouse in Linux, say Y.  This
  driver is also available as a module ( = code which can be inserted
  in and removed from the running kernel whenever you want). The
  module is called amigamouse.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

Amiga Copper Console
CONFIG_COPCON
  This configures the console to use the Amiga's graphics coprocessor
  for scrolling, instead of using the CPU.  This option markedly
  improves response times in the high color modes (5 bitplanes and
  up).  If you would like to use this, say Y; otherwise, say N.

Atari mouse support
CONFIG_ATARIMOUSE
  If you want to be able to use an Atari mouse in Linux, say Y.  This
  driver is also available as a module ( = code which can be inserted
  in and removed from the running kernel whenever you want). The
  module is called atarimouse.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

Atari MFP serial support
CONFIG_ATARI_MFPSER
  If you like to use the MFP serial ports ("Modem1", "Serial1") under
  Linux, say Y. The driver equally supports all kinds of MFP serial
  ports and automatically detects whether Serial1 is available. This
  driver is also available as a module ( = code which can be inserted
  in and removed from the running kernel whenever you want).  If you
  want to compile it as a module, say M here and read
  Documentation/modules.txt.
  Note for Falcon users: You also have an MFP port, it's just not
  wired to the outside... But you could use the port under Linux.

Atari SCC serial support
CONFIG_ATARI_SCC
  If you have serial ports based on a Zilog SCC chip (Modem2, Serial2,
  LAN) and like to use them under Linux, say Y. All built-in SCC's are
  supported (TT, MegaSTE, Falcon), and also the ST-ESCC. If you have
  two connectors for channel A (Serial2 and LAN), they are visible as
  two separate devices. This driver is also available as a module ( =
  code which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt.

Radio support
CONFIG_MISC_RADIO
  If you have a radio card (you will probably know if you do!), then
  you will want to say "y" here and make a character device file 
  (usually /dev/radio) with major number 10 and minor 152 using mknod
  ("man mknod").  And then, don't forget to pick up some useful tools
  to use said device (you _might_ find something at ftp.lmh.ox.ac.uk:
  /users/weejock/linux/radio/, but I haven't written anything too
  useful yet...)

AIMSlab RadioTrack card
CONFIG_RADIO_RTRACK
  Choose "y" here if you have one of these, and then fill in the port
  address below.

RadioTrack i/o port
CONFIG_RADIO_RTRACK_PORT
  Enter either 0x30f or 0x20f here.  The card default is 0x30f, if you
  haven't changed the jumper setting on the card.

Atari SCC serial DMA support
CONFIG_ATARI_SCC_DMA
  This enables DMA support for receiving data on channel A of the SCC. If
  you have a TT you may say Y here and read drivers/char/atari_SCC.README.
  All other users should say N here, because only the TT has SCC-DMA, even
  if your machine keeps claiming so at boot time.

Atari MIDI serial support
CONFIG_ATARI_MIDI
  If you want to use your Atari's MIDI port in Linux, say Y.
  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you
  want). If you want to compile it as a module, say M here and read
  Documentation/modules.txt.

Atari DSP56k Digital Signal Processor support
CONFIG_ATARI_DSP56K
  If you want to be able to use the DSP56001 in Falcons, say Y.
  This driver is still experimental, and if you don't know what it is,
  or if you don't have this processor, just say N.
  This driver is also available as a module ( = code which can be inserted
  in and removed from the running kernel whenever you want). If you
  want to compile it as a module, say M here and read
  Documentation/modules.txt.

Amiga builtin serial support
CONFIG_AMIGA_BUILTIN_SERIAL
  If you want to use your Amiga's built-in serial port in Linux, say
  Y.
  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you
  want). If you want to compile it as a module, say M here and read
  Documentation/modules.txt.

GVP IO-Extender support
CONFIG_GVPIOEXT
  If you want to use a GVP IO-Extender serial card in Linux, say Y.
  Otherwise, say N.

Multiface Card III serial support
CONFIG_MULTIFACE_III_TTY
  If you want to use a Multiface III card's serial port in Linux, say
  Y.
  This driver is also available as a module ( = code which can be inserted
  in and removed from the running kernel whenever you want). If you
  want to compile it as a module, say M here and read
  Documentation/modules.txt.

Amiga or Atari DMA sound support
CONFIG_DMASOUND
  If you want to use the internal audio of your Atari or Amiga in
  Linux, answer Y to this question.  This will provide a Sun-like
  /dev/audio, compatible with the Linux/i386 sound system.  Otherwise,
  say N.
  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you
  want). If you want to compile it as a module, say M here and read
  Documentation/modules.txt.

MSDOS partition support
CONFIG_MSDOS_PARTITION
  This option enables support for using hard disks that were
  partitioned on an MS-DOS system.  This may be useful if you are
  sharing a hard disk between i386 and m68k Linux boxes, for example.
  Say Y if you need this feature; users who are only using their
  system-native partitioning scheme can say N here.

Build PowerMac Kernel (not PReP)
CONFIG_PMAC
  There are currently two different kinds of PowerPC-based machines
  available: Apple Power Macintoshes and clones (such as the Motorola
  Starmax series, and PReP (PowerPC Reference Platform) machines such
  as the Motorola PowerStack range.  Currently, a single kernel binary
  only supports one type or the other.  Say Y here to compile a kernel
  which will run on Power Macintoshes and clones.

Build PReP Kernel (not PowerMac)
CONFIG_PREP
  Say Y here to compile a kernel which will run on PReP (PowerPC
  Reference Platform) machines such as the Motorola PowerStack range.
  For Power Macintosh clones, including the Motorola Starmaxes, you
  should say N (and Y to the previous question).

Processor type
CONFIG_MCOMMON
  If you are compiling a kernel to run on a specific machine, you can
  indicate which type of PowerPC processor it has.  Currently this
  option does very little.

Support for Open Firmware device tree in /proc
CONFIG_PROC_DEVICETREE
  This option adds a device-tree directory under /proc which contains
  an image of the device tree that the kernel copies from Open
  Firmware.  If unsure, say Y here.

Support for ATI Mach64 display cards
CONFIG_ATY_VIDEO
  Several of the newer Power Macintoshes and clones have a video
  display interface based on the ATI Mach64 chipset.  Say N here if
  you are sure you don't need this functionality, otherwise Y.

Support for IMS Twin Turbo display card
CONFIG_IMSTT_VIDEO
  Some Power Macintosh clones have an IMS Twin Turbo video display
  interface.  Say Y to include support for this.

MESH (Power Mac internal SCSI) support
CONFIG_SCSI_MESH
  Many Power Macintoshes and clones have a MESH (Macintosh Enhanced
  SCSI Hardware) SCSI bus adaptor (the 7200 doesn't, but all of the
  other Power Macintoshes do).  Say Y to include support for this SCSI
  adaptor.

Maximum synchronous transfer rate
CONFIG_SCSI_MESH_SYNC_RATE
  On Power Macintoshes (and clones) where the MESH SCSI bus adaptor
  drives a bus which is entirely internal to the machine (such as the
  7500, 7600, 8500, etc.), the MESH is capable of synchronous
  operation at up to 10MB/s.  On machines where the SCSI bus
  controlled by the MESH can have external devices connected, it is
  usually rated at 5MB/s.  5 is a safe value here unless you know the
  MESH SCSI bus is internal only; in that case you can say 10.  Say 0
  to disable synchronous operation.

53C94 (Power Mac external SCSI) support
CONFIG_SCSI_MAC53C94
  On Power Macintoshes (and clones) with two SCSI buses, the external
  SCSI bus is usually controlled by a 53C94 SCSI bus adaptor.  Older
  machines which only have one SCSI bus, such as the 7200, also use
  the 53C94.  Say Y to include support for the 53C94.

MACE (Power Mac ethernet) support
CONFIG_MACE
  Power Macintoshes and clones with ethernet built-in on the
  motherboard will usually use a MACE (Medium Access Control for
  Ethernet) interface.  Say Y to include support for the MACE chip.

Video For Linux
CONFIG_VIDEO_DEV
  Support for audio/video capture and overlay devices. The exact capabilities
  of each device vary. User tools for this are available from
  ftp://ftp.uk.linux.org/pub/linux/video4linux

BT848 Video For Linux
CONFIG_VIDEO_BT848
  Support for BT848 based frame grabber/overlay boards. This includes the 
  Miro, Hauppauge and STB boards.

# need an empty line after last entry, for sed script in Configure.

#
# This is used by ispell.el:
#
# LocalWords:  CONFIG coprocessor DX Pentium SX lilo loadlin HOWTO ftp sunsite
# LocalWords:  unc edu docs emu README kB BLK DEV FD Thinkpad fd MFM RLL IDE gz
# LocalWords:  cdrom harddisk diskless netboot nfs xzvf ATAPI MB harddrives ide
# LocalWords:  HD harddisks CDROMs IDECD NEC MITSUMI filesystem XT XD PCI bios
# LocalWords:  ISA EISA Microchannel VESA BIOSes IPC SYSVIPC ipc Ctrl dmesg hlt
# LocalWords:  BINFMT Linkable http ac uk jo html GCC Sparc AVANTI CABRIOLET EB
# LocalWords:  netscape gcc LD CC toplevel MODVERSIONS insmod rmmod modprobe IP
# LocalWords:  genksyms INET loopback gatewaying ethernet internet PPP ARP Arp
# LocalWords:  howto multicasting MULTICAST MBONE firewalling ipfw ACCT resp ip
# LocalWords:  proc acct IPIP encapsulator decapsulator klogd PCTCP RARP EXT PS
# LocalWords:  telneting subnetted NAGLE rlogin NOSR ttyS TGA techinfo mbone nl
# LocalWords:  Mb SKB IPX Novell Netware dosemu Appletalk DDP ATALK tapedrive
# LocalWords:  SD CHR scsi thingy SG CD LUNs LUN jukebox Adaptec BusLogic EATA
# LocalWords:  buslogic DMA DPT ATT eata dma PIO UltraStor fdomain umsdos ext
# LocalWords:  QLOGIC qlogic TMC seagate Trantor ultrastor FASST wd NETDEVICES
# LocalWords:  unix BBS linux nullmodem CSLIP PLIP Kirch's LDP CSlip SL SCC IRQ
# LocalWords:  Turbo Laplink plip NCSA port's ReQuest IRQs EQL SMC AMD PCnet NE
# LocalWords:  COM ELPLUS Com EtherLinkIII VLB Arcnet arcnet Cabletron DEPCA DE
# LocalWords:  depca EtherWorks EWRK ewrk SEEQ EtherExpressPro EEXPRESS NI xxx
# LocalWords:  EtherExpress WaveLAN wavelan PCLAN HPLAN VG SK Ansel Xen de ZNET
# LocalWords:  PCMCIA cb stanford pcmcia LAN TEC RealTek ATP atp DLINK NetTools
# LocalWords:  TR Sony CDU caddyless cdu Mitsumi MCD cd mcd XA MultiSession CDA
# LocalWords:  Matsushita Panasonic SBPCD Soundblaster Longshine sbpcd Aztech
# LocalWords:  Okano Wearnes AZTCD CDD SE aztcd sonycd Goldstar GSCD Philips fs
# LocalWords:  LMS OPTCD Sanyo SJCD minix faqs xiafs XIA msdos harddrive mtools
# LocalWords:  std softlinks umssync NetworkFileSharing nfsd mountd CDs HPFS TI
# LocalWords:  hpfs SYSV SCO intel iBCS Wyse WordPerfect tsx mit unixes sysv NR
# LocalWords:  SMB WfW Cyclades async mux Logitech busmouse MouseSystem aka AST
# LocalWords:  PSMOUSE Compaq trackballs Travelmate Inport ATIXL ATI busmice ld
# LocalWords:  gpm config QIC DYNCONF FTAPE Stor Ftape ftape pcsndrv manpage NT
# LocalWords:  readprofile diskdrives org com masq EtherTalk tcp netrom sunacm
# LocalWords:  misc AIC aic pio nullmodems scc Portmaster eql GIS PhotoCDs MCDX
# LocalWords:  mcdx gscd optcd sjcd ISP soundcard hdparm Workgroups Lan samba
# LocalWords:  filesystems smbfs ATA ppp PCTech RZ www powerquest txt CMD ESDI
# LocalWords:  chipset FB multicast MROUTE appletalk ifconfig IBMTR multiport
# LocalWords:  Multisession STALDRV EasyIO EC EasyConnection ISTALLION ONboard
# LocalWords:  Brumby pci TNC cis ohio faq usenet NETLINK dev hydra ca Tyne mem
# LocalWords:  carleton Deskstation DECstation SUNFD JENSEN Noname XXXM SLiRP
# LocalWords:  pppd Zilog ZS soundcards SRM bootloader ez mainmenu rarp ipfwadm
# LocalWords:  RTNETLINK mknod xos MTU lwared Macs mac netatalk macs cs Wolff
# LocalWords:  dartmouth flowerpt MultiMaster FlashPoint tudelft etherexpress
# LocalWords:  ICL EtherTeam ETH IDESCSI TXC SmartRAID SmartCache httpd sjc dlp
# LocalWords:  thesphere TwoServers BOOTP DHCP ncpfs BPQETHER BPQ chipsets MG
# LocalWords:  bsd comp Sparcstation le SunOS ie Gracilis PackeTwin PT pt LU FX
# LocalWords:  FX TEAC SoundBlaster CR CreativeLabs LCS mS ramdisk IDETAPE cmd
# LocalWords:  Vertos Genoa Funai hsfs NCP NetWare tgz APM apm ioctls UltraLite
# LocalWords:  TravelMate CDT LCD backlight VC RPC Mips DECStation AXP barlow
# LocalWords:  PMAX MILO Alphas Multia Tseng linuxelf endian mipsel mips drv HT
# LocalWords:  KERNELD kerneld callouts AdvanSys advansys diskquotas Admin WDT
# LocalWords:  wdt hdb hdc bugfix SiS vlb Acculogic CSA DTC dtc Holtek ht QDI
# LocalWords:  QD qd UMC umc ALI ali lena fnet fr homepage azstarnet axplinux
# LocalWords:  Avanti XL AlphaStations Jensen DECpc AXPpci UDB Cabriolet MCA RC
# LocalWords:  AlphaPC mca AOUT OUTput PPro sipx gwdg lo nwe FourPort Boca unm
# LocalWords:  Keepalive linefill RELCOM keepalive analogue CDR conf CDI INIT
# LocalWords:  OPTi isp irq noisp VFAT vfat NTFS losetup dmsdosfs dosfs ISDN MP
# LocalWords:  NOWAYOUT behaviour dialin isdn callback BTX Teles ICN EDSS Cisco
# LocalWords:  ipppd syncppp RFC MPP VJ downloaded icn NICCY Creatix shmem ufr
# LocalWords:  ibp md ARCnet ether encap NDIS arcether ODI Amigas AmiTCP NetBSD
# LocalWords:  initrd tue util DES funet des OnNet BIOSP smc Travan Iomega CMS
# LocalWords:  FC DC dc PPA IOMEGA's ppa RNFS FMV Fujitsu ARPD arpd loran layes
# LocalWords:  FRAD indiana framerelay DLCI DCLIs Sangoma SDLA mrouted sync sec
# LocalWords:  Starmode Metricom MosquitoNet mosquitonet kbit nfsroot Digiboard
# LocalWords:  DIGI Xe Xeve digiboard UMISC touchscreens mtu ethernets HBAs MEX
# LocalWords:  Shifflett netcom js jshiffle WIC DECchip ELCP EtherPower dst RTC
# LocalWords:  rtc SMP lp Digi Intl RightSwitch DGRS dgrs AFFS Amiga UFS SDL AP
# LocalWords:  Solaris RISCom riscom syncPPP PCBIT pcbit sparc anu au artoo ufs
# LocalWords:  hitchcock Crynwr cnam pktdrvr NCSA's CyDROM CyCDROM FreeBSD NeXT
# LocalWords:  NeXTstep disklabel disklabels SMD FFS tm AmigaOS diskfiles Un IQ
# LocalWords:  Bernd informatik rwth aachen uae affs multihosting bytecode java
# LocalWords:  applets applet JDK ncsa cabi SNI Alphatronix readme LANs scarab
# LocalWords:  winsock RNIS caltech OSPF honour Honouring Mbit Localtalk DEFRAG
# LocalWords:  localtalk download Packetwin Baycom baycom interwork ascii JNT
# LocalWords:  Camtec proxying indyramp defragment defragmented UDP FAS FASXX
# LocalWords:  FastSCSI SIO FDC qlogicfas QLogic qlogicisp setbaycom ife ee LJ
# LocalWords:  ethz ch Travelmates ProAudioSpectrum ProAudio SoundMan SB SBPro
# LocalWords:  Thunderboard SM OPL FM ADLIB TSR Gravis MPU PSS ADI SW DSP codec
# LocalWords:  ADSP ESC ASIC daughtercard GUSMAX MSS NX AdLib Excell Ensoniq YM
# LocalWords:  SoundScape Spea MediaTriX AudioTriX WSS OTI ThunderBoard VoxWare
# LocalWords:  Soundscape SSCAPE TRIX MediaTrix PnP Maui dsp midixx EIA getty
# LocalWords:  mgetty sendfax gert greenie muc lowlevel Lasermate LanManager io
# LocalWords:  OOPSes trackball binghamton mobileip ncr IOMAPPED settags ns ser
# LocalWords:  setsync NEGO MPARITY autotuning prefetch PIIX cdwrite utils rc
# LocalWords:  PCWATCHDOG berkprod bitgate boldt ucsb jf kyoto jp euc Tetsuyasu 
# LocalWords:  YAMADA tetsu cauchy nslab ntt nevod perm su doc kaf kheops wsc
# LocalWords:  traduc Bourgin dbourgin helptext menuconfig kfill READMEs HOWTOs
# LocalWords:  IDEDISK IDEFLOPPY EIDE firewalls QMAGIC ZMAGIC LocalWords opti
# LocalWords:  SVGATextMode vga svga Xterminal Xkernel syr jmwobus comfaqs dhcp
# LocalWords:  IPv IPng interoperability ipng ipv radio's tapr pkthome PLP nano
# LocalWords:  Ses Mhz sethdlc SOUNDMODEM WindowsSoundSystem smdiag pcf inka ES
# LocalWords:  smmixer ptt circ soundmodem MKISS FDDI DEFEA DEFPA DEFXX redhat
# LocalWords:  HyperNews khg mconv sed lina wuftpd MicroChannel netlink irc cum
# LocalWords:  raudio realaudio PPROP NETBIOS GUI IBMMCA ELMC Racal Interlan fi
# LocalWords:  eth shapecfg src esp PCWD PREVSTAT bootparam sig bitwizard SBC
# LocalWords:  downloads AFSK TCM FP Karn KA FSK RUH LinkSys cron mouseman LLC
# LocalWords:  SyQuest SyQuest's CCITT MicroSolutions BPCD bpcd ESPSERIAL PROM
# LocalWords:  SUNESP openprom OPENPROMIO quango themall al TT MC MMU LC RMW AA
# LocalWords:  INSNS Ataris AutoConfig ZORRO OCS AMIFB Agnus Denise ECS CDTV GB
# LocalWords:  AGA Cybervision CYBER GSP TMS DMI Zorro ACSI ROMs SLM BioNet GVP
# LocalWords:  PAMsNet TekMagic Cyberstorm MkI CYBERSTORMII MkII BLZ onboard cx
# LocalWords:  VillageTronics ATARILANCE RieblCard PAMCard VME MFP sangoma LAPB
# LocalWords:  Rhotron BioData's Multiface AMIGAMOUSE COPCON Amiga's bitplanes
# LocalWords:  ATARIMOUSE MFPSER SCC's MegaSTE ESCC Atari's GVPIOEXT DMASOUND
# LocalWords:  fdutils cisco univercd rpcg htm iface lapb LAPBETHER tpqic qic
# LocalWords:  SYNTH xd en binfmt aout ipip terra ipx fileserver sd sr sg wic
# LocalWords:  ibmmca lapbether mkiss dlci sdla fmv eepro eexpress ni hp ne es
# LocalWords:  ibmtr isofs ROMFS romfs pcxx cyclades istallion psaux msbusmouse
# LocalWords:  atixlmouse sbin softdog pcwd USS Lite ACI miroSOUND PCM miroPCM
# LocalWords:  microcontroller miro Voxware downloading teles acsi slm gvp ltpc
# LocalWords:  atari ariadne amigamouse atarimouse builtin IPDDP maths bradford
# LocalWords:  LocalTalk AppleTalk Farallon PhoneNet Zubkoff lnz SCCB HAPN WANs
# LocalWords:  wanrouter WANPIPE multiprotocol Mbps wanpipe EtherWORKS nodma SC
# LocalWords:  smp HiSax SiemensChipSet Siemens AVM Elsa ITK hisax PCC MICROR
# LocalWords:  Mircolink EURO DSS Spellcaster BRI sc spellcast Digiboards GPIO
# LocalWords:  SYMBIOS COMPAT SDMS rev ASUS Tekram HX VX API ibmmcascsi ASY asy
# LocalWords:  loader's PCnetPCI automounter AUTOFS amd autofs VT Gallant's Pnp
# LocalWords:  AEDSP aedsp enskip tik Sysctl sysctl PARPORT parport pnp IDs EPP
# LocalWords:  Autoprobe conformant bart patrickr HDLS READBACK AB usr DAMA DS
# LocalWords:  Symbios PCscsi tmscsim RoamAbout GHz Hinds's contrib mathematik
# LocalWords:  darmstadt okir DIGIEPCA International's Xem digiepca epca bootup
# LocalWords:  zorro CAPI AVMB capi avmb VP SYN syncookies EM em pc Ethertalk
# LocalWords:  Dayna DL Daynatalk LT PhoneNET ATB Daystar queueing CMDS SCBs ls
# LocalWords:  SCB STATS Thinnet ThunderLAN TLAN Netelligent NetFlex tlan james
# LocalWords:  caldera Preload dcache Preloading slowdowns schoebel uni
# LocalWords:  stuttgart rdist TRANS hostnames mango jukeboxes ESS
# LocalWords:  hardlinked NAMETRANS env mtab fstab umount nologin runlevel gid
# LocalWords:  transname filespace adm Nodename hostname uname Kernelname bootp
# LocalWords:  KERNNAME kname ktype kernelname Kerneltype KERNTYPE Alt SCB's RX
# LocalWords:  dataless kerneltype SYSNAME Netbeui Comtrol Rocketport palmtop
# LocalWords:  nvram SYSRQ SysRq PrintScreen sysrq NVRAMs NvRAM Shortwave RTTY
# LocalWords:  HFMODEM shortwave Sitor Amtor Pactor GTOR hfmodem hayes TX TMOUT
# LocalWords:  QIC TR CONFIG FTAPE Iomega CMS FC FDC Exabyte Iomega's DFLT
# LocalWords:  tapedrive THR FCD IRQ DMA SZ PCI ftape README txt HOWTO
# LocalWords:  http www rwth aachen LBFM claus FAQ mt ZFTAPE VFS
# LocalWords:  zftape zft William's lzrw kerneld BLK zftape's tar's
# LocalWords:  afio's MTSETBLK MTIOCTOP dev qft setblk BLKSZ NR
# LocalWords:  setdrvbuffer kb NUMBUFFERS Procfs PROC FS proc resp STD
# LocalWords:  Alt LocalWords
