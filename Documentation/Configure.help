# Maintained by Axel Boldt (boldt@math.ucsb.edu) 
#
# This version of the Linux kernel configuration help texts
# corresponds to the kernel versions 1.3.x. Be aware that these
# are development kernels.
#
# Information about what a kernel is, what it does, how to patch and
# compile it and much more is contained in the Kernel-HOWTO, available
# via ftp (user: anonymous) from sunsite.unc.edu in the directory
# /pub/Linux/docs/HOWTO. 
#
# Format of this file: description<nl>variable<nl>helptext<nl><nl>. 
# If the question being documented is of type "choice", we list
# only the first occurring config variable. The help texts
# must not contain empty lines. No variable should occur twice; if it
# does, only the first occurrence will be used by Configure. The lines
# in a help text should be indented two positions. Lines starting with
# `#' are ignored. To be nice to menuconfig, limit your lines to 70
# characters. Use emacs' kfill.el to edit this file or you lose.
#
# If you add a help text to this file, please try to be as gentle as
# possible. Don't use unexplained acronyms and generally write for the
# hypothetical user who has just bought a PC, removed Windows,
# installed Linux and is now recompiling the kernel for the first
# time. Tell them what to do if they're unsure. Technical information
# should go in a README in the Documentation directory. Mention all 
# the relevant READMEs and HOWTOs in the help text.
#
# All this was shamelessly stolen from several different sources. Many
# thanks to all the contributors.  Feel free to use these help texts
# in your own kernel configuration tools. The texts are copyrighted
# (c) 1995,1996 by Axel Boldt and governed by the GNU Public License.

Prompt for development and/or incomplete code/drivers
CONFIG_EXPERIMENTAL
  Some of the various things that Linux supports (such as network 
  drivers, filesystems, network protocols, etc.) can be in a state 
  of development where the functionality, stability, or the level of 
  testing is not yet high enough for general use. This is usually
  known as the "alpha-test" phase amongst developers. If a feature is
  currently in alpha-test, then the developers usually discourage 
  widespread use of this feature by the general public to avoid 
  "Why doesn't this work?" type mail messages. However, active testing
  and and detailed bug reports from people familiar with the kernel's
  internals are usually welcomed by the developers. Unless you intend
  to help test and develop a feature or driver that falls into this 
  category, you should probably say N here, which will cause this 
  configure script to present you with fewer choices. If you say Y here,
  you will be offered the choice of using features or drivers that are
  currently considered to be in the alpha-test phase.

Kernel math emulation
CONFIG_MATH_EMULATION
  Linux can emulate a math coprocessor (used for floating point
  operations) if you don't have one. 486DX and Pentium processors have
  a math coprocessor built in, 486SX and 386 do not, unless you added
  a 487DX or 387, respectively.  (The messages during boot time can
  give you some hints here ["man dmesg"]) Everyone needs either a
  coprocessor or this emulation. If you enable this emulation even
  though you have a coprocessor, the coprocessor will be used
  nevertheless. (This behavior can be changed with the kernel command
  line option "no387", which comes handy if your coprocessor is
  broken. See the documentation of your boot loader (lilo or loadlin)
  about how to pass options to the kernel at boot time. The lilo
  procedure is also explained in the SCSI-HOWTO, available via ftp
  (user: anonymous) in sunsite.unc.edu:/pub/Linux/docs/HOWTO.) This
  means that it is a good idea to say Y here if you intend to use this
  kernel on different machines. More information about the internals
  of Linux math coprocessor emulation can be found in
  arch/i386/math-emu/README. If you are not sure, say Y; apart from
  resulting in a 45kB bigger kernel, it won't hurt.

Normal floppy disk support
CONFIG_BLK_DEV_FD
  If you want to use your floppy disk drive(s) under Linux, say
  Y. Information about this driver, especially important for IBM
  Thinkpad users, is contained in drivers/block/README.fd.  This
  driver is also available as a module ( = code which can be inserted
  in and removed from the running kernel whenever you want). If you
  want to compile it as a module, say M here and read
  Documentation/modules.txt.
  
RAM disk support
CONFIG_BLK_DEV_RAM
  Enabling this option will allow you to use a portion of your RAM
  memory as a block device, so that you can make filesystems on it,
  read and write to it and do all the other things that normal block
  devices (such as harddrives) can do.  It is usually used to load and
  store a copy of a minimal root file system off of a floppy into RAM
  during the initial install of Linux.  Note that the kernel command
  line option "ramdisk=XX" is now obsolete.  For details, read
  Documentation/ramdisk.txt. If you want to compile this as a module (
  = code which can be inserted in and removed from the running kernel
  whenever you want), say M and read Documentation/modules.txt.  Most
  normal users won't need the RAM disk functionality, and can thus say
  N here.

Initial RAM disk (initrd) support
CONFIG_BLK_DEV_INITRD
  The initial RAM disk is a RAM disk that is loaded by the boot loader
  (LOADLIN or LILO) and that is mounted as root before the normal boot
  procedure. It is typically used to load modules needed to mount the
  "real" root file system, etc. See Documentation/initrd.txt for
  details.

Loop device support
CONFIG_BLK_DEV_LOOP
  Enabling this option will allow you to mount a file as a file system.
  This is useful if you want to check an ISO9660 file system before
  burning the CD, or want to use floppy images without first writing
  them to floppy.
  This option also allows one to mount a filesystem with encryption.
  To use these features, you need a recent version of mount, such as
  the one found at ftp.win.tue.nl:/pub/linux/util/mount-2.5X.tar.gz.
  If you want to use encryption, you might also be interested in the
  (old) DES package ftp.funet.fi:/pub/OS/Linux/BETA/loop/des.1.tar.gz.
  Note that this loop device has nothing to do with the loopback
  device used for network connections from the machine to itself.
  Most users will answer N here.

Enhanced IDE/MFM/RLL disk/cdrom/tape support
CONFIG_BLK_DEV_IDE 
  This will use the full-featured IDE driver to control up to four IDE
  interfaces, for a combination of up to eight IDE disk/cdrom/tape
  drives.  Useful information about large (>540MB) IDE disks,
  soundcard IDE ports, and other topics, is all contained in
  drivers/block/README.ide.  If you have one or more IDE drives, say Y
  here.  If your system has no IDE drives, or if memory requirements
  are really tight, you could say N here, and select the Old harddisk
  driver instead to save about 13kB of memory in the kernel.  To
  fine-tune IDE drive/interface parameters for improved performance,
  look for the hdparm package at
  sunsite.unc.edu:/pub/Linux/kernel/patches/diskdrives/

Old harddisk (MFM/RLL/IDE) driver
CONFIG_BLK_DEV_HD_ONLY
  There are two drivers for MFM/RLL/IDE disks.  Most people use the
  newer enhanced driver, but the old one is still around for two
  reasons.  Some older systems have strange timing problems and seem
  to work only with the old driver (which itself does not work with
  some newer systems).  The other reason is that the old driver is
  smaller, since it lacks the enhanced functionality of the new one.
  This makes it a good choice for systems with very tight memory
  restrictions, or for systems with only older MFM/RLL/ESDI drives.
  Choosing the old driver can save 13kB or so of kernel memory.  If
  you are unsure, then just choose the Enhanced IDE/MFM/RLL driver
  instead of this one.

Use old disk-only driver on primary interface
CONFIG_BLK_DEV_HD_IDE
  There are two drivers for MFM/RLL/IDE disks.  Most people use just
  the new enhanced driver by itself.  This option installs the old
  harddisk driver to control the primary IDE/disk interface in the
  system, leaving the new enhanced IDE driver take care of only the
  2nd/3rd/4th IDE interfaces.  Choosing this option may be useful for
  older systems which have MFM/RLL/ESDI controller+drives at the
  primary port address (0x1f0), along with IDE drives at the
  secondary/3rd/4th port addresses.  Normally, just say N here; you
  will then use the new driver for all 4 interfaces.
  
Include IDE/ATAPI CDROM support
CONFIG_BLK_DEV_IDECD
  If you have a CDROM drive using the ATAPI protocol, say Y.  ATAPI is
  a new protocol used by IDE CDROM and TAPE drives, similar to the
  SCSI protocol.  Most new CDROM drives use ATAPI, including the
  NEC-260, Mitsumi FX400, Sony 55E, and just about all non-SCSI
  double(2X), quad(4X), and six(6X) speed drives.  At boot time, the
  TAPE drive will be identified along with other IDE devices, as "hdb"
  or "hdc", or something similar.
  If this is your only CDROM drive, you can say N to all other CDROM
  options, but be sure to say Y to the ISO9660 filesystem.  Read the
  CDROM-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO.  Note that older versions of
  lilo (the linux boot loader) cannot properly deal with IDE/ATAPI
  CDROMs, so install lilo-16 or higher, available from
  sunsite.unc.edu:/pub/Linux/system/Linux-boot/lilo.

Include IDE/ATAPI TAPE support
CONFIG_BLK_DEV_IDETAPE
  If you have an IDE tape drive using the ATAPI protocol, say Y.
  ATAPI is a new protocol used by IDE TAPE and ATAPI drives,
  similar to the SCSI protocol.  At boot time, the TAPE drive will
  be identified along with other IDE devices, as "hdb" or "hdc",
  or something similar.  Be sure to consult the drivers/block/ide-tape.c
  and README.ide files for usage information.

Support removable IDE interfaces (PCMCIA)
CONFIG_BLK_DEV_IDE_PCMCIA
  This option adds code to the IDE driver to handle hot insertion
  and removal of IDE interfaces and drives, under direction of an
  external utility (?).  Normally, just say N here.

CMD640 chipset bugfix/support
CONFIG_BLK_DEV_CMD640
  The CMD-Technologies CMD640 chip is used on many common 486 and
  Pentium motherboards, usually in combination with a "Neptune" or
  "SiS" chipset.  Unfortunately, it has a number of rather nasty
  design flaws that can cause severe data corruption under many common
  conditions.  Say Y here to include code which tries to automatically
  detect and correct the problems under Linux.  This also provides
  support for the enhanced features of the CMD640, for improved
  support/operation under linux, including access to the secondary IDE
  ports in some systems.  This driver will work automatically in PCI
  based systems (most new systems have PCI slots).  But if your system
  uses VESA local bus (VLB) instead of PCI, you must also supply a
  kernel boot parameter to enable the CMD640 bugfix/support:
  "ide0=cmd640_vlb" The CMD640 chip is also used on add-in cards by
  Acculogic, and on the "CSA-6400E PCI to IDE controller" that some
  people have. If unsure, say Y.

RZ1000 chipset bugfix/support
CONFIG_BLK_DEV_RZ1000
  The PC-Technologies RZ1000 chip is used on many common 486 and
  Pentium motherboards, usually along with the "Neptune" chipset.
  Unfortunately, it has a rather nasty design flaw that can cause
  severe data corruption under many conditions.  Say Y here to include
  code which automatically detects and corrects the problem under
  Linux.  This may slow disk throughput by a few percent, but at least
  things will operate 100% reliably. If unsure, say Y.

Other IDE chipset support
CONFIG_IDE_CHIPSETS
  Say Y here if you want to include enhanced support for various IDE
  interface chipsets used on motherboards and add-on cards.  This
  enhanced support may be necessary for linux to be able to access the
  3rd/4th drives in some systems.  It may also enable setting of
  higher speed I/O rates to improve system performance with these
  chipsets.  Most of these also require special kernel boot parameters
  to actually turn on the support at runtime.

DTC-2278 support
CONFIG_BLK_DEV_DTC2278
  This driver is enabled at runtime using the "ide0=dtc2278" kernel
  boot parameter.  It enables support for the secondary IDE interface
  of the DTC-2278 card, and permits faster I/O speeds to be set as
  well.  See the README.ide and dtc2278.c files for more info.

Holtek HT6560B support
CONFIG_BLK_DEV_HT6560B
  This driver is enabled at runtime using the "ide0=ht6560b" kernel
  boot parameter.  It enables support for the secondary IDE interface
  of the Holtek card, and permits faster I/O speeds to be set as well.
  See the README.ide and ht6560b.c files for more info.

QDI QD6580 support
CONFIG_BLK_DEV_QD6580
  This driver is enabled at runtime using the "ide0=qd6580" kernel
  boot parameter.  It permits faster I/O speeds to be set.
  See the README.ide and qd6580.c files for more info.

UMC 8672 support
CONFIG_BLK_DEV_UMC8672
  This driver is enabled at runtime using the "ide0=umc8672" kernel
  boot parameter.  It enables support for the secondary IDE interface
  of the UMC-8672, and permits faster I/O speeds to be set as well.
  See the README.ide and umc8672.c files for more info.

ALI M1439/M1445 support
CONFIG_BLK_DEV_ALI14XX
  This driver is enabled at runtime using the "ide0=ali14xx" kernel
  boot parameter.  It enables support for the secondary IDE interface
  of the chipset, and permits faster I/O speeds to be set as well.
  See the README.ide and ali14xx.c files for more info.

PROMISE DC4030 support (ALPHA)
CONFIG_BLK_DEV_PROMISE
  This driver is enabled at runtime using the "ide0=dc4030" kernel
  boot parameter.  It enables support for the secondary IDE interface
  of the chipset, and takes advantage of the caching features of the
  card.  This driver is known to incur timeouts/retries during heavy
  I/O to drives attached to the secondary interface.  CDROM and
  TAPE devices are not supported yet.
  See the README.ide and promise.c files for more info.

XT harddisk support
CONFIG_BLK_DEV_XD
  Very old 8 bit hard disk controllers used in the IBM XT
  computer. Pretty unlikely that you have this: say N.

Multiple devices driver support
CONFIG_BLK_DEV_MD
  This driver lets you combine several harddisk partitions into one
  logical block device. Information about how and why to use it and the
  necessary tools are available over ftp (user: anonymous) from
  sweet-smoke.ufr-info-p7.ibp.fr/pub/public/Linux in the md package
  and the md-FAQ. Please read drivers/block/README.md. If unsure, say
  N.

Linear (append) mode
CONFIG_MD_LINEAR
  If you enable this, then your multiple devices driver will be able
  to use the so-called linear mode, i.e. it will combine the harddisk
  partitions by simply appending one to the other. If you want to
  compile this as a module ( = code which can be inserted in and
  removed from the running kernel whenever you want), say M here and
  read Documentation/modules.txt. If unsure, say Y.

RAID-0 (striping) mode
CONFIG_MD_STRIPED
  If you enable this, then your multiple devices driver will be able
  to use the so-called raid0 mode, i.e. it will combine the harddisk
  partitions into one logical device in such a fashion as to fill them
  up evenly, one chunk here and one chunk there. This will increase
  the throughput rate if the partitions reside on distinct disks.  If
  you want to compile this as a module ( = code which can be inserted
  in and removed from the running kernel whenever you want), say M
  here and read Documentation/modules.txt. If unsure, say Y.

Support for Deskstation RPC44 
CONFIG_DESKSTATION_RPC44
  This is a machine with a R4400 100 MHz CPU. To compile a Linux
  kernel that runs on these, say Y here. For details about Linux
  on the MIPS architecture, check out the Linux/MIPS FAQ on the WWW at
  http://lena.fnet.fr/ (To browse the WWW, you need to
  have access to a machine on the Internet that has one of the
  programs lynx, netscape or Mosaic).

Support for Mips Magnum 3000 
CONFIG_MIPS_MAGNUM_3000
  To compile a Linux kernel that runs on these, say Y here. For
  details about Linux on the MIPS architecture, check out the
  Linux/MIPS FAQ on the WWW at http://lena.fnet.fr/ (To browse the
  WWW, you need to have access to a machine on the Internet that has
  one of the programs lynx, netscape or Mosaic).

Support for Mips Magnum 4000
CONFIG_MIPS_MAGNUM_4000
  This is a machine with a R4000 100 MHz CPU. To compile a Linux
  kernel that runs on these, say Y here. For details about Linux
  on the MIPS architecture, check out the Linux/MIPS FAQ on the WWW at
  http://lena.fnet.fr/ (To browse the WWW, you need to
  have access to a machine on the Internet that has one of the
  programs lynx, netscape or Mosaic).

Support for Olivetti M700
CONFIG_OLIVETTI_M700
  This is a machine with a R4000 100 MHz CPU. To compile a Linux
  kernel that runs on these, say Y here. For details about Linux
  on the MIPS architecture, check out the Linux/MIPS FAQ on the WWW at
  http://lena.fnet.fr/ (To browse the WWW, you need to
  have access to a machine on the Internet that has one of the
  programs lynx, netscape or Mosaic).

Support for Deskstation Tyne
CONFIG_DESKSTATION_TYNE
  This is a machine with a R4600 134 MHz CPU. The Linux port for this
  system is idle right now because of hardware or documentation
  problems. For details about Linux on the MIPS architecture, check
  out the Linux/MIPS FAQ on the WWW at http://lena.fnet.fr/ (To browse
  the WWW, you need to have access to a machine on the Internet that
  has one of the programs lynx, netscape or Mosaic).

Support for Acer PICA 1 chipset
CONFIG_ACER_PICA_61
  This is a machine with a R4400 134/150 MHz CPU. To compile a Linux
  kernel that runs on these, say Y here. For details about
  Linux on the MIPS architecture, check out the Linux/MIPS FAQ on the
  WWW at http://lena.fnet.fr/ (To browse the WWW, you need to have
  access to a machine on the Internet that has one of the programs
  lynx, netscape or Mosaic).

Support for DECstation
CONFIG_DECSTATION
  The DECStation 3100 (with a MIPS R2000 series CPU) and DECStation
  5000/xxx (MIPS R3000 series CPU) are also sometimes labeled
  PMAX. They often run the Ultrix operating system. To compile a Linux
  kernel that runs on these, say Y here. For details about Linux
  on the MIPS architecture, check out the Linux/MIPS FAQ on the WWW at
  http://lena.fnet.fr/ (To browse the WWW, you need to
  have access to a machine on the Internet that has one of the
  programs lynx, netscape or Mosaic).

CPU type
CONFIG_CPU_R3000
  Give the type of your machine's MIPS CPU. For this question,
  it suffices to give a unique prefix of the option you want to
  choose. 

Networking support
CONFIG_NET
  Unless you really know what you are doing, you should say Y
  here. The reason is that some programs need it even if you configure
  a stand-alone machine that won't be connected to any other computer.
  from an older kernel, you should consider updating your networking
  tools too; read net/README for details.

Network aliasing
CONFIG_NET_ALIAS
  This is for setting several network addresses on the same low-level
  network device driver. Typically used for services that act
  differently based on the address they listen on (e.g. Apache httpd)
  or for connecting to different logical networks through the same
  physical interface.  This is the generic part, later when
  configuring network protocol options you will be asked for
  protocol-specific aliasing support.  See
  Documentation/networking/alias.txt for more info.  If you need this
  features (for any protocol, like IP) say Y; if unsure, say N.

Network firewalls
CONFIG_FIREWALL
  A firewall is a computer which protects a local network from the
  rest of the World: all traffic to and from computers on the local
  net is inspected by the firewall first. If you want to configure
  your Linux box as a firewall for a local network, say Y here. If
  your local network is TCP/IP based, you will have to say Y to "IP:
  firewalling", below. Chances are that you don't want this, so say N.

Sun floppy controller support
CONFIG_BLK_DEV_SUNFD
  This is support for floppy drives on Sun Sparc workstations. Say Y
  if you have a floppy drive, otherwise N. Easy.

Alpha system type
CONFIG_ALPHA_AVANTI
  Find out what type of Alpha motherboard you have. You will probably
  want to read the Linux/Alpha homepage on the WWW at
  http://www.azstarnet.com/~axplinux/ (To browse the WWW, you need to
  have access to a machine on the Internet that has one of the
  programs lynx, netscape or Mosaic). For this question, it suffices
  to give a unique prefix of the option you want to choose. The
  choices:
  ** Avanti: This is for Mustang (AS200), M3 (AS250), Avanti (AS400)
     and XL (a.k.a. "Windows NT Dream Machine" :-) AlphaStations.
     These usually come with a TGA graphics adaptor, so you'll want to
     say Y to "TGA Console support", below, if you have one of these.
  ** Jensen: a.k.a. DEC 2000 a.k.a. DECpc AXP 150, the oldest Alpha
     PC; it sports an EISA bus. The boot process on Jensen machines is
     difficult (no booting from floppies, MILO doesn't work). You need
     to have access to a second Linux workstation. The Linux/Alpha
     FAQ, accessible from the above mentioned WWW page, has details.
  ** Noname: a.k.a. AXPpci33, a PCI-bus based board using the 21066
     Alpha CPU, running at either 166 or 233 MHz. You also want to
     choose this option if you have a UDB (Universal Desktop Box
     a.k.a. Multia) machine.
  ** Cabriolet: also called AlphaPC64, a PCI-bus based board using the
     21064 Alpha CPU typically running at 275 or 300 MHz.
  ** EB66: "Evaluation Board"
  ** EB66+: "Evaluation Board"
###
### Add info about Platform2000, EB164
###

Is it really a true XL
CONFIG_ALPHA_XL
  If your Avanti Machine is of type XL (a.k.a. "Windows NT Dream
  Machine") (as opposed to Mustang (AS200), M3 (AS250) or Avanti
  (AS400)), say Y, otherwise N.

Limit memory to low 16MB
CONFIG_MAX_16M
  This is for some buggy motherboards which cannot properly deal with
  the memory above 16MB. If you have more than 16MB of RAM and
  experience weird problems, you might want to try Y, everyone else
  says N. Note for machines with more that 64MB of RAM: in order for
  the kernel to be able to use the memory above 64MB, pass the command
  line option "mem=XXXM" (where XXX is the memory size in megabytes)
  to your kernel during boot time. See the documentation of your boot
  loader (lilo or loadlin) about how to pass options to the
  kernel. The lilo procedure is also explained in the SCSI-HOWTO,
  available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO.  You also need at least 512kB
  of RAM cache if you have more than 64MB of RAM.  Some other things
  to try when experiencing seemingly random, "weird" problems: 1)
  passing the "no-hlt" option to the kernel 2) passing the "no-387"
  option to the kernel 3) passing the "mem=4M" option to the kernel
  (thereby disabling all but the first 4M of RAM) 4) disabling the
  cache from your BIOS settings 5) exchanging RAM chips 6) exchanging
  the motherboard 7) committing suicide.

Using SRM as bootloader
CONFIG_ALPHA_SRM
  There are two different types of booting firmware on Alphas: SRM,
  which is command line driven, and ARC, which uses menus and arrow
  keys. The usual way to load Linux on an Alpha machine is to use MILO
  (a bootloader that lets you pass command line parameters to the
  kernel just like LILO does) which can be loaded either from ARC or
  can be installed directly as a permanent firmware replacement from
  floppy (which requires changing a certain jumper on the
  motherboard). If you want to do either of these, say N here. If MILO
  doesn't work on your system (true for Jensen motherboards), you can
  bypass it altogether and boot Linux directly from an SRM console;
  say Y here in order to do that. Note that you won't be able to boot
  from an IDE disk using SRM. If unsure, say N. Details about the
  Linux/Alpha booting process are contained in the Linux/Alpha FAQ,
  accessible on the WWW from http://www.azstarnet.com/~axplinux/ (To
  browse the WWW, you need to have access to a machine on the Internet
  that has one of the programs lynx, netscape or Mosaic).

Echo console messages on /dev/ttyS1
CONFIG_SERIAL_ECHO
  If you enable this option, all kernel messages that would usually go
  to the console will also be sent to the device /dev/ttyS1 which
  corresponds to a serial port; this could be useful if you attached
  a terminal or printer to that port.

TGA Console Support
CONFIG_TGA_CONSOLE
  Many Alpha systems (e.g the Multia) are shipped with a graphics card
  that implements the TGA interface (much like the VGA standard, but
  older TGA adaptors are *not* VGA compatible).  On such systems, this
  option needs to be enabled so that the TGA driver rather than the
  standard VGA driver is used.  Note that, at this time, there is no X
  server for these systems. If unsure, try N.

PCI bios support
CONFIG_PCI
  Find out whether you have a PCI motherboard. PCI is the name of a
  bus system, i.e. the way the CPU talks to the other stuff inside
  your box. Other bus systems are ISA, EISA, Microchannel (MCA) or
  VESA. If you have PCI, say Y, otherwise N. Note1: MCA systems are
  not supported by the standard kernels, but patches exist at
  http://www.undergrad.math.uwaterloo.ca/~cpbeaure/mca-linux.html on
  the WWW. Note2: some old PCI motherboards have BIOS bugs and may
  crash if "PCI bios support" is enabled (but they run fine without
  this option). The PCI-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO, contains valuable information
  about which PCI hardware does work under Linux and which doesn't.
  If some of your PCI devices don't work and you get a warning during
  boot time ("man dmesg"), please follow the instructions at the top
  of include/linux/pci.h. 

PCI bridge optimization (experimental)
CONFIG_PCI_OPTIMIZE
  This can improve access times for some hardware devices under
  certain BIOSes if your computer uses a PCI bus system. This is
  recommended; say Y.

Intel 430FX (Triton) chipset DMA support
CONFIG_BLK_DEV_TRITON
  If your PCI system uses an IDE harddrive (as opposed to SCSI, say)
  and includes the Intel 430FX PCI Triton chipset, you will want to
  enable this option to allow use of bus-mastering DMA data transfers.
  Read the comments at the beginning of drivers/block/triton.c.  The
  hdparm utility can be obtained via ftp (user: anonymous) from
  sunsite.unc.edu:/pub/Linux/kernel/patches/diskdrives/.  It is safe
  to say Y.

System V IPC
CONFIG_SYSVIPC
  Inter Process Communication is a suite of library functions and system
  calls which let processes (= running programs) synchronize and
  exchange information. It is generally considered to be a good thing,
  and some programs won't run unless you enable this. In particular,
  if you want to run the DOS emulator dosemu under Linux (read the
  DOSEMU-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO), you'll need to say Y here. You
  can find documentation about IPC in ipc.info, which is contained in
  sunsite.unc.edu:/pub/Linux/docs/man/info.tar.gz (extract with "tar
  xzvf filename"). These docs are in the info format which is used to
  document GNU software and can be read from within emacs ("Ctrl-h i")
  or with the program info ("man info"). Enabling this option enlarges
  your kernel by about 7kB. Just say Y.

Kernel support for ELF binaries
CONFIG_BINFMT_ELF
  ELF (Executable and Linkable Format) is a format for libraries and
  executables used across different architectures and operating
  systems. This option will enable your kernel to run ELF binaries and
  enlarge it by about 2kB. ELF support under Linux is quickly
  replacing the traditional Linux a.out format because it is portable
  (this does *not* mean that you will be able to run executables from
  different architectures or operating systems!) and makes building
  run-time libraries very easy. Many new executables are distributed
  solely in ELF format. You definitely want to say Y here. Information
  about ELF is on the WWW at
  http://www.sjc.ox.ac.uk/users/barlow/elf-howto.html (To browse the
  WWW, you need to have access to a machine on the Internet that has
  one of the programs lynx, netscape or Mosaic).  If you find that
  after upgrading to Linux kernel 1.3 and saying Y here, you still
  can't run any ELF binaries (they just crash), then you'll have to
  install the newest ELF runtime libraries, including ld.so (available
  via ftp (user: anonymous) from
  tsx-11.mit.edu:/pub/linux/packages/GCC). Also note that ELF binary
  support was broken in kernel versions 1.3.0 - 1.3.2. Either use a
  newer 1.3 kernel or one of the stable 1.2 versions. If you want to
  compile this as a module ( = code which can be inserted in and
  removed from the running kernel whenever you want), say M here and
  read Documentation/modules.txt. Saying M or N here is dangerous
  because some crucial programs on your system might be in ELF
  format. 

Compile kernel as ELF - if your GCC is ELF-GCC
CONFIG_KERNEL_ELF
  The gcc version 2.7.0 and newer produces the new ELF binary format
  as default. If you have such a compiler (try "gcc -v"), say Y
  here, otherwise N.
  It is possible, albeit almost pointless, to compile the kernel in
  a.out format even if your compiler produces ELF as default. For
  that, you would have to say N here and change the variables LD and
  CC in the toplevel Makefile. Similarly, if your compiler produces
  a.out by default but is able to produce ELF, you can compile the
  kernel in ELF by saying Y here and editing the variables CC
  and LD in the toplevel Makefile.

Kernel support for A.OUT binaries
CONFIG_BINFMT_AOUT
  A.OUT (Assembler.OUTput) format is a format for libraries and
  executables used in the earliest versions of UNIX. Linux used this
  format until it was replaced with the ELF format.
  As more and more programs are converted to ELF, the use for A.OUT
  will gradually diminish. If you disable this option it will reduce
  your kernel by one page. This is not much and by itself does not
  warrant removing support. However its removal is a good idea when
  you wish to ensure that absolutely none of your programs will use
  this older executable format. If you don't know what to answer at
  this point then answer Y. You may answer M for module support and
  later load the module when you find a program which needs a.out
  format. Saying M or N here is dangerous, because some crucial
  programs on your system might be in A.OUT format.

Kernel support for JAVA binaries
CONFIG_BINFMT_JAVA
  JAVA binaries are becoming a universal executable format. This
  option allows Java binaries and Java Applets to be handled invisibly
  to the OS. As more and more Java programs become available, the use
  for this will gradually increase. If you want to use this, read the
  Java on Linux HOWTO, available via ftp (user: anonymous) at
  sunsite.unc.edu:/pub/Linux/docs/HOWTO. In order to execute Java binaries,
  you will also need to install the Java Developers Kit. If you disable
  this option it will reduce your kernel by about one page. This is not
  much and by itself does not warrant removing support. However its
  removal is a good idea if you do not have the JDK installed. If you
  don't know what to answer at this point then answer Y. You may answer
  M for module support and later load the module when you install the
  JDK or find a interesting Java program that you can't live without.
Processor type
CONFIG_M386
  This is the processor type of your CPU. It is used for optimizing
  purposes. In order to compile a kernel that can run on all CPU types
  (albeit not optimally fast), you can specify "386" here.  If you
  specify "486" or "Pentium" or "PPro", then the kernel will run on
  486 and Pentium (=586) and Pentium Pro (=686) CPUs. In rare cases,
  it can make sense to specify "Pentium" even if running a 486: the
  kernel will be smaller but slower. On the other hand, if you use a
  compiler before gcc 2.7 (say "gcc -v" to find out), then you have to
  say "386" or "486" here even if running on a Pentium or PPro
  machine. If you don't know what to do, say "386".

Compile the kernel into the ELF object format 
CONFIG_ELF_KERNEL
  ELF (Executable and Linkable Format) is a format for libraries and
  executables used across different architectures and operating
  systems. This option will cause the resulting kernel to be in ELF
  format, which is generally desirable, so say Y. However, it only
  works if your compiler and linker can produce ELF code.

Is your ELF compiler an extra compiler
CONFIG_EXTRA_ELF_COMPILER
  If you have a linuxelf-gcc as opposed to linux-gcc, say Y, otherwise
  N.

Generate little endian code
CONFIG_CPU_LITTLE_ENDIAN
  If your compiler is mipsel-linux-gcc or mipsel-linuxelf-gcc (as
  opposed to mips-linux-gcc or mips-linuxelf-gcc), say Y here,
  otherwise N. Most MIPS machines use little-endian code, but it might
  be necessary to run older Mips systems, such as the Sony News and
  MIPS RC3xxx in big endian mode.

Enable loadable module support
CONFIG_MODULES
  Kernel modules are small pieces of compiled code which can be 
  inserted in or removed from the running kernel, using the
  programs insmod and rmmod. This is described in the file 
  Documentation/modules.txt. Modules can be device drivers, file 
  systems, binary executable formats, and so on. If you think that 
  you may want to make use of modules with this kernel in the future, 
  then say Y here. If unsure, say Y.

Set version information on all symbols for modules
CONFIG_MODVERSIONS
  Usually, modules have to be recompiled whenever you switch to a new
  kernel. Enabling this option allows you to keep using the same
  modules even after compiling a new kernel; this requires the program
  modprobe. All the software needed for module support is in the
  modules package in sunsite.unc.edu:/pub/Linux/kernel, available via
  ftp (user: anonymous) and to be extracted with "tar xzvf
  filename". NOTE1: if you say Y here but don't have the program
  genksyms (which is also contained in the above mentioned modules
  package), then the building of your kernel will fail. NOTE2: if you
  say Y here, then you cannot say Y to the PPP driver, below; the only
  option is to compile it as a module (PPP is a protocol for sending
  internet traffic over telephone lines). Therefore, N is a safe bet.

Kernel daemon support
CONFIG_KERNELD
  Normally when you have selected some drivers and/or filesystems to
  be created as loadable modules, you also have the responsibility to
  load the corresponding module (via insmod/modprobe) before you can
  use it.  If you select Y here, the kernel will take care of this all
  by itself, together with the user level daemon "kerneld".  Note that
  "kerneld" will also automatically unload all unused modules, so you
  don't have to use "rmmod" either.
  kerneld will also provide support for different user-level beeper
  and screen blanker programs later on.
  The "kerneld" daemon is included in the package "modules-1.2.8" and
  later. You will probably want to read the kerneld mini-HOWTO,
  available via ftp (user: anonymous) from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini. If unsure, say Y.

ARP daemon support
CONFIG_ARPD
  Normally, the kernel maintains an internal cache which maps IP 
  addresses to hardware addresses on the local network, so that
  Ethernet/Token Ring/ etc. frames are sent to the proper address
  on the physical networking layer.  For small networks having
  a few hundred directly connected hosts or less, keeping  this
  address resolution cache (ARP) inside the kernel works well.
  However, maintaining an internal ARP cache does not work well for
  very large switched networks, and will use a lot of kernel memory
  if TCP/IP connections are made to many machines on the network.
  By enabling this option, the kernel's internal ARP cache will
  never grow to more than 256 entries (the oldest entries are 
  expired in a LIFO manner) and communication will be attempted
  with an external ARP daemon, arpd, via the kerneld message
  queue.  This code is still experimental.  If you do enable
  arpd support, you should obtain a copy of arpd from
  http://www.loran.com/~layes/arpd/index.html.  If unsure,
  say N.  

TCP/IP networking
CONFIG_INET
  These are the protocols used on the Internet and on most local
  Ethernets. The safest is to say Y here (which will enlarge your
  kernel by about 35 kB), since some programs (e.g. the X window
  system) use TCP/IP even if your machine is not connected to any
  other computer. You will get the so-called loopback device which
  allows you to ping yourself (great fun, that!). This option is also
  necessary if you want to use the full power of term (term is a
  program which gives you almost full Internet connectivity if you
  have a regular dial up shell account on some Internet connected Unix
  computer. Read the Term-HOWTO, available via ftp (user: anonymous)
  on sunsite.unc.edu:/pub/Linux/docs/HOWTO).  Short answer:
  say Y.

IP: forwarding/gatewaying
CONFIG_IP_FORWARD
  People who want to use their Linux box as the router for a local
  network (i.e. the computer responsible for distributing Internet
  traffic to and from the machines in the local network and the
  subnetworks) should say Y here (thereby enlarging their kernel by
  about 5 kB). Note that in this case, you possibly have two ethernet
  devices in your computer: one for the "outside world" and one for
  your local net. The kernel is not able to recognize both at boot
  time without help; for details read the
  Multiple-Ethernet-mini-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.  If your box is
  connected to two networks, it may still make sense to say N here,
  namely if you want to turn your box into a firewall protecting a
  local network from the internet. The Firewall-HOWTO tells you how to
  do this. If your setup is more complex, say you are connected to
  three networks and you want to act as a firewall between two of them
  and route traffic for the others, you need to say Y here and enable
  IP firewalling below. If you intend to use IP masquerading (i.e. IP
  traffic from one of the local computers and destined for an outside
  host is changed by your box so that it appears to come from you),
  you'll have to say Y here and also to IP firewalling and IP
  masquerading below. You should also say Y here if you want to
  configure your box as a SLIP (the protocol for sending internet
  traffic over telephone lines) or PPP (a better SLIP) server for
  other people to dial into and your box is connected to a local
  network at the same time. You would then most likely use proxy-ARP
  (Address Resolution Protocol), explained in the Proxy-Arp mini howto
  on sunsite in /pub/Linux/docs/HOWTO/mini. You also need to say Y
  here if you want to run mrouted in order to do multicast routing as
  used on the MBONE (a high bandwidth network on top of the internet
  which carries audio and video broadcasts) for example. In this case,
  say Y to "IP: multicasting" and "IP: multicast routing" as well. If
  unsure, say N.

IP: multicasting
CONFIG_IP_MULTICAST
  This is code for addressing several networked computers at once,
  enlarging your kernel by about 2 kB. Some versions of gated, the
  program which constantly updates a networked computer's routing
  tables, require that this option be compiled in. You also need
  multicasting if you intend to participate in the MBONE, a high
  bandwidth network on top of the internet which carries audio and
  video broadcasts. More information about the MBONE is on the WWW at
  http://www.best.com/~prince/techinfo/mbone.html (to browse the WWW,
  you need to have access to a machine on the Internet that has one of
  the programs lynx, netscape or Mosaic). Information about the
  multicast capabilities of the various network cards is contained in
  drivers/net/README.multicast. For most people, it's safe to say N.

IP: optimize as router not host
CONFIG_IP_ROUTER
  Some Linux network drivers use a technique called copy and checksum
  to optimize host performance. For a machine which is forwarding most
  packets to another host this is however a loss. This parameter turns
  off copy and checksum from devices. It may also do other changes in
  future.

IP: firewalling
CONFIG_IP_FIREWALL
  A firewall is a computer which protects a local network from the
  rest of the internet: all traffic to and from computers on the local
  net is inspected by the firewall first. If you want to configure
  your Linux box as a firewall for a local TCP/IP based network, say Y
  here. This will enlarge your kernel by about 2kB. You will need to
  read the FIREWALL-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO. Also, you will have to use
  the ipfw tool from the net-tools package, available via ftp (user:
  anonymous) from
  ftp.linux.org.uk:/pub/linux/Networking/PROGRAMS/NetTools, or
  preferably ipfwadm from ftp.xos.nl:/pub/linux/ipfwadm/. These
  programs allow selective blocking of internet traffic based on type,
  origin and destination.  You need to enable IP firewalling in order
  to be able to use IP masquerading (i.e. local computers can chat
  with an outside host, but that outside host is made to think that it
  is talking to the firewall box. Makes the local network completely
  invisible). Chances are that you don't want this, so say N.

IP: accounting
CONFIG_IP_ACCT
  This keeps track of your IP network traffic and produces some
  statistics. Usually, you only want to say Y here if your box will be
  a router or a firewall for some local network, in which case you
  naturally should have said Y to IP forwarding/gatewaying resp. IP
  firewalling. The data is accessible with "cat /proc/net/ip_acct", so
  you want to say Y to the /proc filesystem below, if you say Y
  here. To specify what exactly should be recorded, you need the tool
  ipfw from the net-tools package, available via ftp (user:
  anonymous) from
  ftp.linux.org.uk:/pub/Linux/Networking/PROGRAMS/NetTools.  Also, you
  might want to have a look at the net-acct package, available via ftp
  (user: anonymous) from
  sunsite.unc.edu:/pub/Linux/system/Network/management. Most people
  say N, however.

IP: tunneling
CONFIG_NET_IPIP
  Tunneling means encapsulating data of one protocol type within
  another protocol and sending it over a channel that understands the
  encapsulating protocol. This particular tunneling driver implements
  encapsulation of IP within IP, which sounds kind of pointless, but
  can be useful if you want to make your (or some other) machine
  appear on a different network than it physically is, or to use the 
  mobile IP facilities (which effectively are doing that). Enabling this
  option will produce two modules ( = code which can be inserted in
  and removed from the running kernel whenever you want), one
  encapsulator and one decapsulator.  This is still alpha code, which
  means that it need not be completely stable. You can read details in
  drivers/net/README.tunnel. Most people can say N.
  
IP: firewall packet logging
CONFIG_IP_FIREWALL_VERBOSE
  This gives you information about what your firewall did with
  packets it received. The information is handled by the klogd demon
  which is responsible for kernel messages ("man klogd").

IP: masquerading (ALPHA)
CONFIG_IP_MASQUERADE
  If one of the computers on your local network for which your Linux
  box acts as a firewall wants to send something to the outside, your
  box can "masquerade" as that host, i.e. it forwards the traffic to
  the intended destination, but makes it look like it came from the
  firewall box itself. It works both ways: if the outside host
  answers, the firewall will silently forward the traffic to the
  corresponding local computer. This way, the computers on your local
  net are completely invisible to the outside world, even though they
  can reach the outside and can be reached. This makes it possible to
  have the computers on the local network participate on the internet
  even if they don't have officially registered IP addresses.  (This
  last problem can also be solved by connecting the Linux box to the
  Internet using SLiRP [SLiRP is a SLIP/PPP emulator that works if you
  have a regular dial up shell account on some UNIX computer; get if
  via ftp (user: anonymous) from
  sunsite.unc.edu:/pub/Linux/system/Network/serial/]).  Details on how
  to set things up are contained in the IP Masquerading FAQ, available
  via ftp (user: anonymous) from ftp.eves.com:/pub/masq/.  This is
  ALPHA code, which means that it need not be completely stable; it
  has nothing to do with the computer architecture of the same
  name. If you want this, say Y.

IP: aliasing support
CONFIG_IP_ALIAS
  Sometimes it is useful to give several addresses to a single network
  interface (= serial port or ethernet card). The most common case is
  that you want to serve different WWW documents to the outside
  according to which of your host names they used to connect to
  you. This is explained in detail on the WWW at
  http://www.thesphere.com/~dlp/TwoServers/ (to browse the WWW, you
  need to have access to a machine on the Internet that has one of the
  programs lynx, netscape or Mosaic). Another scenario would be that
  there are two logical networks living on your local ethernet and you
  want to access them both with the same ethernet card. The
  configuration of these alias addresses is done with a special name
  syntax explained in Documentation/networking/alias.txt. If you want
  this, say Y. Most people don't need it and say N.

IP: multicast routing(in progress)
CONFIG_IP_MROUTE
  This is used if you want your machine to act as a router for IP
  packets that have several destination addresses. It is needed on the
  MBONE, a high bandwidth network on top of the internet which carries
  audio and video broadcasts. In order to do that, you would most
  likely run the program mrouted. Information about the multicast
  capabilities of the various network cards is contained in
  drivers/net/README.multicast. If you haven't heard about it, you
  don't need it.

PC/TCP compatibility mode
CONFIG_INET_PCTCP
  If you have been having difficulties telneting to your Linux machine
  from a DOS system that uses (broken) PC/TCP networking software (all
  versions up to OnNet 2.0), try enabling this option.  Everyone else
  says N.

Reverse ARP
CONFIG_INET_RARP
  Since you asked: if there's a diskless machine on your local network
  that know its hardware ethernet address but doesn't know its IP
  address upon startup, it can send out a Reverse Address Resolution
  Protocol request to find out its own IP address. If you want your
  Linux box to be able to *answer* such requests, say Y here; you'd
  have to run the program rarp ("man rarp") on your box.  Superior
  solutions to the same problem are given by the protocols BOOTP and
  DHCP. If you want to compile RARP support as a module ( = code which
  can be inserted in and removed from the running kernel whenever you
  want), say M here and read Documentation/modules.txt.  If you don't
  understand a word, say N and rest in peace.

Assume subnets are local
CONFIG_INET_SNARL
  Say Y if you are on a subnetted network with all machines connected
  by Ethernet segments only, as this option optimizes network access
  for this special case. If there are other connections, e.g. SLIP
  links, between machines of your IP network, say N.  If in doubt, say
  N. The PATH mtu discovery facility will cover most cases anyway.

Disable Path MTU Discovery (normally enabled)
CONFIG_NO_PATH_MTU_DISCOVERY
  MTU (maximal transfer unit) is the size of the chunks we send out
  over the net. "Path MTU Discovery" means that, instead of always
  sending very small chunks, we start out sending big ones and if we
  then discover that some host along the way likes its chunks smaller,
  we adjust to a smaller size. This is good, so most people say
  N. However, some versions of DOS NCSA telnet (and other software)
  are broken and can only connect to your Linux machine if you say Y
  here.

Disable NAGLE algorithm (normally enabled)
CONFIG_TCP_NAGLE_OFF
  The NAGLE algorithm works by requiring an acknowledgment before
  sending small IP frames (= packets).  This keeps tiny telnet and
  rlogin packets from congesting Wide Area Networks.  Most people
  strongly recommend to say N here, thereby leaving NAGLE
  enabled. Those programs that would benefit from disabling this
  facility can do it on a per connection basis themselves.

IP: Drop source routed frames
CONFIG_IP_NOSR
  Usually, the originator of an IP frame (= packet) specifies only the
  destination, and the hosts along the way do the routing, i.e. they
  decide how to forward the frame. However, there is a feature of the
  IP protocol that allows to specify the full route for a given frame
  already at its origin. A frame with such a fully specified route is
  called "source routed". The question now is whether we should honor
  these route requests when such frames arrive, or if we should
  drop all those frames instead. Honoring can introduce security
  problems (and is not required by the IP specification), and hence it
  is recommended to say Y here unless you really know what you're
  doing.

IP: Allow large windows (not recommend if <16Mb of memory)
CONFIG_SKB_LARGE
  This option can speed up network performance. It works by increasing
  the size of socket buffers, thereby reducing overhead but increasing
  memory usage. Say N if you have less than 16Mb of RAM, otherwise Y.
  Note for machines with more that 64MB of RAM: in order for the kernel 
  to be able to use the memory above 64MB, pass the command line option
  "mem=XXXM" (where XXX is the memory size in megabytes) to your
  kernel. See the documentation of your boot loader (lilo or loadlin)
  about how to pass options to the kernel. The lilo procedure is also
  explained in the SCSI-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO.  You also need at least 512kB
  of RAM cache if you have more than 64MB of RAM.

The IPX protocol
CONFIG_IPX
  This is support for the Novell networking protocol, IPX, commonly
  used for local networks of Windows machines. You need it if you want
  to access Novell Netware file or print servers using the Linux
  Novell client ncpfs (available via ftp (user: anonymous) from
  sunsite.unc.edu:/pub/Linux/system/Filesystems/) or from within the
  Linux DOS emulator dosemu (read the DOSEMU-HOWTO, available in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO). In order to do the former,
  you'll also have to say Y to "NCP filesystem support", below. To
  turn your Linux box into a fully featured Netware file server and
  IPX router, say Y here and fetch either lwared from
  sunsite.unc.edu:/pub/Linux/system/Network/daemons/ or mars_nwe from
  ftp.gwdg.de:/pub/linux/misc/ncpfs. For more information, read the
  IPX-HOWTO in sunsite.unc.edu:/pub/Linux/docs/howto. The IPX driver
  would enlarge your kernel by about 5 kB. This driver is also
  available as a module ( = code which can be inserted in and removed
  from the running kernel whenever you want). If you want to compile
  it as a module, say M here and read Documentation/modules.txt.
  Unless you want to integrate your Linux box with a local Novell
  network, say N.

Full internal IPX network
CONFIG_IPX_INTERN
  The full internal IPX network enables you to allocate sockets on
  different virtual nodes of the internal network. This is done by
  evaluating the field sipx_node of the socket address given to the bind
  call. So applications should always initialize the node field to 0
  when binding a socket on the primary network. In this case the socket
  is assigned the default node that has been given to the kernel when
  the internal network was created.
  By enabling the full internal IPX network the cross-forwarding of
  packets targeted at 'special' sockets to sockets listening on the
  primary network is disabled. This might break existing applications,
  especially RIP/SAP daemons. A RIP/SAP daemon that works well with the
  full internal net can be found on ftp.gwdg.de:/pub/linux/misc/ncpfs.
  If you don't know what you are doing, say N.

Appletalk DDP
CONFIG_ATALK
  Appletalk is the way Apple computers speak to each other on an
  Ethernet (Apple calls it EtherTalk) network. If your linux box is
  connected to such a network and you want to join the conversation,
  say Y. You will need to use the netatalk package so that your Linux
  box can act as a print and file server for macs as well as access
  appletalk printers. Check out
  http://artoo.hitchcock.org/~flowerpt/projects/linux-netatalk/ on the
  WWW for details (to browse the WWW, you need to have access to a
  machine on the Internet that has one of the programs lynx, netscape
  or Mosaic). The NET-2-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO contains valuable information
  as well. This driver is also available as a module ( = code which
  can be inserted in and removed from the running kernel whenever you
  want). If you want to compile it as a module, say M here and read
  Documentation/modules.txt. I hear that the GNU boycott of Apple is
  over, so even politically correct people are allowed to say Y here.

Amateur Radio AX.25 Level 2
CONFIG_AX25
  This is the protocol used for computer communication over amateur
  radio. It is either used by itself for point-to-point links, or to
  carry other protocols such as tcp/ip. To use it, you need a device
  that connects your Linux box to your amateur radio. You can either
  use a low speed TNC (a Terminal Node Controller acts as a kind of
  modem connecting your computer's serial port to your radio's
  microphone input and speaker output) supporting the KISS protocol or
  the much faster Ottawa PI card (to enable support for this card,
  you'll have to answer Y to the question about ALPHA test drivers,
  below) or the Z8530 SCC cards; the latter two require an additional
  radio modem.  In order to use AX.25, you need to get a set of
  supporting software tools via ftp (user: anonymous) from
  sunacm.swan.ac.uk:/pub/misc/Linux/Radio/. A comprehensive listing of
  all the software for Linux amateur radio users as well as
  information about how to configure an AX.25 port is contained in the
  HAM-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO. You might also want to check
  out the file Documentation/networking/ax25.txt in the kernel
  source. More information about digital amateur radio in general is
  on the WWW at
  http://www.cis.ohio-state.edu/hypertext/faq/usenet/radio/ham-radio/digital-faq/faq.html
  (To browse the WWW, you need to have access to a machine on the
  Internet that has one of the programs lynx, netscape or
  Mosaic). AX.25 support is actively being developed, so it's best to
  get the very latest 1.3 kernel if you intend to use this.

Amateur Radio NET/ROM
CONFIG_NETROM
  NET/ROM is a network layer protocol on top of AX.25 useful for
  routing.  A comprehensive listing of all the software for Linux
  amateur radio users as well as information about how to configure an
  AX.25 port is contained in the HAM-HOWTO, available via ftp (user:
  anonymous) in sunsite.unc.edu:/pub/Linux/docs/HOWTO. You also might
  also want to check out the file
  Documentation/networking/ax25.txt. More information about digital
  amateur radio in general is on the WWW at
  http://www.cis.ohio-state.edu/hypertext/faq/usenet/radio/ham-radio/digital-faq/faq.html
  (To browse the WWW, you need to have access to a machine on the
  Internet that has one of the programs lynx, netscape or
  Mosaic). Amateur radio support is actively being developed, so you
  might want to get the very latest 1.3 kernel if you intend to use
  this.

AX.25 over Ethernet
CONFIG_BPQETHER
  AX.25 is the protocol used for computer communication over amateur
  radio. If you say Y here, you will be able to send and receive AX.25
  traffic over ethernet (also called "BPQ AX.25"), which could be
  useful if some other computer on your local network has a direct
  amateur radio connection.

Bridging (EXPERIMENTAL)
CONFIG_BRIDGE
  If you enable this, your Linux box will be able to act as an
  ethernet bridge, which means that the different ethernet segments it
  is connected to will appear as one ethernet to the
  participants. Several such bridges can work together to create even
  larger networks of ethernets using a cool spanning tree
  algorithm. Note that if your box acts as a bridge, it probably
  contains several ethernet devices, but the kernel is not able to
  recognize more than one at boot time without help; for details read
  the Multiple-Ethernet-mini-HOWTO, available via ftp (user:
  anonymous) in sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini. The
  Bridging code is still in test. If unsure, say N.
  The bridge configuration tools are available via ftp from shadow.cabi.net.

Kernel/User network link driver(ALPHA)
CONFIG_NETLINK
  This driver allows for two-way communication between certain parts
  of the kernel or modules and user processes; the user processes are
  able to read from and write to character special files in the /dev
  directory having major mode 36. So far, the kernel uses it to
  publish some network related information if you enable "Routing
  messages", below. Say Y if you want to experiment with it; this is
  ALPHA code, which means that it need not be completely stable; it
  has nothing to do with the computer architecture of the same name.

Routing messages
CONFIG_RTNETLINK
  If you enable this and create a character special file /dev/route
  with major number 36 and minor number 0 using mknod ("man mknod"),
  you can read some network related routing information from that
  file. Everything you write to that file will be discarded.

SCSI support?
CONFIG_SCSI
  If you want to use a SCSI harddisk, SCSI tapedrive, SCSI CDROM or
  any other SCSI device under Linux, say Y and make sure that you know
  the name of your SCSI host adaptor (the card inside your computer
  that "speaks" the SCSI protocol), because you will be asked for
  it. You also need to say Y here if you want support for the parallel
  port version of the 100MB IOMEGA ZIP drive. Please read the
  SCSI-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO.  This driver is also
  available as a module ( = code which can be inserted in and removed
  from the running kernel whenever you want). If you want to compile
  it as a module, say M here and read Documentation/modules.txt and
  Documentation/scsi.txt.

SCSI disk support
CONFIG_BLK_DEV_SD
  If you want to use a SCSI harddisk or the SCSI or parallel port
  version of the IOMEGA ZIP drive under Linux, say Y and read the
  SCSI-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO. This is NOT for SCSI
  CDROMs. This driver is also available as a module ( = code which can
  be inserted in and removed from the running kernel whenever you
  want). If you want to compile it as a module, say M here and read
  Documentation/modules.txt and Documentation/scsi.txt.
  
SCSI tape support
CONFIG_CHR_DEV_ST
  If you want to use a SCSI tapedrive under Linux, say Y and read the
  SCSI-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO and drivers/scsi/README.st in
  the kernel source. This is NOT for SCSI CDROMs. This driver is also
  available as a module ( = code which can be inserted in and removed
  from the running kernel whenever you want). If you want to compile
  it as a module, say M here and read Documentation/modules.txt and
  Documentation/scsi.txt .

SCSI CDROM support
CONFIG_BLK_DEV_SR
  If you want to use a SCSI CDROM under Linux, say Y and read the
  SCSI-HOWTO and the CDROM-HOWTO from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO. Also make sure to enable the
  ISO9660 filesystem later. This driver is also available as a module
  ( = code which can be inserted in and removed from the running
  kernel whenever you want). If you want to compile it as a module,
  say M here and read Documentation/modules.txt and
  Documentation/scsi.txt .

SCSI generic support
CONFIG_CHR_DEV_SG
  If you want to use SCSI scanners, synthesizers or CD-writers or just
  about anything having "SCSI" in its name other than disks, CDROMs or
  tapes, say Y here. Those won't be supported by the kernel directly,
  so you need some additional software which knows how to talk to
  these things using the SCSI protocol. Chances are that you'll have
  to write that software yourself, so have a look at the SCSI-HOWTO
  and at the SCSI-Programming-HOWTO, both available via ftp (user:
  anonymous) in sunsite.unc.edu:/pub/Linux/docs/HOWTO. If you want to
  compile this as a module ( = code which can be inserted in and
  removed from the running kernel whenever you want), say M here and
  read Documentation/modules.txt and Documentation/scsi.txt.

Probe all LUNs on each SCSI device
CONFIG_SCSI_MULTI_LUN
  If you have a SCSI device that supports more than one LUN (Logical
  Unit Number), e.g. a CD jukebox, you should say Y here so that all
  will be found by the SCSI driver. An SCSI device with multiple LUNs
  acts logically like multiple SCSI devices. The vast majority of SCSI
  devices have only one LUN, and so most people can say N here and
  should in fact do so, because it is safer.

Verbose SCSI error reporting (kernel size +=12K)
CONFIG_SCSI_CONSTANTS
  The error messages regarding your SCSI hardware will be easier to
  understand if you enable this; it will enlarge your kernel by about
  12KB. If in doubt, say Y.

AdvanSys SCSI support
CONFIG_SCSI_ADVANSYS
  This is a driver for all SCSI host adaptors manufactured by
  AdvanSys. It is documented in the kernel source in
  drivers/scsi/advansys.c. This driver is also available as a module (
  = code which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt.

Adaptec AHA152X support
CONFIG_SCSI_AHA152X
  This is support for a SCSI host adaptor. It is explained in section
  3.3 of the SCSI-HOWTO, available via ftp (user: anonymous) at
  sunsite.unc.edu:/pub/Linux/docs/HOWTO. If it doesn't work out of the
  box, you may have to change some settings in drivers/scsi/aha152x.h.
  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you
  want). If you want to compile it as a module, say M here and read
  Documentation/modules.txt.

Adaptec AHA1542 support
CONFIG_SCSI_AHA1542
  This is support for a SCSI host adaptor. It is explained in section
  3.4 of the SCSI-HOWTO, available via ftp (user: anonymous) at
  sunsite.unc.edu:/pub/Linux/docs/HOWTO.  Note that Trantor was
  recently purchased by Adaptec, and some former Trantor products are
  being sold under the Adaptec name. If it doesn't work out of
  the box, you may have to change some settings in
  drivers/scsi/aha1542.h.  If you want to compile this as a module ( =
  code which can be inserted in and removed from the running kernel
  whenever you want), say M here and read Documentation/modules.txt.
 
Adaptec AHA1740 support
CONFIG_SCSI_AHA1740
  This is support for a SCSI host adaptor. It is explained in section
  3.5 of the SCSI-HOWTO, available via ftp (user: anonymous) at
  sunsite.unc.edu:/pub/Linux/docs/HOWTO.  If it doesn't work out of
  the box, you may have to change some settings in
  drivers/scsi/aha1740.h. This driver is also available as a module (
  = code which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt.

Adaptec AHA274X/284X/294X support
CONFIG_SCSI_AIC7XXX
  Information about this SCSI host adaptor is contained in
  drivers/scsi/README.aic7xxx and in the SCSI-HOWTO, available via ftp
  (user: anonymous) at sunsite.unc.edu:/pub/Linux/docs/HOWTO. If it
  doesn't work out of the box, you may have to change some settings in
  drivers/scsi/aic7xxx.h.  If you want to compile this as a module ( =
  code which can be inserted in and removed from the running kernel
  whenever you want), say M here and read Documentation/modules.txt.

BusLogic SCSI support
CONFIG_SCSI_BUSLOGIC
  This is support for BusLogic MultiMaster SCSI Host Adaptors.
  Consult the SCSI-HOWTO, available via anonymous ftp from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO and the file
  drivers/scsi/README.BusLogic for more information. BusLogic
  FlashPoint SCSI Host Adapters are not supported by this driver, but
  BusLogic has initiated an upgrade program which allows you to get a
  better adaptor for few $$. Read about it in
  drivers/scsi/README.FlashPoint.  If this driver does not work
  correctly without modification, please contact the author.  You can
  build this driver also as a module ( = code which can be inserted in
  and removed from the running kernel whenever you want), but only a
  single instance may be loaded. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

DTC3180/3280 SCSI support
CONFIG_SCSI_DTC3280
  This is support for DTC 3180/3280 SCSI Host Adaptors.  Please read
  the SCSI-HOWTO, available via ftp (user: anonymous) at
  sunsite.unc.edu:/pub/Linux/docs/HOWTO and the file
  drivers/scsi/README.dtc3x80.  This driver is also available as a
  module (= code which can be inserted in and removed from the running
  kernel whenever you want). If you want to compile it as a module,
  say M here and read Documentation/modules.txt.

EATA-DMA (DPT, NEC, AT&T, SNI, AST, Olivetti, Alphatronix) support
CONFIG_SCSI_EATA_DMA
  This is support for the EATA-DMA protocol compliant SCSI Host Adaptors
  like the SmartCache III/IV, SmartRAID controller families and the DPT 
  PM2011B and PM2012B controllers.  
  Please read the SCSI-HOWTO, available via ftp (user: anonymous) at
  sunsite.unc.edu:/pub/Linux/docs/HOWTO. 
  This driver is also available as a module (= code which can be inserted 
  in and removed from the running kernel whenever you want). If you want 
  to compile it as a module, say M here and read Documentation/modules.txt.

EATA-PIO (old DPT PM2001, PM2012A) support
CONFIG_SCSI_EATA_PIO
  This driver supports all EATA-PIO protocol compliant SCSI Host Adaptors
  like the DPT PM2001 and the PM2012A. EATA-DMA compliant HBAs can also use 
  this driver but are discouraged from doing so, since this driver only 
  supports harddisks and lacks numerous features.
  You might want to have a look at the SCSI-HOWTO, available via ftp 
  (user: anonymous) at sunsite.unc.edu:/pub/Linux/docs/HOWTO.  
  If you want to compile this as a module ( = code which can be inserted 
  in and removed from the running kernel whenever you want), say M here 
  and read Documentation/modules.txt.

UltraStor 14F/34F support
CONFIG_SCSI_U14_34F
  This is support for the UltraStor 14F, 24F and 34F SCSI-2 host
  adaptor family. The source at drivers/scsi/u14-34f.c contains some
  information about this hardware. If the driver doesn't work out of
  the box, you may have to change some settings in
  drivers/scsi/u14-34f.h. Read the SCSI-HOWTO, available via ftp
  (user: anonymous) at sunsite.unc.edu:/pub/Linux/docs/HOWTO. Note
  that there is also another driver for the same hardware: "UltraStor
  SCSI support", below. You should only enable one of them. This
  driver is also available as a module ( = code which can be inserted
  in and removed from the running kernel whenever you want). If you
  want to compile it as a module, say M here and read
  Documentation/modules.txt.

Future Domain 16xx SCSI support
CONFIG_SCSI_FUTURE_DOMAIN
  This is support for Future Domain's 16-bit SCSI host adaptors
  (TMC-1660/1680, TMC-1650/1670, TMC-3260, TMC-1610M/MER/MEX) and other
  adaptors based on the Future Domain chipsets (Quantum ISA-200S,
  ISA-250MG; Adaptec AHA-2920; and at least one IBM board).  It is
  explained in section 3.7 of the SCSI-HOWTO, available via ftp (user:
  anonymous) at sunsite.unc.edu:/pub/Linux/docs/HOWTO.  This driver is
  also available as a module ( = code which can be inserted in and
  removed from the running kernel whenever you want). If you want to
  compile it as a module, say M here and read Documentation/modules.txt.

Generic NCR5380/53c400 SCSI support
CONFIG_SCSI_GENERIC_NCR5380
  This is the generic NCR family of SCSI controllers, not to be
  confused with the NCR 53c7 or 8xx controllers. It is explained in
  section 3.8 of the SCSI-HOWTO, available via ftp (user: anonymous)
  at sunsite.unc.edu:/pub/Linux/docs/HOWTO.  If it doesn't work out of
  the box, you may have to change some settings in
  drivers/scsi/g_NCR5380.h. This driver is also available as a module
  ( = code which can be inserted in and removed from the running
  kernel whenever you want). If you want to compile it as a module,
  say M here and read Documentation/modules.txt.
 
Enable NCR53c400 extensions
CONFIG_SCSI_GENERIC_NCR53C400
  This enables certain optimizations for the NCR53c400 scsi cards. You
  might as well try it out. Note that this driver will only probe for
  the Trantor T130B in its default configuration; you might have to
  pass a command line option to the kernel at boot time if it doesn't
  detect your card. See the file drivers/scsi/README.g_NCR5380 for
  details. If you want to compile it as a module, say M here and read
  Documentation/modules.txt.

NCR5380/53c400 mapping method (use Port for T130B)
CONFIG_SCSI_G_NCR5380_PORT
  The NCR5380 and NCR53c400 SCSI controllers come in two varieties:
  port or memory mapped. You should know what you have. The most
  common card, Trantor T130B, uses port mapped mode.

NCR53c7,8xx SCSI support
CONFIG_SCSI_NCR53C7xx
  This is the 53c7 and 8xx NCR family of SCSI controllers, not to be
  confused with the NCR 5380 controllers. It is explained in section
  3.8 of the SCSI-HOWTO, available via ftp (user: anonymous) at
  sunsite.unc.edu:/pub/Linux/docs/HOWTO. If it doesn't work out of the
  box, you may have to change some settings in
  drivers/scsi/53c7,8xx.h. This driver is also available as a module (
  = code which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt.

always negotiate synchronous transfers
CONFIG_SCSI_NCR53C7xx_sync
  In general, this is good; however, it is a bit dangerous since there
  are some broken SCSI devices out there. Take your chances. Safe bet
  is N.

allow FAST-SCSI [10MHz]
CONFIG_SCSI_NCR53C7xx_FAST
  This will enable 10MHz FAST-SCSI transfers with your host
  adaptor. Some systems have problems with that speed, so it's safest
  to say N here.
 
allow DISCONNECT
CONFIG_SCSI_NCR53C7xx_DISCONNECT
###
### Dunno
###

Always IN2000 SCSI support
CONFIG_SCSI_IN2000
  This is support for an ISA bus SCSI host adaptor. You'll find
  more information in drivers/scsi/in2000.readme. If it doesn't
  work out of the box, you may have to change the jumpers for IRQ
  or address selection. If you want to compile this as a module 
  ( = code which can be inserted in and removed from the running
  kernel whenever you want), say M here and read 
  Documentation/modules.txt.

PAS16 SCSI support
CONFIG_SCSI_PAS16
  This is support for a SCSI host adaptor. It is explained in section
  3.10 of the SCSI-HOWTO, available via ftp (user: anonymous) at
  sunsite.unc.edu:/pub/Linux/docs/HOWTO. If it doesn't work out of the
  box, you may have to change some settings in drivers/scsi/pas16.h.
 
QLOGIC SCSI support
CONFIG_SCSI_QLOGIC
  Information about this SCSI driver is contained in
  drivers/scsi/README.qlogic. You should also read the SCSI-HOWTO,
  available via ftp (user: anonymous) at
  sunsite.unc.edu:/pub/Linux/docs/HOWTO. This driver is also available
  as a module ( = code which can be inserted in and removed from the
  running kernel whenever you want). If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

Seagate ST-02 and Future Domain TMC-8xx SCSI support
CONFIG_SCSI_SEAGATE
  These are 8-bit SCSI controllers; the ST-01 is also supported by this
  driver.  It is explained in section 3.9 of the SCSI-HOWTO, available
  via ftp (user: anonymous) at
  sunsite.unc.edu:/pub/Linux/docs/HOWTO. If it doesn't work out of the
  box, you may have to change some settings in drivers/scsi/seagate.h.
  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you
  want). If you want to compile it as a module, say M here and read
  Documentation/modules.txt.

Trantor T128/T128F/T228 SCSI support
CONFIG_SCSI_T128
  This is support for a SCSI host adaptor. It is explained in section
  3.11 of the SCSI-HOWTO, available via ftp (user: anonymous) at
  sunsite.unc.edu:/pub/Linux/docs/HOWTO.  If it doesn't work out of
  the box, you may have to change some settings in
  drivers/scsi/t128.h. Note that Trantor was recently purchased by
  Adaptec, and some former Trantor products are being sold under the
  Adaptec name.

UltraStor SCSI support
CONFIG_SCSI_ULTRASTOR
  This is support for the UltraStor 14F, 24F and 34F SCSI-2 host
  adaptor family. This driver is explained in section 3.12 of the
  SCSI-HOWTO, available via ftp (user: anonymous) at
  sunsite.unc.edu:/pub/Linux/docs/HOWTO. If it doesn't work out of the
  box, you may have to change some settings in
  drivers/scsi/ultrastor.h. If you want to compile this as a module (
  = code which can be inserted in and removed from the running kernel
  whenever you want), say M here and read Documentation/modules.txt.
  Note that there is also another driver for the same hardware:
  "UltraStor 14F/34F support", above. You should only enable one of
  them.
 
7000FASST SCSI support
CONFIG_SCSI_7000FASST
  This driver supports the Western Digital 7000 SCSI host adaptor.
  Some information is in the source: drivers/scsi/wd7000.c.  This
  driver is also available as a module ( = code which can be inserted
  in and removed from the running kernel whenever you want). If you
  want to compile it as a module, say M here and read
  Documentation/modules.txt.

EATA ISA/EISA (DPT PM2011/021/012/022/122/322) support
CONFIG_SCSI_EATA
  This driver supports all the DPT SCSI host adapters, such as
  PM2011B/9X, PM2021A/9X, PM2012A, PM1012B, PM2022A/9X, PM2122A/9X and
  PM2322A/9X. Note that the PM2001 is not supported by this
  driver. You want to read the start of drivers/scsi/eata.c and the
  SCSI-HOWTO, available via ftp (user: anonymous) at
  sunsite.unc.edu:/pub/Linux/docs/HOWTO.  If you want to compile this
  as a module ( = code which can be inserted in and removed from the
  running kernel whenever you want), say M here and read
  Documentation/modules.txt.

NCR53c406a SCSI support
CONFIG_SCSI_NCR53C406A
  This is support for the NCR53c406a SCSI host adapter. For user
  configurable parameters, check out drivers/scsi/NCR53c406.c in the
  kernel source. Also read the SCSI-HOWTO, available via ftp (user:
  anonymous) at sunsite.unc.edu:/pub/Linux/docs/HOWTO.  If you want to
  compile this driver as a module ( = code which can be inserted in
  and removed from the running kernel whenever you want), say M here
  and read Documentation/modules.txt.

AM53/79C974 PCI SCSI support
CONFIG_SCSI_AM53C974
  This is support for the AM53/79C974 SCSI host adapters. Please read
  drivers/scsi/README.AM53C974 for details. Also, the SCSI-HOWTO,
  available via ftp (user: anonymous) at
  sunsite.unc.edu:/pub/Linux/docs/HOWTO, is for you.

IOMEGA Parallel Port ZIP drive SCSI support
CONFIG_SCSI_PPA
  This driver supports the parallel port version of IOMEGA's ZIP drive
  (a 100Mb removable media device).  For more information about this
  driver and how to use it you should read the file
  drivers/scsi/README.ppa.  You should also read the SCSI-HOWTO, which
  is available via anonymous ftp from sunsite.unc.edu in the directory
  /pub/Linux/docs/HOWTO.  This driver is also available as a module
  which can be inserted in and removed from the running kernel
  whenever you want. If you want to use any two of a parallel port ZIP
  drive, a parallel printer or PLIP on the same parallel port, you
  should compile the drivers as modules and only insert them as
  needed. To compile this driver as a module, say M here and read
  Documentation/modules.txt. Note that you can say N here if you have
  the SCSI version of the ZIP drive: it will be supported
  automatically if you enabled the generic "SCSI disk support", above.

Network device support?
CONFIG_NETDEVICES
  You can say N here in case you don't intend to connect to any other
  computer at all or all your connections will be either via UUCP
  (UUCP is a protocol to forward mail and news between unix hosts over
  telephone lines; read the UUCP-HOWTO, available via ftp (user:
  anonymous) in sunsite.unc.edu:/pub/Linux/docs/HOWTO) or dialing up a
  shell account or a BBS, even using term (term is a program which
  gives you almost full Internet connectivity if you have a regular
  dial up shell account on some Internet connected Unix computer. Read
  the Term-HOWTO).  You'll have to say Y if your computer contains a
  network card that you want to use under linux (make sure you know
  its name because you will be asked for it and read the
  Ethernet-HOWTO; also, if you plan to use more than one network card
  under linux, read the Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini) or if you want to use
  SLIP (Serial Line Internet Protocol is the protocol used to send
  Internet traffic over telephone lines or nullmodem cables) or CSLIP
  (compressed SLIP) or PPP (better and newer variant of SLIP) or PLIP
  (Parallel Line Internet Protocol is mainly used to create a mini
  network by connecting the parallel ports of two local machines) or
  AX.25/KISS (protocol for sending internet traffic over radio links).
  Make sure to read the NET-2-HOWTO.  Eventually, you will have to
  read Olaf Kirch's excellent book "Network Administrator's Guide", to
  be found in sunsite.unc.edu:/pub/Linux/docs/LDP.  If unsure, say Y.

Dummy net driver support
CONFIG_DUMMY
  This is essentially a loopback device (i.e. traffic you send to this
  device is immediately returned back to you) with a configurable IP
  address different from the usual 127.0.0.1. It is most commonly used
  in order to make your currently inactive SLIP address seem like a
  real address for local programs. If you use SLIP or PPP, you might
  want to enable it. Read about it in the Network Administrator's
  Guide, available via ftp (user: anonymous) from
  sunsite.unc.edu:/pub/Linux/docs/LDP. Since this thing comes often
  handy, the default is Y. It won't enlarge your kernel either. What a
  deal.  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. If you want to use
  more than one dummy device at a time, you need to compile it as a
  module. 
  
SLIP (serial line) support
CONFIG_SLIP
  Say Y if you intend to use SLIP or CSLIP (compressed SLIP) to
  connect to your Internet service provider or to connect to some
  other local Unix box or if you want to configure your Linux box as a
  Slip/CSlip server for other people to dial in.  SLIP (Serial Line
  Internet Protocol) is the protocol used to send Internet traffic
  over telephone lines or serial cables (also known as
  nullmodems). Normally, your access provider has to support SLIP in
  order for you to be able to use it, but there is now a SLIP emulator
  called SLiRP around (available via ftp (user: anonymous) from
  sunsite.unc.edu:/pub/Linux/system/Network/serial/) which allows you
  to use SLIP over a regular dial up shell connection. If you plan to
  use SLiRP, make sure to say Y to CSLIP, below. The NET-2-HOWTO,
  available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO, explains how to configure
  SLIP. Note that you don't need this option if you just want to run
  term (term is a program which gives you almost full Internet
  connectivity if you have a regular dial up shell account on some
  Internet connected Unix computer. Read the Term-HOWTO). SLIP support
  will enlarge your kernel by about 4kB. If unsure, say N.  If you
  want to compile this as a module ( = code which can be inserted in
  and removed from the running kernel whenever you want), say M here
  and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.
  
CSLIP compressed headers
CONFIG_SLIP_COMPRESSED
  This protocol is faster than SLIP because it uses compression on the
  TCP/IP headers (not on the data itself), but it has to be supported
  on both ends. Ask your access provider if you are not sure and say
  Y, just in case. You will still be able to use plain SLIP. If you
  plan to use SLiRP, the SLIP emulator (available via ftp (user:
  anonymous) from sunsite.unc.edu:/pub/Linux/system/Network/serial/)
  which allows you to use SLIP over a regular dial up shell
  connection, you definitely want to say Y here. The NET-2-HOWTO,
  available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO, explains how to configure
  CSLIP. This won't enlarge your kernel.

Keepalive and linefill
CONFIG_SLIP_SMART
  Adds additional capabilities to the SLIP driver to support the
  RELCOM line fill and keepalive monitoring. Ideal on poor quality
  analogue lines.

Radio network interfaces
CONFIG_NET_RADIO
  Radio based interfaces for Linux. Both amateur radio (AX.25) and other
  systems. In addition shadow.cabi.net carries user mode drivers for the
  Scarab devices. These need no kernel support.

PPP (point-to-point) support
CONFIG_PPP
  PPP (Point to Point Protocol) is a newer and better SLIP. It serves
  the same purpose: sending Internet traffic over telephone (and other
  serial) lines.  Ask your access provider if they support it, because
  otherwise you can't use it (not quite true any more: the free
  program SLiRP can emulate a PPP line if you just have a regular dial
  up shell account on some UNIX computer; get it via ftp (user:
  anonymous) from sunsite.unc.edu:/pub/Linux/system/Network/serial/).
  To use PPP, you need an additional program called pppd as described
  in Documentation/networking/ppp.txt and in the PPP-HOWTO, available
  from sunsite.unc.edu:/pub/Linux/docs/HOWTO. Note that you don't need
  this option if you just want to run term (term is a program which
  gives you almost full Internet connectivity if you have a regular
  dial up shell account on some Internet connected UNIX computer. Read
  the Term-HOWTO). The PPP option enlarges your kernel by about
  16kB. This driver is also available as a module ( = code which can
  be inserted in and removed from the running kernel whenever you
  want). If you said Y to "Version information on all symbols" above,
  then you cannot compile the PPP driver into the kernel; you can only
  compile it as a module. If you want to compile it as a module, say M
  here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. Note that, no matter what
  you do, the BSD compression code (used to compress the IP packets
  sent over the serial line; has to be supported at the other end as
  well) can only be compiled as a module; it is called bsd_comp.o and
  will show up in the directory modules once you have said "make
  modules". If unsure, say N.

16 channels instead of 4 
CONFIG_PPP_LOTS
  Saying Y here will allow you to have up to 16 PPP connections
  running in parallel. This is mainly useful if you intend your linux
  box to act as a dial-in PPP server. Most people can say N.

STRIP (Starmode Radio IP) support
CONFIG_STRIP
  Say Y if you have a Metricom radio and intend to use Starmode Radio
  IP.  STRIP is a radio protocol developed for the MosquitoNet project
  (http://mosquitonet.stanford.edu/) to send Internet traffic using
  Metricom radios.  Metricom radios are small, battery powered,
  100kbit/sec packet radio transceivers, about the size and weight of
  a cellular telephone.  (You may also have heard them called
  "Metricom modems" but we avoid the term "modem" because it misleads
  many people into thinking that you can plug a Metricom modem into a
  phone line and use it as a modem.)  You can use STRIP on any Linux
  machine with a serial port, although it is obviously most useful for
  people with laptop computers. If you think you might get a Metricom
  radio in the future, there is no harm in saying yes to STRIP now,
  except that it makes the kernel a bit bigger.

WIC (Radio IP bridge)
CONFIG_WIC
  Don't know what this is; has something to do with the parallel
  port. Say N and that's that. But if you want to compile it as a
  module ( = code which can be inserted in and removed from the
  running kernel whenever you want), say M here and read
  Documentation/modules.txt. :-)

Z8530 SCC kiss emulation driver for AX.2
CONFIG_SCC
  These cards are used to connect your Linux box to an amateur radio
  and communicate with other computers.  If you want to use this, read
  Documentation/networking/z8530drv.txt and the HAM-HOWTO, available
  via ftp (user: anonymous) at sunsite.unc.edu:/pub/Linux/docs/HOWTO.
  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt.

PLIP (parallel port) support
CONFIG_PLIP
  PLIP (Parallel Line Internet Protocol) is used to create a mini
  network consisting of two (or, rarely, more) local machines. The
  parallel ports (the connectors at the computers with 25 holes) are
  connected using "null printer" or "Turbo Laplink" cables which can
  transmit 4 bits at a time or using special PLIP cables, to be used
  on bidirectional parallel ports only, which can transmit 8 bits at a
  time (you can find the wiring of these cables in
  drivers/net/README?.plip). The cables can be up to 15m long. This
  works also if one of the machines runs DOS and has some PLIP
  software installed, e.g. the Crynwr PLIP packet driver
  (http://sunsite.cnam.fr/packages/Telnet/PC/msdos/misc/pktdrvr.txt)
  and NCSA's telnet.  If you want to use this, say Y and read the PLIP
  mini-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini as well as the
  NET-2-HOWTO in sunsite.unc.edu:/pub/Linux/docs/HOWTO. Note that the
  PLIP protocol was changed and this PLIP driver won't work together
  with the PLIP support in Linux versions 1.0.x.  This option enlarges
  your kernel by about 8kB. If you want to compile this as a module (
  = code which can be inserted in and removed from the running kernel
  whenever you want), say M here and read Documentation/modules.txt as
  well as Documentation/networking/net-modules.txt. If you want to use
  both a parallel printer and PLIP, there are two cases: 1) If the
  printer and the PLIP cable are to use the same parallel port
  (presumably because you have just one), it is best to compile both
  drivers as modules and load and unload them as needed. 2) To use
  different parallel ports for the printer and the PLIP cable, you can
  say Y to the printer driver, specify the base address of the
  parallel port(s) to use for the printer(s) with the "lp" kernel
  command line option. (See the documentation of your boot loader
  (lilo or loadlin) about how to pass options to the kernel at boot
  time. The lilo procedure is also explained in the SCSI-HOWTO,
  available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO.) The standard base addresses
  as well as the syntax of the "lp" command line option can be found
  in drivers/char/lp.c. You can then say Y to this PLIP driver or,
  preferably, M in which case Documentation/networking/net-modules.txt
  tells you how to specify the port and IRQ to be used by PLIP at
  module load time.
  It's safe to say N here.

EQL (serial line load balancing) support
CONFIG_EQUALIZER
  If you have two serial connections to some other computer (this
  usually requires two modems and two telephone lines) and you use
  SLIP (= the protocol for sending internet traffic over telephone
  lines) or PPP (= a better SLIP) on them, you can make them behave
  like one double speed connection using this driver. Naturally, this
  has to be supported at the other end as well, either with a similar
  EQL Linux driver or with a Livingston Portmaster 2e. Say Y if you
  want this and read drivers/net/README.eql. This driver is also
  available as a module ( = code which can be inserted in and removed
  from the running kernel whenever you want). If you want to compile
  it as a module, say M here and read Documentation/modules.txt.

Frame Relay (DLCI) support
CONFIG_DLCI
  This is support for the frame relay protocol; frame relay is a fast
  low-cost way to connect to a remote internet access provider or to
  form a private wide area network. The one physical line from your
  box to the local "switch" (i.e. the entry point to the frame relay
  network) can carry several logical point-to-point connections to
  other computers connected to the frame relay network. For a general
  explanation of the protocol, check out
  http://frame-relay.indiana.edu/4000/4000index.html on the WWW. (To
  browse the WWW, you need to have access to a machine on the Internet
  that has one of the programs lynx, netscape or Mosaic.) To use frame
  relay, you need supporting hardware (FRAD) and certain programs from
  the net-tools package as explained in
  Documentation/networking/framerelay.txt. This driver is also
  available as a module ( = code which can be inserted in and removed
  from the running kernel whenever you want). If you want to compile
  it as a module, say M here and read Documentation/modules.txt.

Max open DLCI
CONFIG_DLCI_COUNT 
  This is the maximal number of logical point-to-point frame relay
  connections (the identifiers of which are called DCLIs) that
  the driver can handle. The default is probably fine.

Max DLCI per device
CONFIG_DLCI_MAX
  You can specify here how many logical point-to-point frame relay
  connections (the identifiers of which are called DCLIs) should be
  handled by each of your hardware frame relay access devices. Go with
  the default.

Sangoma S502A FRAD support
CONFIG_SDLA
  Say Y here if you need a driver for the Sangoma S502A, S502E and
  S508 Frame Relay Access Devices. These are multi-protocol
  cards, but only frame relay is supported by the driver at this
  time. Please read Documentation/framerelay.txt. This driver is also
  available as a module ( = code which can be inserted in and removed
  from the running kernel whenever you want). If you want to compile
  it as a module, say M here and read Documentation/modules.txt.

Sun LANCE Ethernet support
CONFIG_SUN_LANCE
  This is support for lance ethernet cards on Sun workstations such as
  the Sparcstation IPC (any Sparc with a network interface 'le0' under
  SunOS basically).

Sun Intel Ethernet support
CONFIG_SUN_INTEL
  This is support for the intel ethernet cards on some Sun workstations
  (all those with a network interface 'ie0' under SunOS).

Western Digital/SMC cards
CONFIG_NET_VENDOR_SMC
  If you have a network (ethernet) card belonging to this class, say Y
  and read the Ethernet-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO. If you plan to use more than
  one network card under linux, read the Multiple-Ethernet-mini-HOWTO,
  available from sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini. Note that
  the answer to this question doesn't directly affect the kernel:
  saying N will just cause this configure script to skip all the
  questions about Western Digital cards. If you say Y, you will be
  asked for your specific card in the following questions. If you plan
  to use more than one network card under linux, read the
  Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.

WD80*3 support
CONFIG_WD80x3
  If you have a network (ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO. This driver is also available
  as a module ( = code which can be inserted in and removed from the
  running kernel whenever you want). If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. If you plan to use more
  than one network card under linux, read the
  Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.

SMC Ultra support
CONFIG_ULTRA
  If you have a network (ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO.  This driver is also
  available as a module ( = code which can be inserted in and removed
  from the running kernel whenever you want). If you want to compile
  it as a module, say M here and read Documentation/modules.txt as
  well as Documentation/networking/net-modules.txt. If you plan to use
  more than one network card under linux, read the
  Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.

SMC 9194 Support
CONFIG_SMC9194
  This is support for the SMC9xxx based Ethernet cards.  Choose this
  option if you have a DELL laptop with the docking station, or
  another SMC9192/9194 based chipset.  Say Y if you want it compiled
  into the kernel, and read the the file drivers/net/README.smc9 and
  the Ethernet-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO.  This driver is also
  available as a module ( = code which can be inserted in and removed
  from the running kernel whenever you want). If you want to compile
  it as a module, say M here and read Documentation/modules.txt as
  well as Documentation/networking/net-modules.txt. If you plan to use
  more than one network card under linux, read the
  Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.

AMD LANCE and PCnet (AT1500 and NE2100) support
CONFIG_LANCE
  If you have a network (ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO. If you plan to use more than
  one network card under linux, read the Multiple-Ethernet-mini-HOWTO,
  available from sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.

3COM cards
CONFIG_NET_VENDOR_3COM
  If you have a network (ethernet) card belonging to this class, say Y
  and read the Ethernet-HOWTO, available via ftp (user: anonymous)
  in sunsite.unc.edu:/pub/Linux/docs/HOWTO. Note that the answer to
  this question doesn't directly affect the kernel: saying N will just
  cause this configure script to skip all the questions about 3COM
  cards. If you say Y, you will be asked for your specific card in the
  following questions. If you plan to use more than one network card
  under linux, read the Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini. 

3c501 support
CONFIG_EL1
  If you have a network (ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO.  Also, consider buying a new
  card, since the 3c501 is buggy and obsolete and the driver is
  unsupported. This driver is also available as a module ( = code
  which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. If you plan to use more
  than one network card under linux, read the
  Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.

3c503 support
CONFIG_EL2
  If you have a network (ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO. This driver is also available
  as a module ( = code which can be inserted in and removed from the
  running kernel whenever you want). If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. If you plan to use more
  than one network card under linux, read the
  Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.

3c505 support
CONFIG_ELPLUS
  Information about this network (ethernet) card can be found in
  Documentation/networking/3c505.txt. If you have a card of this type,
  say Y and read the Ethernet-HOWTO, available via ftp (user:
  anonymous) in sunsite.unc.edu:/pub/Linux/docs/HOWTO.  If you want to
  compile this as a module ( = code which can be inserted in and
  removed from the running kernel whenever you want), say M here and
  read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. If you plan to use more
  than one network card under linux, read the
  Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.

3c507 support
CONFIG_EL16
  If you have a network (ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO. This driver is also available
  as a module ( = code which can be inserted in and removed from the
  running kernel whenever you want). If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. If you plan to use more
  than one network card under linux, read the
  Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.

3c509/3c579 support
CONFIG_EL3
  If you have a network (ethernet) card belonging to the 3Com
  EtherLinkIII series, say Y and read the Ethernet-HOWTO, available
  via ftp (user: anonymous) in sunsite.unc.edu:/pub/Linux/docs/HOWTO.
  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. If you plan to use more
  than one network card under linux, read the
  Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini. If your card is not
  working you may need to use the DOS setup disk to disable Plug &
  Play mode, and to select the default media type.

3c590 series (592/595/597) "Vortex" support
CONFIG_VORTEX
  If you have a network (ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO. More specific information is
  in Documentation/networking/vortex.txt and in the comments at the
  beginning of drivers/net/3c59x.c. If you want to compile this
  as a module ( = code which can be inserted in and removed from the
  running kernel whenever you want), say M here and read
  Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. If you plan to use more
  than one network card under linux, read the
  Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini

Other ISA cards
CONFIG_NET_ISA
  If your network (ethernet) card hasn't been mentioned yet and its
  bus system (that's the way the components of the card talk to each
  other) is ISA (as opposed to EISA, VLB or PCI), say Y. Make sure you
  know the name of your card. Read the Ethernet-HOWTO, available via
  ftp (user: anonymous) in sunsite.unc.edu:/pub/Linux/docs/HOWTO. If
  unsure, say Y.  Note that the answer to this question doesn't
  directly affect the kernel: saying N will just cause this configure
  script to skip all the remaining ISA network card questions.  If you
  say Y, you will be asked for your specific card in the following
  questions.  If you plan to use more than one network card under
  linux, read the Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.

ARCnet support
CONFIG_ARCNET
  If you have a network card of this type, say Y and check out the
  (arguably) beautiful poetry in Documentation/networking/arcnet.txt. 
  You might also want to have a look at the Ethernet-HOWTO, available
  via ftp (user: anonymous) in sunsite.unc.edu:/pub/Linux/docs/HOWTO
  (even though ARCnet is not really ethernet). This driver is also
  available as a module ( = code which can be inserted in and removed
  from the running kernel whenever you want). If you want to compile it
  as a module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. If you plan to use more
  than one network card under linux, read the
  Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.
  
Enable arc0e (ARCnet "ether-encap" packet format)
CONFIG_ARCNET_ETH
  This allows you to use "ethernet encapsulation" with your ARCnet card
  via the virtual arc0e device.  You only need arc0e if you want to
  talk to nonstandard ARCnet software, specifically, DOS/Windows-style
  "NDIS" drivers.  You do not need to enable this option to communicate
  with industry-standard RFC1201 implementations, like the arcether.com
  packet driver or most DOS/Windows ODI drivers.  RFC1201 is included
  automatically as the arc0 device.  Please read the ARCnet
  documentation in Documentation/networking/arcnet.txt for more
  information about using arc0e and arc0s.

Enable arc0s (ARCnet RFC1051 packet format)
CONFIG_ARCNET_1051
  This allows you to use RFC1051 with your ARCnet card via the virtual
  arc0s device.  You only need arc0s if you want to talk to ARCnet
  software complying with the "old" standard, specifically, the DOS
  arcnet.com packet driver, Amigas running AmiTCP, and some variants of
  NetBSD.  You do not need to enable this option to communicate with
  industry-standard RFC1201 implementations, like the arcether.com
  packet driver or most DOS/Windows ODI drivers.  RFC1201 is included
  automatically as the arc0 device.  Please read the ARCnet
  documentation in Documentation/networking/arcnet.txt for more
  information about using arc0e and arc0s.

Cabletron E21xx support
CONFIG_E2100
  If you have a network (ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO. This driver is also available
  as a module ( = code which can be inserted in and removed from the
  running kernel whenever you want). If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. If you plan to use more
  than one network card under linux, read the
  Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.

DEPCA support
CONFIG_DEPCA
  If you have a network (ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO as well as
  drivers/net/depca.c.  If you want to compile this as a module ( =
  code which can be inserted in and removed from the running kernel
  whenever you want), say M here and read Documentation/modules.txt as
  well as Documentation/networking/net-modules.txt. If you plan to use
  more than one network card under linux, read the
  Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.

EtherWorks 3 support
CONFIG_EWRK3
  This driver supports the DE203, DE204 and DE205 network (ethernet)
  cards. If this is for you, say Y and read drivers/net/README.ewrk3
  in the kernel source as well as the Ethernet-HOWTO, available via
  ftp (user: anonymous) from sunsite.unc.edu:/pub/Linux/docs/HOWTO.
  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. If you plan to use more
  than one network card under linux, read the
  Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.

SEEQ8005 support
CONFIG_SEEQ8005
  This is a driver for the SEEQ 8005 network (ethernet) card. If this
  is for you, read the Ethernet-HOWTO, available via ftp (user:
  anonymous) from sunsite.unc.edu:/pub/Linux/docs/HOWTO. If you plan
  to use more than one network card under linux, read the
  Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.

AT1700 support
CONFIG_AT1700
  If you have a network (ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO. This driver is also available
  as a module ( = code which can be inserted in and removed from the
  running kernel whenever you want). If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. If you plan to use more
  than one network card under linux, read the
  Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.

FMV-181/182 support
CONFIG_FMV18X
  If you have a Fujitsu FMV-181/182 network (ethernet) card, say Y and
  read the Ethernet-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO. This driver is also available
  as a module ( = code which can be inserted in and removed from the
  running kernel whenever you want). If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. If you plan to use more
  than one network card under linux, read the
  Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.

EtherExpressPro support
CONFIG_EEXPRESS_PRO
  If you have a network (ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO. This driver is also available
  as a module ( = code which can be inserted in and removed from the
  running kernel whenever you want). If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. If you plan to use more
  than one network card under linux, read the
  Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.

EtherExpress support
CONFIG_EEXPRESS
  If you have an EtherExpress16 network (ethernet) card, say Y and
  read the Ethernet-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO. Note that the Intel
  EtherExpress16 card used to be regarded as a very poor choice
  because the driver was very unreliable. We now have a new driver
  that should do better. If you want to compile this driver as a
  module ( = code which can be inserted in and removed from the
  running kernel whenever you want), say M here and read
  Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. If you plan to use more
  than one network card under linux, read the
  Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.

NI5210 support
CONFIG_NI52
  If you have a network (ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO. If you plan to use more than
  one network card under linux, read the Multiple-Ethernet-mini-HOWTO,
  available from sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.

NI6510 support
CONFIG_NI65
  If you have a network (ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO. If you plan to use more than
  one network card under linux, read the Multiple-Ethernet-mini-HOWTO,
  available from sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.

Ottawa PI and PI/2 support
CONFIG_PI
  This is a driver for the Ottawa Amateur Radio Club PI and PI2 cards,
  which are commonly used to send internet traffic over amateur radio. 
  More information about these cards is on the WWW at
  http://hydra.carleton.ca/info/pi2.html (To browse the WWW, you need
  to have access to a machine on the Internet that has one of the
  programs lynx, netscape or Mosaic). If you have one of these cards,
  you can say Y here and should read the HAM-HOWTO, available via ftp
  (user: anonymous) in sunsite.unc.edu:/pub/Linux/docs/HOWTO. Also,
  you should have said Y to "AX.25 support" above, because AX.25 is
  the protocol used for digital traffic over radio links.

Gracilis PackeTwin support
CONFIG_PT
  This card is similar to the PI card (mentioned above).  It is used
  mainly by amateur radio operators for packet radio.  You should have
  already said Y to "AX.25 support" as this card uses that protocol.
  More information about this driver can be found in the file
  drivers/net/README.pt.  NOTE: The card is capable of DMA and full
  duplex but neither of these have been coded in the driver as yet.

WaveLAN support
CONFIG_WAVELAN
  These are cards for wireless ethernet-like networking. Supported are
  AT&T GIS and NCR WaveLAN cards. If you want to use a card of this
  type under Linux, say Y and read the Ethernet-HOWTO, available via
  ftp (user: anonymous) in sunsite.unc.edu:/pub/Linux/docs/HOWTO. Some
  more specific information is contained in
  drivers/net/README.wavelan. This driver is also available as a
  module ( = code which can be inserted in and removed from the
  running kernel whenever you want). If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. If you plan to use more
  than one network card under linux, read the
  Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.

HP PCLAN+ (27247B and 27252A) support
CONFIG_HPLAN_PLUS
  If you have a network (ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO. This driver is also available
  as a module ( = code which can be inserted in and removed from the
  running kernel whenever you want). If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. If you plan to use more
  than one network card under linux, read the
  Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.

HP PCLAN (27245 and other 27xxx series) support
CONFIG_HPLAN
  If you have a network (ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO. This driver is also available
  as a module ( = code which can be inserted in and removed from the
  running kernel whenever you want). If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. If you plan to use more
  than one network card under linux, read the
  Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.

HP 10/100VG PCLAN (ISA, EISA, PCI) support
CONFIG_HP100
  If you have a network (ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO.  If you want to compile this
  as a module ( = code which can be inserted in and removed from the
  running kernel whenever you want), say M here and read
  Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. If you plan to use more
  than one network card under linux, read the
  Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.

NE2000/NE1000 support
CONFIG_NE2000
  If you have a network (ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO. This driver is also available
  as a module ( = code which can be inserted in and removed from the
  running kernel whenever you want). If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. If you plan to use more
  than one network card under linux, read the
  Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.

SK_G16 support
CONFIG_SK_G16
  If you have a network (ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO. If you plan to use more than
  one network card under linux, read the Multiple-Ethernet-mini-HOWTO,
  available from sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.

EISA, VLB, PCI and on board controllers
CONFIG_NET_EISA
  This is another class of network cards which attach directly to the
  bus. If you have one of those, say Y and read the Ethernet-HOWTO,
  available via ftp (user: anonymous) from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO; if you are unsure, say
  Y. Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause this configure script to skip all
  the questions about this class of network cards. If you say Y, you
  will be asked for your specific card in the following questions.  If
  you plan to use more than one network card under linux, read the
  Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.

Ansel Communications EISA 3200 support
CONFIG_AC3200
  If you have a network (ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO. This driver is also available
  as a module ( = code which can be inserted in and removed from the
  running kernel whenever you want). If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. If you plan to use more
  than one network card under linux, read the
  Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.

Apricot Xen-II on board ethernet
CONFIG_APRICOT
  If you have a network (ethernet) controller of this type, say Y and
  read the Ethernet-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO.  If you want to compile this
  as a module ( = code which can be inserted in and removed from the
  running kernel whenever you want), say M here and read
  Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. If you plan to use more
  than one network card under linux, read the
  Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.

DE425, DE434, DE435 support
CONFIG_DE4X5
  This is support for the DIGITAL series of PCI/EISA ethernet
  cards. These include the DE425, DE434, DE435, DE450 and DE500
  models. If you have a network card of this type, say Y and read
  the Ethernet-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO.  More specific information is
  contained in drivers/net/README.de4x5. This driver is also available
  as a module ( = code which can be inserted in and removed from the
  running kernel whenever you want). If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. If you plan to use more
  than one network card under linux, read the
  Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.

DECchip Tulip (dc21x4x) PCI support
CONFIG_DEC_ELCP
  This driver is developed for the SMC EtherPower series ethernet
  cards and also works with cards based on the DECchip
  21040/21041/21140 (Tulip series) chips. (If your card is NOT SMC
  EtherPower 10/100 PCI (smc9332dst), you can also try the driver from
  "DE425, DE434, DE435 support", above.) However, most people with a
  network card of this type will say Y here. Do read the
  Ethernet-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO. More specific information is
  contained in Documentation/networking/tulip.txt. This driver is also
  available as a module ( = code which can be inserted in and removed
  from the running kernel whenever you want).  If you want to compile
  it as a module, say M here and read Documentation/modules.txt as
  well as Documentation/networking/net-modules.txt.

Digi Intl. RightSwitch support
CONFIG_DGRS
  This is support for the Digi International RightSwitch series of
  PCI/EISA ethernet switch cards.  These include the SE-4 and the SE-6
  models. If you have a network card of this type, say Y and read
  the Ethernet-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO.  More specific information is
  contained in drivers/net/README.dgrs. This driver is also available
  as a module ( = code which can be inserted in and removed from the
  running kernel whenever you want). If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. If you plan to use more
  than one network card under linux, read the
  Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.

ICL EtherTeam 16i/32 support
CONFIG_ETH16I
  If you have a network (ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO. This driver is also available
  as a module ( = code which can be inserted in and removed from the
  running kernel whenever you want). If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. If you plan to use more
  than one network card under linux, read the
  Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.

Zenith Z-Note support
CONFIG_ZNET
  The Zenith Z-Note notebook computer has a built-in network
  (ethernet) card, and this is the Linux driver for it. Note that the
  IBM Thinkpad 300 is compatible with the Z-Note and is also supported
  by this driver. Read the Ethernet-HOWTO, available via ftp (user:
  anonymous) in sunsite.unc.edu:/pub/Linux/docs/HOWTO.

Pocket and portable adaptors
CONFIG_NET_POCKET
  Cute little network (ethernet) devices which attach to the parallel
  port ("pocket adaptors"), commonly used with laptops. If you have
  one of those, say Y and read the Ethernet-HOWTO, available via ftp
  (user: anonymous) from sunsite.unc.edu:/pub/Linux/docs/HOWTO. If you
  want to plug a network card into the PCMCIA slot of your laptop
  instead (PCMCIA is the standard for credit card size extension cards
  used by all modern laptops), look in
  cb-iris.stanford.edu:/pub/pcmcia and say N here.  Note that the
  answer to this question doesn't directly affect the kernel: saying N
  will just cause this configure script to skip all the questions
  about this class of network devices.  If you say Y, you will be
  asked for your specific device in the following questions.  If you
  plan to use more than one network device under linux, read the
  Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini. If you intend to use an
  adaptor attaching to the parallel port as well as a parallel
  printer, you should compile both drivers as modules (if possible).

AT-LAN-TEC/RealTek pocket adaptor support
CONFIG_ATP
  This is a network (ethernet) device which attaches to your parallel
  port. Read drivers/net/atp.c as well as the Ethernet-HOWTO,
  available via ftp (user: anonymous) from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO if you want to use this. If
  you plan to use more than one network card under linux, read the
  Multiple-Ethernet-mini-HOWTO, available from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini. If you intend to use
  this driver, you should have said N to the Parallel Printer support,
  because the two drivers don't like each other.

D-Link DE600 pocket adaptor support
CONFIG_DE600
  This is a network (ethernet) device which attaches to your parallel
  port. Read drivers/net/README.DLINK as well as the Ethernet-HOWTO,
  available via ftp (user: anonymous) from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO if you want to use this.  If
  you want to compile this as a module ( = code which can be inserted
  in and removed from the running kernel whenever you want), say M
  here and read Documentation/modules.txt. If you intend to use this
  pocket adaptor as well as a parallel printer, you should compile
  both drivers as modules. If you plan to use more than one network
  card under linux, read the Multiple-Ethernet-mini-HOWTO, available
  from sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.

D-Link DE620 pocket adaptor support
CONFIG_DE620
  This is a network (ethernet) device which attaches to your parallel
  port. Read drivers/net/README.DLINK as well as the Ethernet-HOWTO,
  available via ftp (user: anonymous) from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO if you want to use this.  If
  you want to compile this as a module ( = code which can be inserted
  in and removed from the running kernel whenever you want), say M
  here and read Documentation/modules.txt. If you intend to use this
  pocket adaptor as well as a parallel printer, you should compile
  both drivers as modules. If you plan to use more than one network
  card under linux, read the Multiple-Ethernet-mini-HOWTO, available
  from sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.
 
Token Ring driver support
CONFIG_TR
  Token Ring is IBM's way of communication on a local network; the
  rest of the world uses ethernet. If you are connected to a token
  ring network and want to use your Token Ring card under Linux, say Y.
  Most people can say N here.

IBM Tropic chipset based adaptor support
CONFIG_IBMTR
  This is support for all IBM Token Ring cards that don't use DMA. If
  you have such a beast, say Y, otherwise N. Warning: this driver will
  almost definitely fail if more than one active Token Ring card is
  present. This driver is also available as a module ( = code which
  can be inserted in and removed from the running kernel whenever you
  want). If you want to compile it as a module, say M here and read
  Documentation/modules.txt.

Support non-SCSI/IDE/ATAPI drives
CONFIG_CD_NO_IDESCSI
  If you have a CDROM drive that is neither SCSI nor IDE/ATAPI, say Y
  here, otherwise N. Read the CDROM-HOWTO, available via ftp (user:
  anonymous) from sunsite.unc.edu:/pub/Linux/docs/HOWTO. Note that the
  answer to this question doesn't directly affect the kernel: saying N
  will just cause this configure script to skip all the questions
  about these CDROM drives. If you are unsure what you have, say Y and
  find out whether you have one of the following drives.
  For each of these drivers, a file Documentation/cdrom/<driver_name>
  exists. Especially in cases where you do not know exactly which kind
  of drive you have you should read there.
  Most of these drivers use a file include/linux/<driver_name>.h where
  you can define your interface parameters and switch some internal
  goodies.
  All these CDROM drivers are also usable as a module (= code which can
  be inserted in and removed from the running kernel whenever you want).
  If you want to compile them as module, say M instead of Y and read
  Documentation/modules.txt.
  If you want to use any of these CDROM drivers, you also have to say
  Y to "ISO9660 cdrom filesystem support" below (this answer will get
  "defaulted" for you if you enable any of the Linux CDROM drivers).

Sony CDU31A/CDU33A CDROM support
CONFIG_CDU31A
  These CDROM drives have a spring-pop-out caddyless drawer, and a
  rectangular green LED centered beneath it.  NOTE: these CDROM drives
  will not be auto detected by the kernel at boot time; you have to
  provide the interface address as an option to the kernel at boot
  time as described in Documentation/cdrom/cdu31a or fill in your
  parameters into linux/drivers/cdrom/cdu31a.c. See the documentation
  of your boot loader (lilo or loadlin) about how to pass options to
  the kernel. The lilo procedure is also explained in the SCSI-HOWTO.

Standard Mitsumi [no XA/Multisession] CDROM support
CONFIG_MCD
  This is the older of the two drivers for the older Mitsumi models
  LU-005, FX-001 and FX-001D. This is not the right driver for the 
  FX-001DE and the triple or quad speed models (all these are IDE/ATAPI
  models).
  With the old LU-005 model, the whole drive chassis slides out for
  cd insertion.  The FX-xxx models use a motorized tray type mechanism.
  Note that this driver does not support XA or MultiSession CDs (PhotoCDs).
  There is a new driver (next question) which can do this. If you want
  that one, say N here.
  If the driver doesn't work out of the box, you might want to have
  a look at linux/include/linux/mcd.h.

Mitsumi [XA/MultiSession] support
CONFIG_MCDX
  Use this driver if you want to be able to read XA or MultiSession
  CDs (PhotoCDs) as well as ordinary CDs with your Mitsumi LU-005,
  FX-001 or FX-001D CDROM drive. In addition, this driver uses much less
  kernel memory than the old one, if that is a concern. This driver is
  able to support more than one drive, but each drive needs a separate
  interface card.

Matsushita/Panasonic/Creative, Longshine, TEAC CDROM support
CONFIG_SBPCD
  This driver supports most of the drives which use the Panasonic or
  SoundBlaster interface.
  The Matsushita CR-521, CR-522, CR-523, CR-562, CR-563 drives
  (sometimes labeled "Creative"), the CreativeLabs CD200, the
  Longshine LCS-7260, the "IBM External ISA CDROM" (in fact a CR-56x
  model), the TEAC CD-55A fall under this category. Some other
  "electrically compatible" drives (Vertos, Genoa, some Funai models)
  are currently not supported; for the Sanyo H94A drive currently a
  separate driver (asked later) is responsible.  Most drives have a
  uniquely shaped faceplate, with a caddyless motorized drawer, but
  without external brand markings. The older CR-52x drives have a
  caddy and manual loading/eject, but still no external markings.  The
  driver is able to do an extended auto-probing for interface
  addresses and drive types; this can help to find facts in cases you
  are not sure, but can consume some time during the boot process if
  none of the supported drives gets found.
  Once your drive got found, you should enter the reported parameters 
  into linux/include/linux/sbpcd.h and set "DISTRIBUTION 0" there.
  This driver can support up to four CDROM interface cards, and each
  card can support up to four CDROM drives; if you say Y here, you
  will be asked how many controllers you have. If compiled as a
  module, only one interface card (but with up to four drives) is
  usable.

Matsushita/Panasonic, ... second CDROM controller support
CONFIG_SBPCD2
  Say Y here only if you have two CDROM controller boards of this type
  (usually only if you have more than four drives). You should enter
  the parameters for the second, third and fourth interface card into
  linux/include/linux/sbpcd.h before compiling the new kernel.

Aztech/Orchid/Okano/Wearnes/TXC/CyDROM  CDROM support
CONFIG_AZTCD
  This is your driver if you have an Aztech CDA268-01A, Orchid
  CD-3110, Okano or Wearnes CDD110, Conrad TXC, or CyCDROM CR520 or
  CR540 CDROM drive.  This driver - just like all these CDROM drivers
  - is NOT for CDROM drives with IDE/ATAPI interface, such as Aztech
  CDA269-031SE.

Sony CDU535 CDROM support
CONFIG_CDU535
  This is the driver for the older Sony CDU-535 and CDU-531 CDROM drives.

Goldstar R420 CDROM support
CONFIG_GSCD
  If this is your CDROM drive, say Y here.
  As described in linux/Documentation/cdrom/gscd, you might have to
  change a setting in the file include/linux/gscd.h before compiling
  the kernel.

Philips/LMS CM206 CDROM support
CONFIG_CM206
  If you have a Philips/LMS CDROM drive cm206 in combination with a
  cm260 host adapter card, say Y here.

Optics Storage DOLPHIN 8000AT CDROM support
CONFIG_OPTCD
  If this is your CDROM drive, say Y here.

Sanyo CDR-H94A CDROM support
CONFIG_SJCD
  If this is your CDROM drive, say Y here. Command line option
  (or 'append=' option in /etc/lilo.conf) is:
                sjcd=<port>
  Here 'port' is the base i/o address used by the drive. It defaults
  to port=0x340.

Soft configurable cdrom interface card support
CONFIG_CDI_INIT
  If you want to include boot-time initialization of any cdrom
  interface card that is software configurable, say Y here.
  Currently only the ISP16/MAD16/Mozart cards are supported.

ISP16/MAD16/Mozart soft configurable cdrom interface support
CONFIG_ISP16_CDI
  If you want any of these cdrom interface cards based on the
  OPTi 82C928 or 82C929 chips get detected and possibly configured
  at boot time, please say Y. Boot time command line options (or
  'append=' options in /etc/lilo.conf) are:
                isp16=<port>,<irq>,<dma>,<drive_type>
  Here 'port','irq' and 'dma' are the base i/o address, irq number and
  dma line assumed to be used by the attached cdrom
  drive. 'drive_type' is the type of cdrom drive or its emulation
  mode. Valid values for drive_type include: Sanyo, Panasonic (same as
  Sanyo), Sony and Mitsumi.  Default values are: port=0x340, irq=0,
  dma=0, drive_type=Sanyo.
  The command line
                isp16=noisp16
  will skip detection and configuration after all.
  N.B. options are case sensitive. 
  Read Documentation/cdrom/isp16 for details. 

Quota support
CONFIG_QUOTA
  If you say Y here, you will be able to set per user limits for disk
  usage (also called diskquotas). Currently, it works only for the
  ext2 filesystem; you need the software available via ftp (user:
  anonymous) in
  ftp.funet.fi:/pub/Linux/PEOPLE/Linus/subsystems/quota/ in order to
  use it. Probably this is only useful for multi user systems. If
  unsure, say N.

Standard (minix) fs support
CONFIG_MINIX_FS
  Minix is a simple operating system used in many classes about
  OS's. The minix filesystem (= method to organize files on a harddisk
  partition or a floppy disk) was the original filesystem for Linux,
  has been superseded by the second extended filesystem ext2fs but is
  still used for root/boot and other floppies or ram disks since it is
  leaner. You don't want to use it on your harddisk because of certain
  built-in restrictions. This option will enlarge your kernel by about
  25 kB. Everyone should say Y or M so that they are able to read this
  common floppy format.  If you want to compile this as a module
  ( = code which can be inserted in and removed from the
  running kernel whenever you want), say M here and read
  Documentation/modules.txt. Note that the filesystem of your root
  partition cannot be compiled as a module.

Extended fs support
CONFIG_EXT_FS
  This is the old Linux filesystem (= method to organize files on a
  harddisk partition or a floppy disk) and not in use anymore. It
  enlarges your kernel by about 25 kB. Let's all kill this beast. Say
  N.

Second extended fs support
CONFIG_EXT2_FS
  This is the de facto standard Linux filesystem (= method to organize
  files on a storage device) for harddisks. You want to say Y, unless
  you intend to use Linux exclusively from inside a DOS partition
  using the umsdos filesystem. The advantage of the latter is that you
  can get away without repartitioning your hard drive (which often
  implies backing everything up and restoring afterwards); the
  disadvantage is that Linux becomes susceptible to DOS viruses and
  that umsdos is somewhat slower than ext2fs. Even if you want to run
  Linux in this fashion, it might be a good idea to have ext2fs
  around: it enables you to read more floppy disks and facilitates the
  transition to a *real* Linux partition later. Another (rare) case
  which doesn't require ext2fs is a diskless Linux box which mounts
  all files over the network using NFS (in this case it's sufficient
  to enable NFS filesystem support below; if you are planning to do
  this, have a look at the package
  /pub/Linux/system/Linux-boot/netboot-nfs.tar.gz, available via ftp
  (user: anonymous) from sunsite.unc.edu, extract with "tar xzvf
  filename"). There is a short ext2fs-FAQ, available via ftp
  (user: anonymous) in sunsite.unc.edu:/pub/Linux/docs/faqs. This
  option will enlarge your kernel by about 41 kB. Default is Y.

xiafs filesystem support
CONFIG_XIA_FS
  This is an old filesystem (= method to organize files on a harddisk
  partition or a floppy disk) and not in use anymore. This option
  would enlarge your kernel by about 28 kB. Let's all kill this beast:
  say N.  If you want to compile this as a module ( = code which can
  be inserted in and removed from the running kernel whenever you
  want), say M here and read Documentation/modules.txt. Note that the
  filesystem of your root partition cannot be compiled as a module.

fat fs support
CONFIG_FAT_FS
  If you want to use one of the FAT-based filesystems (the MS-DOS,
  VFAT (Windows'95) and UMSDOS filesystems), then you must include
  FAT support. This is not a filesystem in itself, but it provides
  the foundation for the other filesystems. This option will enlarge
  your kernel about 24 kB. If unsure, say Y. If you want to compile
  this as a module however ( = code which can be inserted in and 
  removed from the running kernel whenever you want), say M here and
  read Documentation/modules.txt. Note that if you compile the FAT
  support as a module, you cannot compile any of the FAT-based file-
  systems into the kernel - they will have to be modules as well.
  The filesystem of your root partition cannot be a module.

msdos fs support
CONFIG_MSDOS_FS
  This allows you to mount MSDOS partitions of your harddrive (unless
  they are compressed; to access compressed MSDOS partitions under
  Linux, you can either use the DOS emulator DOSEMU, described in the
  DOSEMU-HOWTO, available via ftp (user: anonymous) at
  sunsite.unc.edu:/pub/Linux/docs/HOWTO, or try dmsdosfs in
  sunsite.unc.edu:/pub/Linux/system/Filesystems/dosfs. If you intend
  to use dosemu with a non-compressed MSDOS partition, say Y here) and
  MSDOS floppies. This means that file access becomes transparent,
  i.e. the MSDOS files look and behave just like all other Unix files.
  Another way to read and write MSDOS floppies from within Linux (but
  not transparently) is with the mtools ("man mtools") program suite,
  which doesn't require the msdos filesystem support.  If you want to
  use umsdos, the Unix-like filesystem on top of DOS, which allows you
  to run Linux from within a DOS partition without repartitioning,
  you'll have to say Y or M here. If your have Windows'95 or Windows
  NT installed on your MSDOS partitions, you should use the VFAT
  filesystem instead, or you will not be able to see the long
  filenames generated by Windows'95 / Windows NT. This option will
  enlarge your kernel by about 7 kB. If unsure, say Y. This will only
  work if you said Y to "fat fs support" as well. If you want to
  compile this as a module however ( = code which can be inserted in
  and removed from the running kernel whenever you want), say M here
  and read Documentation/modules.txt. Note that the filesystem of your
  root partition cannot be a module.

vfat fs support
CONFIG_VFAT_FS
  This allows you to mount MSDOS partitions of your harddrive. It
  will let you use filenames in a way compatible with the long 
  filenames used by Windows'95 and Windows NT fat-based (not NTFS)
  partitions. It does not support Windows'95 compressed filesystems.
  You cannot use the VFAT filesystem for your root partition; use
  UMSDOS instead. This option enlarges your kernel by about 10 kB and
  it only works if you enabled the "fat fs support" above. Please read
  the file Documentation/filesystems/vfat.txt for details.
  If unsure, say N. If you want to compile this as a module ( = code 
  which can be inserted in and removed from the running kernel whenever 
  you want), say M here and read Documentation/modules.txt.

umsdos: Unix like fs on top of std MSDOS fs
CONFIG_UMSDOS_FS
  Say Y here if you want to run Linux from within an existing DOS
  partition of your harddrive. The advantage of this is that you can
  get away without repartitioning your hard drive (which often implies
  backing everything up and restoring afterwards) and hence you're
  able to quickly try out Linux or show it to your friends; the
  disadvantage is that Linux becomes susceptible to DOS viruses and
  that UMSDOS is somewhat slower than ext2fs.  Another use of umsdos
  is to write files with long unix filenames to MSDOS floppies; it
  also allows unix style softlinks and owner/permissions of files on
  MSDOS floppies. You will need a program called umssync in order to
  make use of umsdos. Read Documentation/filesystems/umsdos.txt. This
  option enlarges your kernel by about 25 kB and it only works if you
  enabled both "fat fs support" and "msdos fs support" above. If
  unsure, say N.  If you want to compile this as a module ( = code
  which can be inserted in and removed from the running kernel
  whenever you want), say M here and read
  Documentation/modules.txt. Note that the filesystem of your root
  partition cannot be a module.

/proc filesystem support
CONFIG_PROC_FS
  This is a virtual filesystem providing information about the status
  of the system. "Virtual" means that it doesn't take up any space on
  your harddisk: the files are created on the fly when you access
  them. Also, you cannot read the files with less: you need to use
  more or cat. The filesystem is explained in the Kernel Hacker's
  Guide, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/LDP and also on the proc(8) manpage
  ("man 8 proc").  This option will enlarge your kernel by about 18
  kB. It's totally cool; for example, "cat /proc/interrupts" gives
  information about what the different IRQs are used for at the moment
  (there is a small number of Interrupt ReQuest lines in your computer
  that are used by the periphery to gain the CPU's attention - often a
  source of trouble if two devices are mistakenly configured to use
  the same IRQ). Several programs depend on this, so everyone should
  say Y here.
  
NFS filesystem support
CONFIG_NFS_FS
  If you are connected to some other (usually local) Unix computer
  (using SLIP, PLIP, PPP or ethernet) and want to mount files
  residing on that computer (the NFS server) using the Network
  File Sharing protocol, say Y. "Mounting files" means that the client
  can access the files with usual UNIX commands as if they were
  sitting on the client's harddisk. For this to work, the server must
  run the programs nfsd and mountd (but does not need to have NFS
  filesystem support enabled). NFS is explained in the Network
  Administrator's Guide, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/LDP, and on its man page: "man
  nfs". There is also a NFS-FAQ in
  sunsite.unc.edu:/pub/Linux/docs/faqs which presumes that you know
  the basics of NFS already. If you say Y here, you should have said Y
  to TCP/IP networking also. This option would enlarge your kernel by
  about 27 kB. This filesystem is also available as a module ( = code
  which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt. If you configure a diskless
  machine which will mount its root filesystem over nfs, you cannot
  compile this driver as a module. If you don't know what all this is
  about, say N.

Root file system on NFS
CONFIG_ROOT_NFS
  If you want your Linux box to mount its whole root filesystem from
  some other computer over the net via NFS (presumably because your
  box doesn't have a harddisk), say Y. Read Documentation/nfsroot.txt
  for details. Most people say N here.

BOOTP support
CONFIG_RNFS_BOOTP
  If you want your Linux box to mount its whole root filesystem from
  some other computer over the net via NFS and you want the address
  of your computer to be discovered automatically using the BOOTP
  protocol (a special protocol designed for doing this job), say Y
  here. In case the boot ROM of your network card was designed for
  booting Linux and does BOOTP itself, providing all necessary
  information on the kernel command line, you can say N here.
  If unsure, say Y. Note that in case you want to use BOOTP, a BOOTP
  server must be operating on your network. Read
  Documentation/nfsroot.txt for details.

RARP support
CONFIG_RNFS_RARP
  If you want your Linux box to mount its whole root filesystem from
  some other computer over the net via NFS and you want the address
  of your computer to be discovered automatically using the RARP
  protocol (an older protocol which is being obsoleted by BOOTP), say
  Y here. Note that in case you want to use RARP, a RARP server must be
  operating on your network. Read Documentation/nfsroot.txt for
  details. 

ISO9660 cdrom filesystem support
CONFIG_ISO9660_FS
  This is the standard filesystem used on CDROMs. It was previously
  known as "High Sierra Filesystem" and is called "hsfs" on other Unix
  systems.  If you have a CDROM drive and want to do more with it than
  just listen to audio CDs and watch its LEDs, say Y (and read the
  CDROM-HOWTO, available via ftp (user: anonymous) from
  sunsite.unc.edu:/pub/Linux/docs/HOWTO), thereby enlarging your
  kernel by about 27 kB; otherwise say N.  If you want to compile this
  as a module ( = code which can be inserted in and removed from the
  running kernel whenever you want), say M here and read
  Documentation/modules.txt.

OS/2 HPFS filesystem support (read only)
CONFIG_HPFS_FS
  OS/2 is IBM's operating system for PC's, the same as Warp, and HPFS
  is the filesystem used for organizing files on OS/2 harddisk
  partitions. Say Y if you want to be able to read files from an OS/2
  HPFS partition of your harddrive. OS/2 floppies however are in
  regular MSDOS format, so you don't need this option in order to be
  able to read them. Read Documentation/filesystems/hpfs.txt. This
  filesystem is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you
  want). If you want to compile it as a module, say M here and read
  Documentation/modules.txt. If unsure, say N.
  
System V and Coherent filesystem support
CONFIG_SYSV_FS
  SCO, Xenix and Coherent are commercial Unix systems for intel
  machines. Enabling this option would allow you to read and write to
  and from their floppies and harddisk partitions. If you have a
  floppy or harddisk partition like that, it is probable that they
  contain binaries from those other Unix systems; in order to run
  these binaries, you will want to install iBCS2 (iBCS2 [Intel Binary
  Compatibility Standard] is a kernel module which lets you run SCO,
  Xenix, Wyse, Unix Ware, Dell Unix and System V programs under Linux
  and is often needed to run commercial software, most prominently
  WordPerfect. It's in tsx-11.mit.edu:/pub/linux/BETA). If you only
  intend to mount files from some other Unix over the network using
  NFS, you don't need the System V filesystem support (but you need
  nfs filesystem support obviously). Note that this option is
  generally not needed for floppies, since a good portable way to
  transport files and directories between unixes (and even other
  operating systems) is given by the tar program ("man tar").  Note
  also that this option has nothing whatsoever to do with the option
  "System V IPC". Read about the System V filesystem in
  Documentation/filesystems/sysv-fs.txt. This option will enlarge your
  kernel by about 34 kB. If you want to compile this as a module ( =
  code which can be inserted in and removed from the running kernel
  whenever you want), say M here and read
  Documentation/modules.txt. If you haven't heard about all of this
  before, it's safe to say N.

BSD UFS filesystem support (read only)
CONFIG_UFS_FS
  BSD and derivate versions of Unix (such as SunOS, FreeBSD, NetBSD
  and NeXTstep) use a filesystem called UFS. Some System V Unixes can
  create and mount partitions and diskettes using this filesystem
  as well. Enabling this option allows you to mount these partitions
  and diskettes read-only. If you only intend to mount files from
  some other Unix over the network using NFS, you don't need the
  UFS filesystem support (but you need nfs filesystem support
  obviously). Note that this option is generally not needed for
  floppies, since a good portable way to transport files and
  directories between unixes (and even other operating systems)
  is given by the tar program ("man tar"). When accessing NeXTstep
  files, you may need to convert them from the NeXT character set
  to the Latin1 character set; use GNU recode for this purpose.
  Say Y to build UFS support into your kernel. If you want to compile
  this as a module ( = code which can be inserted in and removed from
  the running kernel whenever you want), say M here and read
  Documentation/modules.txt. If you haven't heard about all of this
  before, it's safe to say N.

BSD disklabel (FreeBSD partition tables) support
CONFIG_BSD_DISKLABEL
  FreeBSD uses its own partition scheme on your PC. It requires only
  one entry in the primary partition table of your disk and manages it
  similarly to DOS extended partitions, putting in its first sector a
  new partition table in disklabel format. Enabling this option allows
  you to read these disklabels and further mount FreeBSD partitions on
  your Linux box if you also have configured BSD ufs filesystem
  support. If you don't know what all this is about, say N.

SMD disklabel (Sun partition tables) support
CONFIG_SMD_DISKLABEL
  Like most systems, SunOS uses its own partition table format,
  incompatible with all others. Enabling this option allows you to read
  these partition tables and further mount SunOS disks on your Linux
  box if you also have configured BSD ufs filesystem support. This is
  mainly used to carry data from a Sparc under SunOS to your Linux box
  via a removable medium like magneto-optical or ZIP drives. If you
  don't know what all this is about, say N.

SMB filesystem support (to mount WfW shares etc..)
CONFIG_SMB_FS
  SMB (Server Message Buffer) is the protocol Windows for Workgroups
  (WfW), Windows NT and Lan Manager use to talk to each other over an
  ethernet. Enabling this allows you to mount their filesystems and
  access them just like any other unix directory. For details, read
  Documentation/filesystems/smbfs.txt.  Note: if you just want your
  box to act as an SMB *server* and make files and printing services
  available to Windows clients (which need to have a TCP/IP stack),
  you don't need to enable this filesystem support; you can use the
  program samba (available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/system/Network/samba) for that. General
  information about how to connect Linux, Windows machines and Macs is
  on the WWW at http://eats.com/linux_mac_win.html (to browse the WWW,
  you need to have access to a machine on the Internet that has one of
  the programs lynx, netscape or Mosaic).  If you want to compile the
  SMB support as a module ( = code which can be inserted in and
  removed from the running kernel whenever you want), say M here and
  read Documentation/modules.txt. Most people say N, however.

NCP filesystem support (to mount NetWare volumes)
CONFIG_NCP_FS
  NCP (NetWare Core Protocol) is a protocol that runs over IPX and is
  used by Novel NetWare clients to talk to file servers. It is to IPX
  what nfs is to tcp/ip, if that helps. Enabling this option allows
  you to mount NetWare file server volumes and to access them just
  like any other Unix directory. For details, please read the file
  Documentation/filesystems/ncpfs.txt in the kernel source and the
  IPX-HOWTO on sunsite.unc.edu:/pub/Linux/docs/howto.  If you want to
  compile this as a module ( = code which can be inserted in and
  removed from the running kernel whenever you want), say M here and
  read Documentation/modules.txt.

Amiga FFS filesystem support (read only)
CONFIG_AFFS_FS
  The Fast File System (FFS) is the common filesystem used on harddisks
  by Amiga (tm) Systems since AmigaOS Version 1.3 (34.20). It's also
  possible to mount diskfiles used by the Un*X Amiga Emulator by Bernd
  Schmidt (http://www-users.informatik.rwth-aachen.de/~crux/uae.html)
  If you want to do the latter, you will also need the loop device
  support. Because it's in an early development state, the AFFS is 
  read only. Say Y if you want to be able to read files from an Amiga
  FFS partition of your harddrive. Amiga floppies however cannot be
  read with this driver due to an incompatibility of the floppy
  controller used in an Amiga and the standard floppy controller in
  PCs and workstations. Read Documentation/filesystems/affs.txt. This
  filesystem is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you
  want). If you want to compile it as a module, say M here and read
  Documentation/modules.txt. If unsure, say N.

Standard/generic serial support
CONFIG_SERIAL
  This selects whether you want to include the driver for the standard
  serial ports.  People who might say N here are those that are
  setting up dedicated ethernet WWW/ftp servers, or users that have
  one of the various bus mice instead of a serial mouse.  (Note that
  the Cyclades and Stallion drivers do not need this driver built in
  for them to work. They are completely independent of each other.)
  If you want to compile this driver as a module, say M here and read
  Documentation/modules.txt.  [WARNING: Do not compile this driver as
  a module if you are using non-standard serial ports, since the
  configuration information will be lost when kerneld automatically
  unloads the driver.  This limitation may be lifted in the future.]
  Most people will say Y or M here, so that they can use serial mice,
  modems and similar devices connecting to the standard serial ports.

Digiboard PC/X Support
CONFIG_DIGI
  This is a driver for the Digiboard PC/Xe, PC/Xi, and PC/Xeve cards
  that give you many serial ports. You would need something like this
  to connect more than two modems to your linux box, for instance in
  order to become a BBS. If you have a card like that, say Y here and
  read the file Documentation/digiboard.txt.

SDL RISCom/8 card support
CONFIG_RISCOM8
  This is a driver for the SDL Communications RISCom/8 multiport card,
  that give you many serial ports. You would need something like this
  to connect more than two modems to your linux box, for instance in
  order to become a BBS. If you have a card like that, say Y here and
  read the file Documentation/riscom8.txt. Also it's possible to say
  M here and compile this driver as kernel loadable module.

Cyclades async mux support
CONFIG_CYCLADES
  This is a driver for a card that gives you many serial ports. You
  would need something like this to connect more than two modems to
  your linux box, for instance in order to become a BBS. If you want
  to compile this as a module ( = code which can be inserted in and
  removed from the running kernel whenever you want), say M here and
  read Documentation/modules.txt. If you haven't heard about it, it's
  safe to say N. (As of 1.3.9x kernels, this driver's minor numbers
  start at 0 instead of 32.)

Stallion multiport serial support 
CONFIG_STALDRV
  Stallion cards give you many serial ports. You would need something
  like this to connect more than two modems to your linux box, for
  instance in order to become a BBS. If you say Y here, you will be
  asked for your specific card model in the next questions. Make sure
  to read drivers/char/README.stallion in this case. If you have never
  heard about all this, it's safe to say N.
 
Stallion EasyIO or EC8/32 support 
CONFIG_STALLION n
  If you have an EasyIO or EasyConnection 8/32 multiport Stallion
  card, then this is for you; say Y. Make sure to read
  drivers/char/README.stallion. If you want to compile this as a
  module ( = code which can be inserted in and removed from the
  running kernel whenever you want), say M here and read
  Documentation/modules.txt.

Stallion EC8/64, ONboard, Brumby support
CONFIG_ISTALLION
  If you have an EasyConnection 8/64, ONboard, Brumby or Stallion
  serial multiport card, say Y here. Make sure to read
  drivers/char/README.stallion. To compile it as a module ( = code
  which can be inserted in and removed from the running kernel
  whenever you want), say M here and read Documentation/modules.txt.

Parallel printer support
CONFIG_PRINTER
  If you intend to attach a printer to the parallel port of your Linux
  box (as opposed to using a serial printer; if the connector at the
  printer has 9 or 25 holes ["female"], then it's serial), say Y. Also
  read the Printing-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO.  If you want to compile this
  as a module ( = code which can be inserted in and removed from the
  running kernel whenever you want), say M here and read
  Documentation/modules.txt. If you want to use both a parallel
  printer and PLIP, there are two cases: 1) If the printer and the
  PLIP cable are to use the same parallel port (presumably because you
  have just one), it is best to compile both drivers as modules and
  load and unload them as needed. 2) To use different parallel ports
  for the printer and the PLIP cable, you can say Y to this printer
  driver, specify the base address of the parallel port(s) to use for
  the printer(s) with the "lp" kernel command line option. (See the
  documentation of your boot loader (lilo or loadlin) about how to
  pass options to the kernel at boot time. The lilo procedure is also
  explained in the SCSI-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO.) The standard base addresses
  as well as the syntax of the "lp" command line option can be found
  in drivers/char/lp.c. You can then say Y to the PLIP driver or,
  preferably, M in which case Documentation/networking/net-modules.txt
  tells you how to specify the port and IRQ to be used by PLIP at
  module load time.

Logitech busmouse support
CONFIG_BUSMOUSE
  Logitech mouse connected to a proprietary interface card. It's
  generally a round connector with 9 pins. Note that the newer mice
  made by Logitech don't use the Logitech protocol anymore; for those,
  you don't need this option. You want to read the Busmouse-HOWTO,
  available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO.  If you want to compile this
  as a module ( = code which can be inserted in and removed from the
  running kernel whenever you want), say M here and read
  Documentation/modules.txt. If you are unsure, say N and read the
  HOWTO nevertheless: it will tell you what you have. Chances are that
  you have a regular serial MouseSystem or Microsoft mouse (made by
  Logitech) plugging in a COM port (rectangular with 9 or 25 pins)
  which is supported automatically.

PS/2 mouse (aka "auxiliary device") support
CONFIG_PSMOUSE
  The PS/2 mouse connects to a special mouse port that looks much like
  the keyboard port (small circular connector with 6 pins). This way,
  the mouse does not use any serial ports. This port can also be used
  for other input devices like light pens, tablets, keypads. Compaq,
  AST and IBM all use this as their mouse port on currently shipping
  machines. The trackballs of some laptops are PS/2 mice
  also. Although this is not a busmouse, it is explained in detail in
  the Busmouse-HOWTO, available via ftp (user: anonymous) in
  sunsite.unc.edu:/pub/Linux/docs/HOWTO.  If you want to compile this
  as a module ( = code which can be inserted in and removed from the
  running kernel whenever you want), say M here and read
  Documentation/modules.txt. If you are unsure, say N and read the
  HOWTO nevertheless: it will tell you what you have. Chances are that
  you have a regular serial MouseSystem or Microsoft mouse plugging in
  a COM port (9 or 25 pins) which is supported automatically.

C&T 82C710 mouse port support (as on TI Travelmate)
CONFIG_82C710_MOUSE
  This is a certain kind of PS/2 mouse used on the TI Travelmate. If
  you are unsure, try first to say N here and come back if the mouse
  doesn't work. Read the Busmouse-HOWTO, available via ftp (user:
  anonymous) in sunsite.unc.edu:/pub/Linux/docs/HOWTO.

Microsoft busmouse support
CONFIG_MS_BUSMOUSE
  These animals (also called Inport mice) are connected to an
  expansion board using a round connector with 9 pins. If this is what
  you have, say Y and read the Busmouse-HOWTO, available via ftp
  (user: anonymous) in sunsite.unc.edu:/pub/Linux/docs/HOWTO.  If you
  want to compile this as a module ( = code which can be inserted in
  and removed from the running kernel whenever you want), say M here
  and read Documentation/modules.txt. If you are unsure, say N and
  read the HOWTO nevertheless: it will tell you what you have. Chances
  are that you have a regular serial MouseSystem or Microsoft mouse
  plugging in a COM port which is supported automatically. Also be aware
  several vendors talk about 'Microsoft busmouse' and actually mean PS/2
  busmouse - so count the pins on the connector.

ATIXL busmouse support
CONFIG_ATIXL_BUSMOUSE
  This is a rare type of busmouse that is connected to the back of an
  ATI video card. Note that most ATI mice are actually Microsoft
  busmice. Read the Busmouse-HOWTO, available via ftp (user:
  anonymous) in sunsite.unc.edu:/pub/Linux/docs/HOWTO.  If you want to
  compile this as a module ( = code which can be inserted in and
  removed from the running kernel whenever you want), say M here and
  read Documentation/modules.txt. If you are unsure, say N and read
  the HOWTO nevertheless: it will tell you what you have. Chances are
  that you have a regular serial MouseSystem or Microsoft mouse
  plugging in a COM port (9 or 25 pins) which is supported
  automatically.

Support for user miscellaneous modules
CONFIG_UMISC
  This option forces generic miscellaneous minor device support in the
  kernel, and allows later loading of user miscellaneous device
  modules, such as drivers for optic pens and touchscreens. Unless you
  need such specific modules, or are willing to write/test one, just
  say N.

QIC-02 tape support
CONFIG_QIC02_TAPE
  If you have a non-SCSI tape drive like that, say Y.

Do you want runtime configuration for QIC-02
CONFIG_QIC02_DYNCONF
  You can either configure this driver once and for all by editing a
  header file, in which case you should say N, or you can fetch a
  program via anonymous ftp which is able to configure this driver
  during runtime. If you want this, say Y.

Ftape (QIC-80/Travan) support
CONFIG_FTAPE
  If you have a tape drive that is connected to your floppy
  controller, say Y here. Some tape drives (like the Iomega Ditto
  3200) come with a high speed controller of its own.  These drives
  (and their companion controller) is also supported. If you have a
  special controller (such as the CMS FC-10, FC-20, Iomega Mach-II, or
  Ditto Dash), you must configure it by editing the file
  drivers/char/ftape/Makefile. If you want to use such a tape drive on
  a PCI-bus based system, please read the file
  drivers/char/ftape/README.PCI. This driver is also available as a
  runtime loadable module ( = code which can be inserted in and
  removed from the running kernel whenever you want). If you want to
  compile it as a module, say M here and read
  Documentation/modules.txt.

Zilog serial support
CONFIG_SUN_ZS
  This driver does not exist at this point, so you might as well say
  N.

Advanced Power Management
CONFIG_APM
  APM is a BIOS specification for saving power using several different
  techniques.  This is mostly useful for battery powered laptops with APM
  compliant BIOSes.  Specifically, the time will be reset after a USER
  RESUME operation, the /proc/apm device will provide battery status
  information, and user-space programs will receive notification of APM
  "events" (e.g., battery status change).  This driver does not spin down
  disk drives (see hdparm(8) for that); and it doesn't turn off
  VESA-compliant "green" monitors.  This driver does not support the TI
  4000M TravelMate and the ACER 486/DX4/75 because they don't have
  compliant BIOSes.  Many "green" desktop machines also don't have
  compliant BIOSes, and this driver will cause those machines to panic
  during the boot phase (typically, these machines are using a data
  segment of 0040, which is reserved for the Linux kernel).  If you don't
  have a battery in your machine, there isn't much point in using this
  driver.

Ignore USER SUSPEND
CONFIG_APM_IGNORE_USER_SUSPEND
  This option will ignore USER SUSPEND requests.  On machines with a
  compliant APM BIOS, you want to say N.  However, on the NEC Versa M
  series notebooks, it is necessary to say Y because of a BIOS bug.

Enable APM at boot time
CONFIG_APM_DO_ENABLE
  Enable APM features at boot time.  From page 36 of the APM BIOS
  specification: "When disabled, the APM BIOS does not automatically
  power manage devices, enter the Standby State, enter the Suspend State,
  or take power saving steps in response to CPU Idle calls."  This driver
  will make CPU Idle calls when Linux is idle (unless this feature is
  turned off -- see below).  This should always save battery power, but
  more complicated APM features will be dependent on your BIOS
  implementation.  You may need to turn this option off if your computer
  hangs at boot time when using APM support, or if it beeps continuously
  instead of suspending.  Turn this off if you have a NEC UltraLite Versa
  33/C or a Toshiba T400CDT.  This is off by default since most machines
  do fine without this feature.

Do CPU IDLE calls
CONFIG_APM_CPU_IDLE
  Enable calls to APM CPU Idle/CPU Busy inside the kernel's idle loop.
  On some machines, this can activate improved power savings, such as a
  slowed CPU clock rate, when the machine is idle.  These idle calls are
  made after the idle loop has run for some length of time (e.g., 333
  mS).  On some machines, this will cause a hang at boot time or whenever
  the CPU becomes idle.  (On machines with more than one CPU, this option
  does nothing.)

Enable console blanking using APM
CONFIG_APM_DISPLAY_BLANK
  Enable console blanking using the APM.  Some laptops can use this to
  turn off the LCD backlight when the VC screen blanker blanks the
  screen.  Note that this is only used by the VC screen blanker, and
  won't turn off the backlight when using X11 (this also doesn't have
  anything to do with your VESA-compliant power-saving monitor).
  Further, this option doesn't work for all laptops -- it might not turn
  off your backlight at all, or it might print a lot of errors to the
  console, especially if you are using gpm.

Power off on shutdown 
CONFIG_APM_POWER_OFF
  This option will power off the computer after the Linux kernel is halted
  (e.g., with the halt(8) command).  As with the other APM options, this
  option may not work reliably with some APM BIOS implementations.

Watchdog Timer Support 
CONFIG_WATCHDOG
  If you enable this option and create a character special file
  /dev/watchdog with major number 10 and minor number 130 using mknod
  ("man mknod"), you will get a watchdog, i.e.: subsequently opening
  the file and failing to write to it for longer than 1 minute will
  result in rebooting the machine. This could be useful for a
  networked machine that needs to come back online as fast as possible
  after a lock-up. There's a watchdog implementation entirely in
  software (which can sometimes fail to reboot the machine) and a driver
  for hardware watchdog boards, which are more robust and can also
  keep track of the temperature inside your computer. For details,
  read Documentation/watchdog.txt in the kernel source. If unsure, say
  N.

Disable watchdog shutdown on close
CONFIG_WATCHDOG_NOWAYOUT
  The default watchdog behaviour is to stop the timer if the process
  managing it closes the file /dev/watchdog. It's always remotely
  possible that this process might get killed. If you enable this
  option, the watchdog cannot be stopped once it has been started.

WDT Watchdog timer
CONFIG_WDT
  If you have a WDT500P or WDT501P watchdog board, say Y here,
  otherwise N. It is not possible to probe for this board, which means
  that you have to set the IO port and IRQ it uses in the kernel
  source at the top of drivers/char/wdt.c. If you want to compile this
  as a module ( = code which can be inserted in and removed from the
  running kernel whenever you want), say M here and read
  Documentation/modules.txt.

WDT501 features
CONFIG_WDT_501
  Saying Y here and creating a character special file /dev/temperature
  with major number 10 and minor number 131 ("man mknod") will give
  you a thermometer inside your computer: reading from
  /dev/temperature yields one byte, the temperature in degrees
  Fahrenheit. This works only if you have a WDT501P watchdog board
  installed.

Fan Tachometer
CONFIG_WDT_501_FAN
  Enable the Fan Tachometer on the WDT501. Only do this if you have a fan
  tachometer actually set up.

Software Watchdog
CONFIG_SOFT_WATCHDOG
  A software monitoring watchdog. This will fail to reboot your system
  from some situations that the hardware watchdog will recover
  from. Equally it's a lot cheaper to install.

Enhanced Real Time Clock Support
CONFIG_RTC
  If you enable this option and create a character special file
  /dev/rtc with major number 10 and minor number 135 using mknod ("man
  mknod"), you will get access to the real time clock built into your
  computer. Every PC has such a clock built in. It can be used to
  generate signals from as low as 1Hz up to 8192Hz, and can also be
  used as a 24 hour alarm.  It reports status information via the file
  /proc/rtc and its behaviour is set by various ioctls on
  /dev/rtc. People running SMP (= multiprocessor) versions of Linux
  should enable this option to read and set the RTC clock in a SMP
  compatible fashion. If you think you have a use for such a device
  (such as periodic data sampling), then say Y here, and go read the
  file Documentation/rtc.txt for details.

Sound card support
CONFIG_SOUND
  If you have a Sound Card in your Computer, i.e. if it can say more
  than an occasional beep, say Y. Be sure to have all the information
  about your sound card and its configuration down (I/O port,
  interrupt and DMA channel), because you will be asked for it. You
  want to read the Sound-HOWTO, available via ftp (user: anonymous)
  from sunsite.unc.edu:/pub/Linux/docs/HOWTO. There is also some
  information in various README files in drivers/sound.  If you want
  to compile this as a module ( = code which can be inserted in and
  removed from the running kernel whenever you want), say M here and
  read Documentation/modules.txt. I'm told that even without a sound
  card, you can make your computer say more than an occasional beep,
  by programming the PC speaker. Kernel patches and programs to do
  that are at
  sunsite.unc.edu:/pub/Linux/kernel/patches/console/pcsndrv-X.X.tar.gz,
  to be extracted with "tar xzvf filename".

Sun Audio support
CONFIG_SUN_AUDIO
  This is support for the soundcards on Sun workstations. The code
  does not exist yet, so you might as well say N here.

Kernel profiling support
CONFIG_PROFILE
  This is for kernel hackers who want to know how much time the kernel
  spends in the various procedures. The information is stored in
  /proc/profile (enable the /proc filesystem!) and in order to read
  it, you need the readprofile package from sunsite.unc.edu. Its
  manpage gives information regarding the format of profiling data. To
  become a kernel hacker, you can start with the Kernel Hacker's
  Guide, available via ftp (user: anonymous) from
  sunsite.unc.edu:/pub/Linux/docs/LDP. Mere mortals say N.
 
Profile shift count
CONFIG_PROFILE_SHIFT
  This is used to adjust the granularity with which the addresses of
  executed instructions get recorded in /proc/profile. But since you
  enabled "Kernel profiling support", you must be a kernel hacker and
  hence you know what this is about :-)

ISDN subsystem
CONFIG_ISDN
  This allows you to use an ISDN-card for networking connections and
  as dialin/out device. The isdn-tty's have a built in AT-compatible
  modem emulator. Network devices support autodial, channel-bundling,
  callback and caller-authentication without having a daemon
  running. A reduced T.70 protocol is supported with tty's suitable
  for German BTX. Currently cards by Teles and compatibles and ICN are
  supported. On D-Channel, the protocols EDSS1 and 1TR6 are
  supported. See Documentation/isdn/README for more information.

Support synchronous PPP
CONFIG_ISDN_PPP
  This enables synchronous PPP via ISDN. This protocol is used by
  Cisco or Sun for example. You will need a special version of pppd
  (called ipppd) for using this feature. See
  Documentation/isdn/README.syncppp and Documentation/isdn/syncPPP.FAQ
  for more information.

Support generic MP (RFC 1717)
CONFIG_ISDN_MPP
  With synchronous PPP enabled, it is possible to increase throughput
  by bundling several ISDN-connections, using this protocol. See
  Documentation/isdn/README.syncppp for more information.

Use VJ-compression with synchronous PPP
CONFIG_ISDN_PPP_VJ
  This enables Van Jacobson header compression for synchronous PPP.

ICN B1 and B2 support
CONFIG_ISDN_DRV_ICN
  This enables support for two kinds of ISDN-cards made by a German
  company called ICN. 1B is the standard version for a single ISDN
  line with two B-channels, 2B supports two ISDN lines. For running
  this card, additional firmware is necessary, which has to be
  downloaded into the card using a utility which is distributed
  separately.  See Documentation/isdn/README and README.icn for more
  information.

Teles, NICCY1016PC, Creatix support
CONFIG_ISDN_DRV_TELES
  This enables support for the Teles ISDN-cards S0-16.0, S0-16.3, S0-8
  and many compatibles. By default, the driver is configured to
  support a 16.0-type using EDSS1-protocol. See
  Documentation/isdn/README on how to configure it using 16.3, a
  different D-channel protocol, or non-standard irq/port/shmem
  settings.

PCBIT-D support
CONFIG_ISDN_DRV_PCBIT
  This enables support for the PCBIT ISDN-cards. This card is
  manufactured in Portugal by Octal. For running this card, additional
  firmware is necessary, which has to be downloaded into the card
  using a utility which is distributed separately.  See
  Documentation/isdn/README and Documentation/isdn/README.pcbit for
  more information.

Support for AP1000 multicomputer
CONFIG_AP1000
  This enables support for a sparc based parallel multi-computer
  called an AP1000+. For details on our efforts to port Linux to this
  machine see http://cap.anu.edu.au/cap/projects/linux or mail to
  hackers@cafe.anu.edu.au

# need an empty line after last entry, for sed script in Configure.

#
# This is used by ispell.el:
#
# LocalWords:  CONFIG coprocessor DX Pentium SX lilo loadlin HOWTO ftp sunsite
# LocalWords:  unc edu docs emu README kB BLK DEV FD Thinkpad fd MFM RLL IDE gz
# LocalWords:  cdrom harddisk diskless netboot nfs xzvf ATAPI MB harddrives ide
# LocalWords:  HD harddisks CDROMs IDECD NEC MITSUMI filesystem XT XD PCI bios
# LocalWords:  ISA EISA Microchannel VESA BIOSes IPC SYSVIPC ipc Ctrl dmesg hlt
# LocalWords:  BINFMT Linkable http ac uk jo html GCC Sparc AVANTI CABRIOLET EB
# LocalWords:  netscape gcc LD CC toplevel MODVERSIONS insmod rmmod modprobe IP
# LocalWords:  genksyms INET loopback gatewaying ethernet internet PPP ARP Arp
# LocalWords:  howto multicasting MULTICAST MBONE firewalling ipfw ACCT resp ip
# LocalWords:  proc acct IPIP encapsulator decapsulator klogd PCTCP RARP EXT PS
# LocalWords:  telneting subnetted NAGLE rlogin NOSR ttyS TGA techinfo mbone nl
# LocalWords:  Mb SKB IPX Novell Netware dosemu Appletalk DDP ATALK tapedrive
# LocalWords:  SD CHR scsi thingy SG CD LUNs LUN jukebox Adaptec BusLogic EATA
# LocalWords:  buslogic DMA DPT ATT eata dma PIO UltraStor fdomain umsdos ext
# LocalWords:  QLOGIC qlogic TMC seagate Trantor ultrastor FASST wd NETDEVICES
# LocalWords:  unix BBS linux nullmodem CSLIP PLIP Kirch's LDP CSlip SL SCC IRQ
# LocalWords:  Turbo Laplink plip NCSA port's ReQuest IRQs EQL SMC AMD PCnet NE
# LocalWords:  COM ELPLUS Com EtherLinkIII VLB Arcnet arcnet Cabletron DEPCA DE
# LocalWords:  depca EtherWorks EWRK ewrk SEEQ EtherExpressPro EEXPRESS NI xxx
# LocalWords:  EtherExpress WaveLAN wavelan PCLAN HPLAN VG SK Ansel Xen de ZNET
# LocalWords:  PCMCIA cb stanford pcmcia LAN TEC RealTek ATP atp DLINK NetTools
# LocalWords:  TR Sony CDU caddyless cdu Mitsumi MCD cd mcd XA MultiSession CDA
# LocalWords:  Matsushita Panasonic SBPCD Soundblaster Longshine sbpcd Aztech
# LocalWords:  Okano Wearnes AZTCD CDD SE aztcd sonycd Goldstar GSCD Philips fs
# LocalWords:  LMS OPTCD Sanyo SJCD minix faqs xiafs XIA msdos harddrive mtools
# LocalWords:  std softlinks umssync NetworkFileSharing nfsd mountd CDs HPFS TI
# LocalWords:  hpfs SYSV SCO intel iBCS Wyse WordPerfect tsx mit unixes sysv NR
# LocalWords:  SMB WfW Cyclades async mux Logitech busmouse MouseSystem aka AST
# LocalWords:  PSMOUSE Compaq trackballs Travelmate Inport ATIXL ATI busmice ld
# LocalWords:  gpm config QIC DYNCONF FTAPE Stor Ftape ftape pcsndrv manpage NT
# LocalWords:  readprofile diskdrives org com masq EtherTalk tcp netrom sunacm
# LocalWords:  misc AIC aic pio nullmodems scc Portmaster eql GIS PhotoCDs MCDX
# LocalWords:  mcdx gscd optcd sjcd ISP soundcard hdparm Workgroups Lan samba
# LocalWords:  filesystems smbfs ATA ppp PCTech RZ www powerquest txt CMD ESDI
# LocalWords:  chipset FB multicast MROUTE appletalk ifconfig IBMTR multiport
# LocalWords:  Multisession STALDRV EasyIO EC EasyConnection ISTALLION ONboard
# LocalWords:  Brumby pci TNC cis ohio faq usenet NETLINK dev hydra ca Tyne mem
# LocalWords:  carleton Deskstation DECstation SUNFD JENSEN Noname XXXM SLiRP
# LocalWords:  pppd Zilog ZS soundcards SRM bootloader ez mainmenu rarp ipfwadm
# LocalWords:  RTNETLINK mknod xos MTU lwared Macs mac netatalk macs cs Wolff
# LocalWords:  dartmouth flowerpt MultiMaster FlashPoint tudelft etherexpress
# LocalWords:  ICL EtherTeam ETH IDESCSI TXC SmartRAID SmartCache httpd sjc dlp
# LocalWords:  thesphere TwoServers BOOTP DHCP ncpfs BPQETHER BPQ chipsets MG
# LocalWords:  bsd comp Sparcstation le SunOS ie Gracilis PackeTwin PT pt LU FX
# LocalWords:  FX TEAC SoundBlaster CR CreativeLabs LCS mS ramdisk IDETAPE cmd
# LocalWords:  Vertos Genoa Funai hsfs NCP NetWare tgz APM apm ioctls UltraLite
# LocalWords:  TravelMate CDT LCD backlight VC RPC Mips DECStation AXP barlow
# LocalWords:  PMAX MILO Alphas Multia Tseng linuxelf endian mipsel mips drv HT
# LocalWords:  KERNELD kerneld callouts AdvanSys advansys diskquotas Admin WDT
# LocalWords:  wdt hdb hdc bugfix SiS vlb Acculogic CSA DTC dtc Holtek ht QDI
# LocalWords:  QD qd UMC umc ALI ali lena fnet fr homepage azstarnet axplinux
# LocalWords:  Avanti XL AlphaStations Jensen DECpc AXPpci UDB Cabriolet MCA RC
# LocalWords:  AlphaPC uwaterloo cpbeaure mca AOUT OUTput PPro sipx gwdg lo nwe
# LocalWords:  Keepalive linefill RELCOM keepalive analogue CDR conf CDI INIT
# LocalWords:  OPTi isp irq noisp VFAT vfat NTFS losetup dmsdosfs dosfs ISDN MP
# LocalWords:  NOWAYOUT behaviour dialin isdn callback BTX Teles ICN EDSS Cisco
# LocalWords:  ipppd syncppp RFC MPP VJ downloaded icn NICCY Creatix shmem ufr
# LocalWords:  ibp md ARCnet ether encap NDIS arcether ODI Amigas AmiTCP NetBSD
# LocalWords:  initrd tue util DES funet des OnNet BIOSP smc Travan Iomega CMS
# LocalWords:  FC DC dc PPA IOMEGA's ppa RNFS FMV Fujitsu ARPD arpd loran layes
# LocalWords:  FRAD indiana framerelay DLCI DCLIs Sangoma SDLA mrouted sync sec
# LocalWords:  Starmode Metricom MosquitoNet mosquitonet kbit nfsroot Digiboard
# LocalWords:  DIGI Xe Xeve digiboard UMISC touchscreens mtu ethernets HBAs MEX
# LocalWords:  Shifflett netcom js jshiffle WIC DECchip ELCP EtherPower dst RTC
# LocalWords:  rtc SMP lp Digi Intl RightSwitch DGRS dgrs AFFS Amiga UFS SDL AP
# LocalWords:  Solaris RISCom riscom syncPPP PCBIT pcbit sparc anu au artoo ufs
# LocalWords:  hitchcock Crynwr cnam pktdrvr NCSA's CyDROM CyCDROM FreeBSD NeXT
# LocalWords:  NeXTstep disklabel disklabels SMD FFS tm AmigaOS diskfiles Un
# LocalWords:  Bernd informatik rwth aachen uae affs
