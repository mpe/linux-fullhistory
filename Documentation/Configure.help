# Maintained by Axel Boldt (boldt@math.ucsb.edu)
#
# This version of the Linux kernel configuration help texts
# corresponds to the kernel versions 2.1.x. Be aware that these are
# development kernels and need not be completely stable.
#
# Translations of this file available on the WWW:
#
#   - http://jf.gee.kyoto-u.ac.jp/JF/JF-ftp/euc/Configure.help.euc
# is a Japanese translation, maintained by Tetsuyasu YAMADA
# (tetsu@cauchy.nslab.ntt.co.jp).
#   - http://nevod.perm.su/service/linux/doc/kernel/Configure.help 
# is a Russian translation, maintained by kaf@linux.nevod.perm.su.
#   - http://www.linux-kheops.com/traduc/kernels/
# has a French translation of the whole kernel, including
# Configure.help. This is maintained by David Bourgin
# (dbourgin@wsc.com). 
#   - http://visar.csustan.edu/~carlos/ contains Spanish translations 
# of the 2.0 kernel documentation files, produced by Carlos Perelló 
# Marín (fperllo@ehome.encis.es). 
#   - ftp://ftp-pavia1.linux.it/pub/linux/Configure.help
# is a work-in-progress effort of the Italian translation team,
# currently only for the 2.0 version of this file, maintained 
# by rubini@linux.it.
#   - http://www.cs.net.pl/~cezar/Kernel is the beginning of a Polish
# translation of the 2.0 version of this file, maintained by Cezar
# Cichocki (cezar@cs.net.pl).
#
# Information about what a kernel is, what it does, how to patch and
# compile it and much more is contained in the Kernel-HOWTO, available
# via FTP (user: anonymous) from sunsite.unc.edu in the directory
# /pub/Linux/docs/HOWTO. Before you start compiling, make sure that
# you have the necessary versions of all programs and libraries
# required to compile and run this kernel; they are listed in the file
# Documentation/Changes. Make sure to read the toplevel kernel README 
# file as well.
#
# Format of this file: description<nl>variable<nl>help text<nl><nl>. If
# the question being documented is of type "choice", we list only the
# first occurring config variable. The help texts may contain empty
# lines, but every non-empty line must be indented two positions.
# Order of the help texts does not matter, however, no variable should
# be documented twice: if it is, only the first occurrence will be
# used by Configure. We try to keep the help texts of related variables
# close together. Lines starting with `#' are ignored. To be nice to
# menuconfig, limit your line length to 70 characters. Use emacs'
# kfill.el to edit and ispell.el to spell check this file or you lose.
#
# If you add a help text to this file, please try to be as gentle as
# possible. Don't use unexplained acronyms and generally write for the
# hypothetical ignorant but intelligent user who has just bought a PC,
# removed Windows, installed Linux and is now recompiling the kernel
# for the first time. Tell them what to do if they're unsure. Technical 
# information should go in a README in the Documentation directory.
# Mention all the relevant READMEs and HOWTOs in the help text.
# Repetitions are fine since the help texts are not meant to be read
# in sequence.
#
# All this was shamelessly stolen from several different sources. Many
# thanks to all the contributors. Feel free to use these help texts in
# your own kernel configuration tools. The texts are copyrighted (c)
# 1995-1998 by Axel Boldt and many others and are governed by the GNU
# General Public License.

Prompt for development and/or incomplete code/drivers
CONFIG_EXPERIMENTAL
  Some of the various things that Linux supports (such as network 
  drivers, filesystems, network protocols, etc.) can be in a state 
  of development where the functionality, stability, or the level of 
  testing is not yet high enough for general use. This is usually
  known as the "alpha-test" phase amongst developers. If a feature is
  currently in alpha-test, then the developers usually discourage 
  uninformed widespread use of this feature by the general public to
  avoid "Why doesn't this work?" type mail messages. However, active
  testing and use of these systems is welcomed. Just be aware that it
  may not meet the normal level of reliability or it may fail to work
  in some special cases. Detailed bug reports from people familiar
  with the kernel internals are usually welcomed by the developers
  (before submitting bug reports, please read the documents README,
  MAINTAINERS, Documentation/BUG-HUNTING, and
  Documentation/oops-tracing.txt in the kernel source). 

  Unless you intend to help test and develop a feature or driver that
  falls into this category, or you have a situation that requires
  using these features you should probably say N here, which will
  cause this configure script to present you with fewer choices. If
  you say Y here, you will be offered the choice of using features or
  drivers that are currently considered to be in the alpha-test phase.

Kernel math emulation
CONFIG_MATH_EMULATION
  Linux can emulate a math coprocessor (used for floating point
  operations) if you don't have one. 486DX and Pentium processors have
  a math coprocessor built in, 486SX and 386 do not, unless you added
  a 487DX or 387, respectively. (The messages during boot time can
  give you some hints here ["man dmesg"].) Everyone needs either a
  coprocessor or this emulation. 

  If you don't have a math coprocessor, you need to say Y here; if you
  say Y here even though you have a coprocessor, the coprocessor will
  be used nevertheless. (This behavior can be changed with the kernel
  command line option "no387", which comes handy if your coprocessor
  is broken. Try "man bootparam" or see the documentation of your boot
  loader (lilo or loadlin) about how to pass options to the kernel at
  boot time. The lilo procedure is also explained in the SCSI-HOWTO,
  available via FTP (user: anonymous) in
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO.) This means that it is a
  good idea to say Y here if you intend to use this kernel on
  different machines. More information about the internals of Linux
  math coprocessor emulation can be found in
  arch/i386/math-emu/README.

  If you are not sure, say Y; apart from resulting in a 45 KB bigger
  kernel, it won't hurt.

Normal PC floppy disk support
CONFIG_BLK_DEV_FD
  If you want to use the floppy disk drive(s) of your PC under Linux,
  say Y. Information about this driver, especially important for IBM
  Thinkpad users, is contained in drivers/block/README.fd. This file
  also contains the location of the Floppy driver FAQ as well as
  location of the fdutils package used to configure additional
  parameters of the driver at run time.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called floppy.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

Support for PowerMac floppy
CONFIG_MAC_FLOPPY
  If you have a SWIM-3 (Super Woz Integrated Machine 3; from Apple)
  floppy controller, say Y here. Most commonly found in PowerMacs.

RAM disk support
CONFIG_BLK_DEV_RAM
  Saying Y here will allow you to use a portion of your RAM memory as
  a block device, so that you can make filesystems on it, read and
  write to it and do all the other things that you can do with normal
  block devices (such as hard drives). It is usually used to load and
  store a copy of a minimal root file system off of a floppy into RAM
  during the initial install of Linux. 

  Note that the kernel command line option "ramdisk=XX" is now
  obsolete. For details, read Documentation/ramdisk.txt.

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M and read Documentation/modules.txt. The module will be called
  rd.o. 

  Most normal users won't need the RAM disk functionality, and can
  thus say N here.

Initial RAM disk (initrd) support
CONFIG_BLK_DEV_INITRD
  The initial RAM disk is a RAM disk that is loaded by the boot loader
  (loadlin or lilo) and that is mounted as root before the normal boot
  procedure. It is typically used to load modules needed to mount the
  "real" root file system, etc. See Documentation/initrd.txt for
  details.

Loop device support
CONFIG_BLK_DEV_LOOP
  Saying Y here will allow you to use a regular file as a block
  device; you can then create a file system on that block device and
  mount it just as you would mount other block devices such as hard
  drive partitions, CDROM drives or floppy drives.

  This is useful if you want to check an ISO 9660 file system before
  burning the CD, or if you want to use floppy images without first
  writing them to floppy.

  The loop device driver can also be used to "hide" a filesystem in a
  disk partition, floppy, or regular file, either using encryption
  (scrambling the data) or steganography (hiding the data in the low
  bits of, say, a sound file). This is also safe if the file resides
  on a remote file server. If you want to do this, you will first have
  to acquire and install a kernel patch from
  ftp://ftp.replay.com/pub/crypto/linux/all or
  ftp://verden.pvv.org/pub/linux/kerneli/v2.1/, and then you need to
  say Y to this option.

  Note that alternative ways to use encrypted filesystems are provided
  by the cfs package, which can be gotten via FTP (user: anonymous)
  from ftp://ftp.replay.com/pub/crypto/disk/, and the newer tcfs
  package, available at http://tcfs.dia.unisa.it/. You do not need to
  say Y here if you want to use one of these. However, using cfs
  requires saying Y to "NFS filesystem support" below while using tcfs
  requires applying a kernel patch.

  To use the loop device, you need the losetup utility and a recent
  version of the mount program, both contained in the util-linux
  package (available via FTP (user: anonymous) from
  ftp://ftp.win.tue.nl/pub/linux/util/).

  Note that this loop device has nothing to do with the loopback
  device used for network connections from the machine to itself.

  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called loop.o.

  Most users will answer N here.

Network Block Device support
CONFIG_BLK_DEV_NBD
  Saying Y here will allow your computer to be a client for network
  block devices, i.e. it will be able to use block devices exported by
  servers (mount filesystems on them etc.). Communication between
  client and server works over TCP/IP networking, but to the client
  program this is hidden: it looks like a regular local file access to
  a block device special file such as /dev/nd0. 

  Network block devices also allows you to run a block-device in
  userland (making server and client physically the same computer,
  communicating using the loopback network device).
  
  Read Documentation/nbd.txt for more information, especially about
  where to find the server code, which runs in user space and does not
  need special kernel support.

  Note that this has nothing to do with the network file systems NFS
  or Coda; you can say N here even if you intend to use NFS or Coda.

  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called nbd.o.

  If unsure, say N.

Enhanced IDE/MFM/RLL disk/cdrom/tape/floppy support
CONFIG_BLK_DEV_IDE
  If you say Y here, you will use the full-featured IDE driver to
  control up to four IDE interfaces, each being able to serve a
  "master" and a "slave" device, for a total of up to eight IDE
  disk/cdrom/tape/floppy drives. People with SCSI-only systems
  can say N here.

  Useful information about large (>540 MB) IDE disks, multiple
  interfaces, what to do if IDE devices are not automatically
  detected, sound card IDE ports, module support, and other topics, is
  contained in Documentation/ide.txt. For detailed information about
  hard drives, consult the Disk-HOWTO and the Multi-Disk-HOWTO,
  available via FTP (user: anonymous) from
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO. 

  To fine-tune IDE drive/interface parameters for improved
  performance, look for the hdparm package at
  ftp://sunsite.unc.edu:/pub/Linux/kernel/patches/diskdrives/

  If you have one or more IDE drives, say Y here. If your system has
  no IDE drives, or if memory requirements are really tight, you could
  say N here, and select the "Old hard disk driver" instead to save
  about 13 KB of memory in the kernel.

Old hard disk (MFM/RLL/IDE) driver
CONFIG_BLK_DEV_HD_ONLY
  There are two drivers for MFM/RLL/IDE hard disks. Most people use
  the newer enhanced driver, but this old one is still around for two
  reasons. Some older systems have strange timing problems and seem to
  work only with the old driver (which itself does not work with some
  newer systems). The other reason is that the old driver is smaller,
  since it lacks the enhanced functionality of the new one. This makes
  it a good choice for systems with very tight memory restrictions, or
  for systems with only older MFM/RLL/ESDI drives. Choosing the old
  driver can save 13 KB or so of kernel memory. 

  If you are unsure, then just choose the Enhanced IDE/MFM/RLL driver
  instead of this one. For more detailed information, read the
  Disk-HOWTO, available via FTP (user: anonymous) from
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO.

  People with SCSI-only systems can say N here.

Use old disk-only driver on primary interface
CONFIG_BLK_DEV_HD_IDE
  There are two drivers for MFM/RLL/IDE disks. Most people use just
  the new enhanced driver by itself. This option however installs the
  old hard disk driver to control the primary IDE/disk interface in
  the system, leaving the new enhanced IDE driver to take care of only
  the 2nd/3rd/4th IDE interfaces. Doing this will prevent you from
  having an IDE/ATAPI CDROM or tape drive connected to the primary IDE
  interface. Choosing this option may be useful for older systems
  which have MFM/RLL/ESDI controller+drives at the primary port
  address (0x1f0), along with IDE drives at the secondary/3rd/4th port
  addresses. 

  Normally, just say N here; you will then use the new driver for all
  4 interfaces.

  People with SCSI-only systems don't need this and can say N here as
  well.

Include IDE/ATA-2 DISK support
CONFIG_BLK_DEV_IDEDISK
  This will include enhanced support for MFM/RLL/IDE hard disks. If
  you have a MFM/RLL/IDE disk, and there is no special reason to use
  the old hard disk driver instead, say Y. If you have an SCSI-only
  system, you can say N here.

  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called ide-disk.o. Do not compile this driver as a module if your
  root filesystem (the one containing the directory /) is located on
  the IDE disk. If unsure, say Y.

Include IDE/ATAPI CDROM support
CONFIG_BLK_DEV_IDECD
  If you have a CDROM drive using the ATAPI protocol, say Y. ATAPI is
  a newer protocol used by IDE CDROM and TAPE drives, similar to the
  SCSI protocol. Most new CDROM drives use ATAPI, including the
  NEC-260, Mitsumi FX400, Sony 55E, and just about all non-SCSI
  double(2X), quad(4X), and six(6X) speed drives.

  If you say Y here, the CDROM drive will be identified at boot time
  along with other IDE devices, as "hdb" or "hdc", or something
  similar (check the boot messages with dmesg). If this is your only
  CDROM drive, you can say N to all other CDROM options, but be sure
  to say Y or M to "ISO 9660 CDROM filesystem support".

  Read the CDROM-HOWTO, available via FTP (user: anonymous) in
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO and the file
  Documentation/cdrom/ide-cd. Note that older versions of lilo (the
  Linux boot loader) cannot properly deal with IDE/ATAPI CDROMs, so
  install lilo-16 or higher, available from
  ftp://sunsite.unc.edu/pub/Linux/system/Linux-boot/lilo.

  If you want to compile the driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called ide-cd.o.

Include IDE/ATAPI TAPE support
CONFIG_BLK_DEV_IDETAPE
  If you have an IDE tape drive using the ATAPI protocol, say Y.
  ATAPI is a newer protocol used by IDE tape and CDROM drives, similar
  to the SCSI protocol. If you have an SCSI tape drive however, you
  can say N here.

  If you say Y here, the tape drive will be identified at boot time
  along with other IDE devices, as "hdb" or "hdc", or something
  similar, and will be mapped to a character device such as "ht0"
  (check the boot messages with dmesg). Be sure to consult the
  drivers/block/ide-tape.c and Documentation/ide.txt files for usage
  information.

  If you want to compile the driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called ide-tape.o.

Include IDE/ATAPI FLOPPY support
CONFIG_BLK_DEV_IDEFLOPPY
  If you have an IDE floppy drive which uses the ATAPI protocol,
  answer Y. ATAPI is a newer protocol used by IDE CDROM/tape/floppy
  drives, similar to the SCSI protocol. IDE floppy drives include the
  LS-120 and the ATAPI ZIP (ATAPI PD-CD/CDR drives are not supported
  by this driver; support for PD-CD/CDR drives is available if you
  answer Y to "SCSI emulation support", below).

  If you say Y here, the FLOPPY drive will be identified along with
  other IDE devices, as "hdb" or "hdc", or something similar (check
  the boot messages with dmesg).

  If you want to compile the driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called ide-floppy.o.

SCSI emulation support
CONFIG_BLK_DEV_IDESCSI
  This will provide SCSI host adapter emulation for IDE ATAPI devices,
  and will allow you to use a SCSI device driver instead of a native
  ATAPI driver.

  This is useful if you have an ATAPI device for which no native
  driver has been written (for example, an ATAPI PD-CD or CDR drive);
  you can then use this emulation together with an appropriate SCSI
  device driver. In order to do this, say Y here and to "SCSI support"
  and "SCSI generic support", below.

  Note that this option does NOT allow you to attach SCSI devices to a
  box that doesn't have a SCSI host adapter installed.

  If both this SCSI emulation and native ATAPI support are compiled
  into the kernel, the native support will be used.

  People with SCSI-only systems can say N here. If unsure, say N.

CMD640 chipset bugfix/support
CONFIG_BLK_DEV_CMD640
  The CMD-Technologies CMD640 IDE chip is used on many common 486 and
  Pentium motherboards, usually in combination with a "Neptune" or
  "SiS" chipset. Unfortunately, it has a number of rather nasty
  design flaws that can cause severe data corruption under many common
  conditions. Say Y here to include code which tries to automatically
  detect and correct the problems under Linux. This option also
  enables access to the secondary IDE ports in some CMD640 based
  systems. 

  This driver will work automatically in PCI based systems (most new
  systems have PCI slots). But if your system uses VESA local bus
  (VLB) instead of PCI, you must also supply a kernel boot parameter
  to enable the CMD640 bugfix/support: "ide0=cmd640_vlb". (Try "man
  bootparam" or see the documentation of your boot loader about how to
  pass options to the kernel. The lilo procedure is also explained in
  the SCSI-HOWTO, available via FTP (user: anonymous) in
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO.)

  The CMD640 chip is also used on add-in cards by Acculogic, and on
  the "CSA-6400E PCI to IDE controller" that some people have. For
  details, read Documentation/ide.txt. 

  People with SCSI-only systems should say N here. If unsure, say Y.

CMD640 enhanced support
CONFIG_BLK_DEV_CMD640_ENHANCED
  This option includes support for setting/autotuning PIO modes and
  prefetch on CMD640 IDE interfaces. For details, read
  Documentation/ide.txt. If you have a CMD640 IDE interface and your
  BIOS does not already do this for you, then say Y here. Otherwise
  say N.

RZ1000 chipset bugfix/support
CONFIG_BLK_DEV_RZ1000
  The PC-Technologies RZ1000 IDE chip is used on many common 486 and
  Pentium motherboards, usually along with the "Neptune" chipset.
  Unfortunately, it has a rather nasty design flaw that can cause
  severe data corruption under many conditions. Say Y here to include
  code which automatically detects and corrects the problem under
  Linux. This may slow disk throughput by a few percent, but at least
  things will operate 100% reliably. 

  People with SCSI-only systems should say N here. If unsure, say Y.

Generic PCI IDE chipset support
CONFIG_BLK_DEV_IDEPCI
  Enable this for PCI systems which use IDE drive(s).
  This option helps the IDE driver to automatically detect and
  configure all PCI-based IDE interfaces in your system.
  
  People with SCSI-only systems should say N here; if unsure say Y.

Generic PCI bus-master DMA support
CONFIG_BLK_DEV_IDEDMA
  If your PCI system uses IDE drive(s) (as opposed to SCSI, say) and
  is capable of bus-master DMA operation (most Pentium PCI systems),
  you will want to say Y here to reduce CPU overhead. You can then use
  the "hdparm" utility to enable DMA for drives for which it was not
  enabled automatically. By default, DMA is not enabled automatically
  for these drives, but you can change that by saying Y to the
  following question "Use DMA by default when available". You can get
  the latest version of the hdparm utility via anonymous FTP from
  ftp://sunsite.unc.edu/pub/Linux/system/hardware/.

  Read the comments at the beginning of drivers/block/idedma.c and the
  file Documentation/ide.txt for more information. 

  It is safe to say Y to this question.

Winbond SL82c105 support
CONFIG_BLK_DEV_SL82C105
  If you have a Winbond SL82c105 IDE controller, say Y here to enable
  special configuration for this chip. This is common on various CHRP
  motherboards, but could be used elsewhere. If in doubt, say Y.

Boot off-board chipsets first support
CONFIG_BLK_DEV_OFFBOARD
  Normally, IDE controllers built into the motherboard (on-board
  controllers) are assigned to ide0 and ide1 while those on add-in PCI
  cards (off-board controllers) are relegated to ide2 and ide3.
  Answering Y here will reverse the situation, with off-board
  controllers on ide0/1 and on-board controllers on ide2/3. This can
  improve the usability of some boot managers such as LILO when
  booting from a drive on an off-board controller.

  Note that, if you say Y here, the order of the hd* devices will be
  rearranged which may require modification of fstab and other files.

  If in doubt, say N.

Use DMA by default when available
CONFIG_IDEDMA_AUTO
  Prior to kernel version 2.1.112, Linux used to automatically use
  DMA for IDE drives and chipsets which support it. Due to concerns
  about a couple of cases where buggy hardware may have caused damage,
  the default is now to NOT use DMA automatically. To revert to the
  previous behaviour, say Y to this question.

  If you suspect your hardware is at all flakey, say N here.
  Do NOT email the IDE kernel people regarding this issue!

  It is nearly always safe to say Y to this question.

Other IDE chipset support
CONFIG_IDE_CHIPSETS
  Say Y here if you want to include enhanced support for various IDE
  interface chipsets used on motherboards and add-on cards. You can
  then pick your particular IDE chip from among the following options.
  This enhanced support may be necessary for Linux to be able to
  access the 3rd/4th drives in some systems. It may also enable
  setting of higher speed I/O rates to improve system performance with
  these chipsets. Most of these also require special kernel boot
  parameters to actually turn on the support at runtime; you can find
  a list of these in the file Documentation/ide.txt.
  
  People with SCSI-only systems can say N here. 

Generic 4 drives/port support
CONFIG_BLK_DEV_4DRIVES
  Certain older chipsets, including the Tekram 690CD, use a single set
  of I/O ports at 0x1f0 to control up to four drives, instead of the
  customary two drives per port. Support for this can be enabled at
  runtime using the "ide0=four" kernel boot parameter if you say Y
  here.

DTC-2278 support
CONFIG_BLK_DEV_DTC2278
  This driver is enabled at runtime using the "ide0=dtc2278" kernel
  boot parameter. It enables support for the secondary IDE interface
  of the DTC-2278 card, and permits faster I/O speeds to be set as
  well. See the Documentation/ide.txt and dtc2278.c files for more
  info.

Holtek HT6560B support
CONFIG_BLK_DEV_HT6560B
  This driver is enabled at runtime using the "ide0=ht6560b" kernel
  boot parameter. It enables support for the secondary IDE interface
  of the Holtek card, and permits faster I/O speeds to be set as well.
  See the Documentation/ide.txt and ht6560b.c files for more info.

PROMISE DC4030 support (EXPERIMENTAL)
CONFIG_BLK_DEV_PDC4030
  This driver provides support for the secondary IDE interface and
  cache of Promise IDE chipsets, e.g. DC4030 and DC5030. This driver
  is known to incur timeouts/retries during heavy I/O to drives
  attached to the secondary interface. CDROM and TAPE devices are not
  supported yet. This driver is enabled at runtime using the
  "ide0=dc4030" kernel boot parameter. See the Documentation/ide.txt
  and drivers/block/pdc4030.c files for more info.

PS/2 ESDI hard disk support
CONFIG_BLK_DEV_PS2
  Say Y here if you have a PS/2 machine with a MCA bus and an ESDI
  hard disk.

Tekram TRM290 chipset support (EXPERIMENTAL)
CONFIG_BLK_DEV_TRM290
  This driver adds support for bus master DMA transfers
  using the Tekram TRM290 PCI IDE chip. Volunteers are
  needed for further tweaking and development.
  Please read the comments at the top of drivers/block/trm290.c.

OPTi 82C621 enhanced support (EXPERIMENTAL)
CONFIG_BLK_DEV_OPTI621
  This is a driver for the OPTi 82C621 EIDE controller.
  Please read the comments at the top of drivers/block/opti621.c.

NS87415 support (EXPERIMENTAL)
CONFIG_BLK_DEV_NS87415
  This driver adds detection and support for the NS87415 chip
  (used in SPARC64, among others).

  Please read the comments at the top of drivers/block/ns87415.c.

VIA82C586 chipset support (EXPERIMENTAL)
CONFIG_BLK_DEV_VIA82C586
  This adds initial timing settings for VIA (U)DMA onboard ide
  controllers that are ATA3 compliant. May work with ATA4 systems, but
  not tested to date.

  If you say Y here, you also need to say Y to "Use DMA by default
  when available", above.

  Please read the comments at the top of drivers/block/via82C586.c

  If unsure, say N.

CMD646 chipset support (EXPERIMENTAL)
CONFIG_BLK_DEV_CMD646
  Say Y here if you have an IDE controller like this.

HPT343 chipset support (EXPERIMENTAL)
CONFIG_BLK_DEV_HPT343
  This driver adds up to 4 more EIDE devices sharing a single
  interrupt. The HPT343 chipset in its current form is a non-bootable
  PCI UDMA controller. This driver requires dynamic tuning of the
  chipset during the ide-probe at boot. It is reported to support DVD
  II drives, by the manufacturer.

  Please read the comments at the top of drivers/block/hpt343.c

QDI QD6580 support
CONFIG_BLK_DEV_QD6580
  This driver is enabled at runtime using the "ide0=qd6580" kernel
  boot parameter. It permits faster I/O speeds to be set. See the
  files Documentation/ide.txt and qd6580.c for more info.

UMC 8672 support
CONFIG_BLK_DEV_UMC8672
  This driver is enabled at runtime using the "ide0=umc8672" kernel
  boot parameter. It enables support for the secondary IDE interface
  of the UMC-8672, and permits faster I/O speeds to be set as well.
  See the files Documentation/ide.txt and umc8672.c for more info.

ALI M14xx support
CONFIG_BLK_DEV_ALI14XX
  This driver is enabled at runtime using the "ide0=ali14xx" kernel
  boot parameter. It enables support for the secondary IDE interface
  of the ALI M1439/1443/1445/1487/1489 chipsets, and permits faster
  I/O speeds to be set as well. See the files Documentation/ide.txt
  and ali14xx.c for more info.

XT hard disk support
CONFIG_BLK_DEV_XD
  Very old 8 bit hard disk controllers used in the IBM XT computer
  will be supported if you say Y here. 

  If you want to compile the driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called xd.o. 

  It's pretty unlikely that you have one of these: say N.

Parallel port IDE device support
CONFIG_PARIDE
  There are many external CD-ROM and disk devices that connect through
  your computer's parallel port. Most of them are actually IDE devices
  using a parallel port IDE adapter. This option enables the PARIDE
  subsystem which contains drivers for many of these external drives.
  Read linux/Documentation/paride.txt for more information.

  If you have said Y to the "Parallel-port support" configuration
  option, you may share a single port between your printer and other
  parallel port devices. Answer Y to build PARIDE support into your
  kernel, or M if you would like to build it as a loadable module. If
  your parallel port support is in a loadable module, you must build
  PARIDE as a module. If you built PARIDE support into your kernel,
  you may still build the individual protocol modules and high-level
  drivers as loadable modules. If you build this support as a module,
  it will be called paride.o.

  To use the PARIDE support, you must say Y or M here and also to at
  least one high-level driver (e.g. "Parallel port IDE disks",
  "Parallel port ATAPI CD-ROMs", "Parallel port ATAPI disks" etc.) and
  to at least one protocol driver (e.g. "ATEN EH-100 protocol",
  "MicroSolutions backpack protocol", "DataStor Commuter protocol"
  etc.).

Parallel port IDE disks
CONFIG_PARIDE_PD
  This option enables the high-level driver for IDE-type disk devices 
  connected through a parallel port. If you chose to build PARIDE 
  support into your kernel, you may answer Y here to build in the 
  parallel port IDE driver, otherwise you should answer M to build 
  it as a loadable module. The module will be called pd.o. You 
  must also have at least one parallel port protocol driver in your 
  system. Among the devices supported by this driver are the SyQuest 
  EZ-135, EZ-230 and SparQ drives, the Avatar Shark and the backpack
  hard drives from MicroSolutions.

Parallel port ATAPI CD-ROMs
CONFIG_PARIDE_PCD
  This option enables the high-level driver for ATAPI CD-ROM devices
  connected through a parallel port. If you chose to build PARIDE
  support into your kernel, you may answer Y here to build in the
  parallel port ATAPI CD-ROM driver, otherwise you should answer M to
  build it as a loadable module. The module will be called pcd.o. You
  must also have at least one parallel port protocol driver in your
  system. Among the devices supported by this driver are the
  MicroSolutions backpack CD-ROM drives and the Freecom Power CD. If
  you have such a CD-ROM drive, you should also say Y or M to "ISO
  9660 CDROM filesystem support" below, because that's the filesystem
  used on CDROMs.

Parallel port ATAPI disks
CONFIG_PARIDE_PF
  This option enables the high-level driver for ATAPI disk devices
  connected through a parallel port. If you chose to build PARIDE
  support into your kernel, you may answer Y here to build in the
  parallel port ATAPI disk driver, otherwise you should answer M
  to build it as a loadable module. The module will be called pf.o.
  You must also have at least one parallel port protocol driver in
  your system. Among the devices supported by this driver are the
  MicroSolutions backpack PD/CD drive and the Imation Superdisk
  LS-120 drive.

Parallel port ATAPI tapes
CONFIG_PARIDE_PT
  This option enables the high-level driver for ATAPI tape devices
  connected through a parallel port. If you chose to build PARIDE
  support into your kernel, you may answer Y here to build in the
  parallel port ATAPI disk driver, otherwise you should answer M
  to build it as a loadable module. The module will be called pt.o.
  You must also have at least one parallel port protocol driver in
  your system. Among the devices supported by this driver is the
  parallel port version of the HP 5GB drive.

Parallel port generic ATAPI devices
CONFIG_PARIDE_PG
  This option enables a special high-level driver for generic ATAPI
  devices connected through a parallel port. The driver allows user
  programs, such as cdrecord, to send ATAPI commands directly to a
  device. 

  If you chose to build PARIDE support into your kernel, you may
  answer Y here to build in the parallel port generic ATAPI driver,
  otherwise you should answer M to build it as a loadable module. The
  module will be called pg.o.

  You must also have at least one parallel port protocol driver in
  your system.

  This driver implements an API loosely related to the generic SCSI
  driver. See /usr/include/linux/pg.h for details.

  You can obtain the most recent version of cdrecord from
  ftp://ftp.fokus.gmd.de/pub/unix/cdrecord/ . Versions 1.6.1a3 and
  later fully support this driver.

ATEN EH-100 protocol
CONFIG_PARIDE_ATEN
  This option enables support for the ATEN EH-100 parallel port IDE
  protocol. This protocol is used in some inexpensive low performance
  parallel port kits made in Hong Kong. If you chose to build PARIDE
  support into your kernel, you may answer Y here to build in the
  protocol driver, otherwise you should answer M to build it as a
  loadable module. The module will be called aten.o. You must also
  have a high-level driver for the type of device that you want to
  support.

MicroSolutions backpack protocol
CONFIG_PARIDE_BPCK
  This option enables support for the MicroSolutions backpack parallel
  port IDE protocol. If you chose to build PARIDE support into your
  kernel, you may answer Y here to build in the protocol driver,
  otherwise you should answer M to build it as a loadable module. The
  module will be called bpck.o. You must also have a high-level driver
  for the type of device that you want to support.

DataStor Commuter protocol
CONFIG_PARIDE_COMM
  This option enables support for the Commuter parallel port IDE 
  protocol from DataStor. If you chose to build PARIDE support
  into your kernel, you may answer Y here to build in the protocol
  driver, otherwise you should answer M to build it as a loadable
  module. The module will be called comm.o. You must also have
  a high-level driver for the type of device that you want to support.

DataStor EP-2000 protocol
CONFIG_PARIDE_DSTR
  This option enables support for the EP-2000 parallel port IDE 
  protocol from DataStor. If you chose to build PARIDE support
  into your kernel, you may answer Y here to build in the protocol
  driver, otherwise you should answer M to build it as a loadable
  module. The module will be called dstr.o. You must also have
  a high-level driver for the type of device that you want to support.

Shuttle EPAT/EPEZ protocol
CONFIG_PARIDE_EPAT
  This option enables support for the EPAT parallel port IDE protocol.
  EPAT is a parallel port IDE adapter manufactured by Shuttle
  Technology and widely used in devices from major vendors such as
  Hewlett-Packard, SyQuest, Imation and Avatar. If you chose to build
  PARIDE support into your kernel, you may answer Y here to build in
  the protocol driver, otherwise you should answer M to build it as a
  loadable module. The module will be called epat.o. You must also
  have a high-level driver for the type of device that you want to
  support.

Shuttle EPIA protocol
CONFIG_PARIDE_EPIA
  This option enables support for the (obsolete) EPIA parallel port
  IDE protocol from Shuttle Technology. This adapter can still be
  found in some no-name kits. If you chose to build PARIDE support
  into your kernel, you may answer Y here to build in the protocol
  driver, otherwise you should answer M to build it as a loadable
  module. The module will be called epia.o. You must also have a
  high-level driver for the type of device that you want to support.

FIT TD-2000 protocol
CONFIG_PARIDE_FIT2
  This option enables support for the TD-2000 parallel port IDE
  protocol from Fidelity International Technology. This is a simple
  (low speed) adapter that is used in some portable hard drives. If
  you chose to build PARIDE support into your kernel, you may answer Y
  here to build in the protocol driver, otherwise you should answer M
  to build it as a loadable module. The module will be called ktti.o.
  You must also have a high-level driver for the type of device that
  you want to support.

FIT TD-3000 protocol
CONFIG_PARIDE_FIT3
  This option enables support for the TD-3000 parallel port IDE
  protocol from Fidelity International Technology. This protocol is
  used in newer models of their portable disk, CD-ROM and PD/CD
  devices. If you chose to build PARIDE support into your kernel, you
  may answer Y here to build in the protocol driver, otherwise you
  should answer M to build it as a loadable module. The module will be
  called fit3.o. You must also have a high-level driver for the type
  of device that you want to support.

FreeCom power protocol
CONFIG_PARIDE_FRPW
  This option enables support for the Freecom power parallel port IDE
  protocol. If you chose to build PARIDE support into your kernel, you
  may answer Y here to build in the protocol driver, otherwise you
  should answer M to build it as a loadable module. The module will be
  called frpw.o. You must also have a high-level driver for the type
  of device that you want to support.

KingByte KBIC-951A/971A protocols
CONFIG_PARIDE_KBIC
  This option enables support for the KBIC-951A and KBIC-971A parallel
  port IDE protocols from KingByte Information Corp. KingByte's
  adapters appear in many no-name portable disk and CD-ROM products,
  especially in Europe. If you chose to build PARIDE support into your
  kernel, you may answer Y here to build in the protocol driver,
  otherwise you should answer M to build it as a loadable module. The
  module will be called kbic.o. You must also have a high-level driver
  for the type of device that you want to support.

KT PHd protocol
CONFIG_PARIDE_KTTI
  This option enables support for the "PHd" parallel port IDE protocol
  from KT Technology. This is a simple (low speed) adapter that is
  used in some 2.5" portable hard drives. If you chose to build PARIDE
  support into your kernel, you may answer Y here to build in the
  protocol driver, otherwise you should answer M to build it as a
  loadable module. The module will be called ktti.o. You must also
  have a high-level driver for the type of device that you want to
  support.

OnSpec 90c20 protocol
CONFIG_PARIDE_ON20
  This option enables support for the (obsolete) 90c20 parallel port 
  IDE protocol from OnSpec (often marketed under the ValuStore brand
  name). If you chose to build PARIDE support into your kernel, you 
  may answer Y here to build in the protocol driver, otherwise you 
  should answer M to build it as a loadable module. The module will 
  be called on20.o. You must also have a high-level driver for the 
  type of device that you want to support.

OnSpec 90c26 protocol
CONFIG_PARIDE_ON26
  This option enables support for the 90c26 parallel port IDE protocol
  from OnSpec Electronics (often marketed under the ValuStore brand
  name). If you chose to build PARIDE support into your kernel, you
  may answer Y here to build in the protocol driver, otherwise you
  should answer M to build it as a loadable module. The module will be
  called on26.o. You must also have a high-level driver for the type
  of device that you want to support.

Multiple devices driver support
CONFIG_BLK_DEV_MD
  This driver lets you combine several hard disk partitions into one
  logical block device. This can be used to simply append one
  partition to another one or to combine several redundant
  hard disks to a RAID1/4/5 device so as to provide protection against
  hard disk failures. This is called "Software RAID" since the
  combining of the partitions is done by the kernel. "Hardware RAID"
  means that the combining is done by a dedicated controller; if you
  have such a controller, you do not need to say Y here.

  More information about Software RAID on Linux is contained in the
  Software-RAID mini-HOWTO, available via FTP (user: anonymous) from
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO/mini. There you will also
  learn where to get the supporting user space utilities raidtools.

  If unsure, say N.

Linear (append) mode
CONFIG_MD_LINEAR
  If you say Y here, then your multiple devices driver will be able to
  use the so-called linear mode, i.e. it will combine the hard disk
  partitions by simply appending one to the other. 

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called linear.o.

  If unsure, say Y.

RAID-0 (striping) mode
CONFIG_MD_STRIPED
  If you say Y here, then your multiple devices driver will be able to
  use the so-called raid0 mode, i.e. it will combine the hard disk
  partitions into one logical device in such a fashion as to fill them
  up evenly, one chunk here and one chunk there. This will increase
  the throughput rate if the partitions reside on distinct disks. 

  Information about Software RAID on Linux is contained in the
  Software-RAID mini-HOWTO, available via FTP (user: anonymous) from
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO/mini. There you will also
  learn where to get the supporting user space utilities raidtools.

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called raid0.o.

  If unsure, say Y.

RAID-1 (mirroring) mode
CONFIG_MD_MIRRORING
  A RAID-1 set consists of several disk drives which are exact copies
  of each other. In the event of a mirror failure, the RAID driver
  will continue to use the operational mirrors in the set, providing
  an error free MD (multiple device) to the higher levels of the
  kernel. In a set with N drives, the available space is the capacity
  of a single drive, and the set protects against a failure of (N - 1)
  drives. 

  Information about Software RAID on Linux is contained in the
  Software-RAID mini-HOWTO, available via FTP (user: anonymous) from
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO/mini. There you will also
  learn where to get the supporting user space utilities raidtools.

  If you want to use such a RAID-1 set, say Y. This code is also
  available as a module called raid1.o ( = code which can be inserted
  in and removed from the running kernel whenever you want). If you
  want to compile it as a module, say M here and read
  Documentation/modules.txt.

  If unsure, say Y.

RAID-4/RAID-5 mode
CONFIG_MD_RAID5
  A RAID-5 set of N drives with a capacity of C MB per drive provides
  the capacity of C * (N - 1) drives, and protects against a failure
  of a single drive. For a given sector (row) number, (N - 1) drives
  contain data sectors, and one drive contains the parity protection.
  For a RAID-4 set, the parity blocks are present on a single drive,
  while a RAID-5 set distributes the parity across the drives in one
  of the available parity distribution methods.

  Information about Software RAID on Linux is contained in the
  Software-RAID mini-HOWTO, available via FTP (user: anonymous) from
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO/mini. There you will also
  learn where to get the supporting user space utilities raidtools.

  If you want to use such a RAID-4/RAID-5 set, say Y. This code is
  also available as a module called raid5.o ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  If you want to compile it as a module, say M here and read
  Documentation/modules.txt.

  If unsure, say Y.

Boot support (linear, striped)
CONFIG_MD_BOOT
  To boot with an initial linear or striped md device you have to
  answer Y here. For lilo and loadlin options see the file
  Documentation/md.txt.

Support for Deskstation RPC44 
CONFIG_DESKSTATION_RPC44
  This is a machine with a R4400 100 MHz CPU. To compile a Linux
  kernel that runs on these, say Y here. For details about Linux
  on the MIPS architecture, check out the Linux/MIPS FAQ on the WWW at
  http://lena.fnet.fr/ (To browse the WWW, you need to
  have access to a machine on the Internet that has a program like
  lynx or netscape).

Support for Acer PICA 1 chipset
CONFIG_ACER_PICA_61
  This is a machine with a R4400 133/150 MHz CPU. To compile a Linux
  kernel that runs on these, say Y here. For details about Linux on
  the MIPS architecture, check out the Linux/MIPS FAQ on the WWW at
  http://lena.fnet.fr/ (To browse the WWW, you need to have access to
  a machine on the Internet that has a program like lynx or netscape).

Support for Algorithmics P4032
CONFIG_ALGOR_P4032
  This is an evaluation board of the British company Algorithmics. The
  board uses the R4300 and a R5230 CPUs. For more information about
  this board see http://www.algor.co.uk.

Support for Mips Magnum 4000
CONFIG_MIPS_MAGNUM_4000
  This is a machine with a R4000 100 MHz CPU. To compile a Linux
  kernel that runs on these, say Y here. For details about Linux on
  the MIPS architecture, check out the Linux/MIPS FAQ on the WWW at
  http://lena.fnet.fr/ (To browse the WWW, you need to have access to
  a machine on the Internet that has a program like lynx or netscape).

Support for Olivetti M700
CONFIG_OLIVETTI_M700
  This is a machine with a R4000 100 MHz CPU. To compile a Linux
  kernel that runs on these, say Y here. For details about Linux on
  the MIPS architecture, check out the Linux/MIPS FAQ on the WWW at
  http://lena.fnet.fr/ (To browse the WWW, you need to have access to
  a machine on the Internet that has a program like lynx or netscape).

CPU type
CONFIG_CPU_R3000
  Give the type of your machine's MIPS CPU. For this question, it
  suffices to give a unique prefix of the option you want to choose.
  In case of doubt select the R3000 CPU. The kernel will then run on
  other MIPS machines but with slightly reduced performance.

Compile the kernel into the ECOFF object format
CONFIG_ECOFF_KERNEL
  Some machines require a kernel in the ECOFF format. You will have to
  say Y here for example if you want to use a Mips Magnum 3000 or a
  DECstation.

Generate little endian code
CONFIG_CPU_LITTLE_ENDIAN
  Some MIPS machines can be configured for either little or big endian
  byte order. These modes require different kernels. Say Y if your
  machine is little endian, N if it's a big endian machine.

Kernel support for IRIX binaries
CONFIG_BINFMT_IRIX
  If you say Y here, the kernel will support running of IRIX binaries.
  You will need IRIX libraries for this to work.

Networking support
CONFIG_NET
  Unless you really know what you are doing, you should say Y here.
  The reason is that some programs need kernel networking support even
  when running on a stand-alone machine that isn't connected to any
  other computer. If you are upgrading from an older kernel, you
  should consider updating your networking tools too because changes
  in the kernel and the tools often go hand in hand. The tools are
  contained in the package net-tools, the location and version number
  of which are given in Documentation/Changes.

Network aliasing
CONFIG_NET_ALIAS
  If you say Y here, you will be able to set multiple network
  addresses on the same low-level network device driver. This is
  typically used for services that act differently based on the
  address they listen on (e.g. "multihosting" or "virtual domains" or
  "virtual hosting services" on the web server apache and the ftp
  server wuftpd -- read the Virtual-Services-HOWTO, available via FTP
  (user: anonymous) from ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO)
  or for connecting to different logical networks through the same
  physical interface (most commonly an Ethernet networking card). See
  Documentation/networking/alias.txt for more info.

  This is the generic part, later when configuring network protocol
  options you will be asked for protocol-specific aliasing support,
  and you will have to say Y to at least one of them, most likely to
  "IP: aliasing support". If you need this feature (for any protocol,
  like IP) say Y; if unsure, say N.

Socket filtering
CONFIG_FILTER
  The Linux Socket Filter is derived from the Berkeley Packet Filter.
  If you say Y here, user-space programs can attach a filter to any
  socket and thereby tell the kernel that it should allow or disallow
  certain types of data to get through the socket. Linux Socket
  Filtering works on all socket types except TCP for now. See the text
  file linux/Documentation/networking/filter.txt for more information.
  If unsure, say N.

Network firewalls
CONFIG_FIREWALL
  A firewall is a computer which protects a local network from the
  rest of the world: all traffic to and from computers on the local
  net is inspected by the firewall first, and sometimes blocked or
  modified. The type of firewall you'll get if you say Y here is
  called a "packet filter": it can block network traffic based on
  type, origin and destination. By contrast, "proxy-based" firewalls
  are more secure but more intrusive and more bothersome to set up;
  they inspect the network traffic much more closely, modify it and
  have knowledge about the higher level protocols, which packet
  filters lack. They also often require changes in the programs
  running on the local clients. Proxy-based firewalls don't need
  support by the kernel, but they are often combined with packet
  filters, which only works if you say Y here.

  If you want to configure your Linux box as a packet filter firewall
  for a local network, say Y here. If your local network is TCP/IP
  based, you will then also have to say Y to "IP: firewalling", below.

  You also need to say Y here and to "IP firewalling" below in order
  to be able to use IP masquerading (i.e. local computers can chat
  with an outside host, but that outside host is made to think that it
  is talking to the firewall box -- makes the local network completely
  invisible to the outside world and avoids the need to allocate
  globally valid IP host addresses for the machines on the local net)
  and IP transparent proxying (makes the computers on the local
  network think they're talking to a remote computer, while in reality
  the traffic is redirected by your Linux firewall to a local proxy
  server).

  Make sure to say N to "Fast switching" below if you intend to say Y
  here.

  Chances are that you should say Y here for every machine which is
  run as a router and N for every regular host. If unsure, say N.

SYN flood protection
CONFIG_SYN_COOKIES
  Normal TCP/IP networking is open to an attack known as "SYN
  flooding". This denial-of-service attack prevents legitimate remote
  users from being able to connect to your computer during an ongoing
  attack and requires very little work from the attacker, who can
  operate from anywhere on the Internet.

  SYN cookies provide protection against this type of attack. If you
  say Y here, the TCP/IP stack will use a cryptographic challenge
  protocol known as "SYN cookies" to enable legitimate users to
  continue to connect, even when your machine is under attack. There
  is no need for the legitimate users to change their TCP/IP software;
  SYN cookies work transparently to them. For technical information
  about SYN cookies, check out
  ftp://koobera.math.uic.edu/pub/docs/syncookies-archive.

  If you are SYN flooded, the source address reported by the kernel is
  likely to have been forged by the attacker; it is only reported as
  an aid in tracing the packets to their actual source and should not
  be taken as absolute truth.

  SYN cookies may prevent correct error reporting on clients when the
  server is really overloaded. If this happens frequently better turn
  them off.

  If you say Y here, note that SYN cookies aren't enabled by default;
  you can enable them by saying Y to "/proc filesystem support" and
  "Sysctl support" below and executing the command

    echo 1 >/proc/sys/net/ipv4/tcp_syncookies 

  at boot time after the proc filesystem has been mounted.
  
  If unsure, say Y.

Sun floppy controller support
CONFIG_BLK_DEV_SUNFD
  This is support for floppy drives on Sun SPARC workstations. Say Y
  if you have a floppy drive, otherwise N. Easy.

Alpha system type
CONFIG_ALPHA_AVANTI
  Find out what type of Alpha motherboard you have. You will probably
  want to read the Linux/Alpha home page on the WWW at
  http://www.azstarnet.com/~axplinux/ (to browse the WWW, you need to
  have access to a machine on the Internet that has a program like
  lynx or netscape) and also the Alpha-HOWTO, available via FTP (user:
  anonymous) from ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO. For this
  question, it suffices to give a unique prefix of the option you want
  to choose. The choices:
  ** Avanti: This is for Mustang (AS200), M3 (AS250), Avanti (AS400)
     AlphaStations. These usually come with a TGA graphics adapter,
     so you'll want to say Y to "TGA Console support", below, if you
     have one of these.
  ** Alpha-XL: A.k.a. "Windows NT Dream Machine" :-) These usually 
     come with a TGA graphics adapter, so you'll want to say Y to "TGA
     Console support", below, if you have one of these.
  ** Jensen: a.k.a. DEC 2000 a.k.a. DECpc AXP 150, the oldest Alpha
     PC; it sports an EISA bus. The boot process on Jensen machines is
     difficult (no booting from floppies, MILO doesn't work). You need
     to have access to a second Linux workstation. The Linux/Alpha
     FAQ, accessible from the above mentioned WWW page, has details.
  ** Noname: a.k.a. AXPpci33, a PCI-bus based board using the 21066
     Alpha CPU, running at either 166 or 233 MHz. You also want to
     choose this option if you have a UDB (Universal Desktop Box
     a.k.a. Multia) machine.
  ** Cabriolet: also called AlphaPC64, a PCI-bus based board using the
     21064 Alpha CPU typically running at 275 or 300 MHz.
  ** EB66: "Evaluation Board"
  ** EB66+: "Evaluation Board"
###
### Add info about Platform2000, EB164, etc.
###

Using SRM as bootloader
CONFIG_ALPHA_SRM
  There are two different types of booting firmware on Alphas: SRM,
  which is command line driven, and ARC, which uses menus and arrow
  keys. Details about the Linux/Alpha booting process are contained in
  the Linux/Alpha FAQ, accessible on the WWW from
  http://www.azstarnet.com/~axplinux/ (To browse the WWW, you need to
  have access to a machine on the Internet that has a program like
  lynx or netscape).

  The usual way to load Linux on an Alpha machine is to use MILO
  (a bootloader that lets you pass command line parameters to the
  kernel just like lilo does for the x86 architecture) which can be
  loaded either from ARC or can be installed directly as a permanent
  firmware replacement from floppy (which requires changing a certain
  jumper on the motherboard). If you want to do either of these, say N
  here. If MILO doesn't work on your system (true for Jensen
  motherboards), you can bypass it altogether and boot Linux directly
  from an SRM console; say Y here in order to do that. Note that you
  won't be able to boot from an IDE disk using SRM. 

  If unsure, say N.

Non-standard serial port support
CONFIG_SERIAL_NONSTANDARD
  Say Y here if you have any non-standard serial boards -- boards
  which aren't supported using the standard "dumb" serial driver.
  This includes intelligent serial boards such as Cyclades,
  Digiboards, etc. These are usually used for systems that need many
  serial ports because they serve many terminals or dial-in
  connections. 

  Note that the answer to this question won't directly affect the
  kernel: saying N will just cause this configure script to skip all
  the questions about non-standard serial boards. 

  Most people can say N here.

Extended dumb serial driver options
CONFIG_SERIAL_EXTENDED
  If you wish to use any non-standard features of the standard "dumb"
  driver, say Y here. This includes HUB6 support, shared serial
  interrupts, special multiport support, support for more than the
  four COM 1/2/3/4 boards, etc. 

  Note that the answer to this question won't directly affect the
  kernel: saying N will just cause this configure script to skip all
  the questions about serial driver options. If unsure, say N.

Support more than 4 serial ports
CONFIG_SERIAL_MANY_PORTS
  Say Y here if you have dumb serial boards other than the four
  standard COM 1/2/3/4 ports. This may happen if you have an AST
  FourPort, Accent Async, Boca (read the Boca mini-HOWTO, available
  via FTP (user: anonymous) from
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO/mini), or other custom
  serial port hardware which acts similar to standard serial port
  hardware. If you only use the standard COM 1/2/3/4 ports, you can
  say N here to save some memory. You can also say Y if you have an
  "intelligent" multiport card such as Cyclades, Digiboards, etc.

Support for sharing serial interrupts
CONFIG_SERIAL_SHARE_IRQ
  Some serial boards have hardware support which allows multiple dumb
  serial ports on the same board to share a single IRQ. To enable
  support for this in the serial driver, say Y here.

Auto detect IRQ on standard ports (unsafe)
CONFIG_SERIAL_DETECT_IRQ
  Say Y here if you want the kernel to try to guess which IRQ
  to use for your serial port. 

  This is considered unsafe; it is far better to configure the IRQ in
  a boot script using the setserial command.

  If unsure, say N.

Support special multiport boards
CONFIG_SERIAL_MULTIPORT
  Some multiport serial ports have special ports which are used to
  signal when there are any serial ports on the board which need
  servicing. Say Y here to enable the serial driver to take advantage
  of those special I/O ports.

SGI Zilog85C30 serial support
CONFIG_SGI_SERIAL
  If you want to use your SGI's built-in serial ports under Linux,
  answer Y.

SGI graphics support
CONFIG_SGI_GRAPHICS
  If you have an SGI machine and you want to compile the graphics
  drivers, say Y here. This will include the code for the
  /dev/graphics and /dev/gfx drivers into the kernel for supporting
  virtualized access to your graphics hardware.

Support the Bell Technologies HUB6 card
CONFIG_HUB6
  Say Y here to enable support in the dumb serial driver to support
  the HUB6 card.

PCI support
CONFIG_PCI
  Find out whether you have a PCI motherboard. PCI is the name of a
  bus system, i.e. the way the CPU talks to the other stuff inside
  your box. Other bus systems are ISA, EISA, Microchannel (MCA) or
  VESA. If you have PCI, say Y, otherwise N. The PCI-HOWTO, available
  via FTP (user: anonymous) in
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO, contains valuable
  information about which PCI hardware does work under Linux and which
  doesn't.

  If some of your PCI devices don't work and you get a warning during
  boot time ("man dmesg"), please follow the instructions at the top
  of include/linux/pci.h.

PCI BIOS support
CONFIG_PCI_BIOS
  If you have enabled PCI bus support above, you probably want to
  allow Linux to use your PCI BIOS to detect the PCI devices and
  determine their configuration. Note: some old PCI motherboards have
  BIOS bugs and may crash if you say Y here -- for such motherboards,
  you should say N here and say Y to "PCI direct access support"
  instead.

  Except for some special cases (embedded systems with no BIOS), you
  probably should say Y here.

PCI direct access support
CONFIG_PCI_DIRECT
  If you don't want to use the PCI BIOS (e.g., because you run some
  embedded system with no BIOS at all) or Linux says it cannot use
  your PCI BIOS, you can enable direct PCI hardware here. It might
  fail if your machine is based on some unusual chipset, but it
  usually works. If both PCI BIOS and direct PCI access are enabled,
  the use of BIOS is preferred. If unsure, say Y.

PCI quirks
CONFIG_PCI_QUIRKS
  If you have a broken BIOS, it may fail to set up the PCI bus in a
  correct or optimal fashion. Saying Y here will correct that problem.
  If your BIOS is fine you can say N here for a very slightly smaller
  kernel. If unsure, say Y.

PCI bridge optimization (experimental)
CONFIG_PCI_OPTIMIZE
  This can improve access times for some hardware devices if you have
  a really broken BIOS and your computer uses a PCI bus system. Say Y
  if you think it might help, but try turning it off if you experience
  any problems with the PCI bus. N is the safe answer.

Backward-compatible /proc/pci
CONFIG_PCI_OLD_PROC
  Older kernels supported a /proc/pci file containing brief textual
  descriptions of all PCI devices in the system. Several programs
  tried to parse this file, so it became almost impossible to add new
  fields without breaking compatibility. So a new /proc interface to
  PCI (/proc/bus/pci) has been implemented and the old one is
  supported for compatibility reasons only; you'll get the old one (in
  addition to the new one) if you say Y here and to "/proc filesystem
  support", below. If unsure, say Y.

If you say Y here and to the "/proc filesystem support" below, you
  will get a directory /proc/pci with information about your PCI
  hardware. If unsure, say Y.

MCA support
CONFIG_MCA
  MicroChannel Architecture is found in some IBM PS/2 machines and
  laptops. It is a bus system similar to PCI or ISA. See
  Documentation/mca.txt (and especially the web page given there)
  before attempting to build an MCA bus kernel. Note that this is
  still experimental code.

System V IPC
CONFIG_SYSVIPC
  Inter Process Communication is a suite of library functions and
  system calls which let processes (running programs) synchronize
  and exchange information. It is generally considered to be a good
  thing, and some programs won't run unless you say Y here. In
  particular, if you want to run the DOS emulator dosemu under Linux
  (read the DOSEMU-HOWTO, available via FTP (user: anonymous) in
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO), you'll need to say Y
  here.
  
  You can find documentation about IPC with "info ipc" and also in
  section 6.4 of the Linux Programmer's Guide, available via FTP
  (user: anonymous) from
  ftp://sunsite.unc.edu/pub/Linux/docs/LDP/programmers-guide.

  Saying Y here enlarges your kernel by about 7 KB. Just say Y.

BSD Process Accounting
CONFIG_BSD_PROCESS_ACCT
  If you say Y here, a user level program will be able to instruct the
  kernel (via a special system call) to write process accounting
  information to a file: whenever a process exits, information about
  that process will be appended to the file by the kernel. The
  information includes things such as creation time, owning user,
  command name, memory usage, controlling terminal etc. (the complete
  list is in the struct acct in include/linux/acct.h). It is up to the
  user level program to do useful things with this information. This
  is generally a good idea, so say Y.
  
Sysctl support
CONFIG_SYSCTL
  The sysctl interface provides a means of dynamically changing
  certain kernel parameters and variables on the fly without requiring
  a recompile of the kernel or reboot of the system. The primary
  interface consists of a system call, but if the /proc filesystem is
  enabled, a tree of modifiable sysctl entries will be generated
  beneath the /proc/sys directory. They are explained in the files in
  Documentation/sysctl/. Note that enabling this option will enlarge
  the kernel by at least 8 KB. 

  As it is generally a good thing, you should say Y here unless
  building a kernel for install/rescue disks or your system is very
  limited in memory.

Kernel support for ELF binaries
CONFIG_BINFMT_ELF
  ELF (Executable and Linkable Format) is a format for libraries and
  executables used across different architectures and operating
  systems. Saying Y here will enable your kernel to run ELF binaries
  and enlarge it by about 2 KB. ELF support under Linux has now all
  but replaced the traditional Linux a.out formats (QMAGIC and ZMAGIC)
  because it is portable (this does *not* mean that you will be able
  to run executables from different architectures or operating systems
  however) and makes building run-time libraries very easy. Many new
  executables are distributed solely in ELF format. You definitely
  want to say Y here.

  Information about ELF is contained in the ELF HOWTO available via
  FTP (user: anonymous) at ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO.

  If you find that after upgrading from Linux kernel 1.2 and saying Y
  here, you still can't run any ELF binaries (they just crash), then
  you'll have to install the newest ELF runtime libraries, including
  ld.so (check the file Documentation/Changes for location and latest
  version).

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called binfmt_elf.o. Saying M or N here is dangerous because some
  crucial programs on your system might be in ELF format.

Kernel support for A.OUT binaries
CONFIG_BINFMT_AOUT
  A.out (Assembler.OUTput) is a set of formats for libraries and
  executables used in the earliest versions of UNIX. Linux used the
  a.out formats QMAGIC and ZMAGIC until they were replaced with the
  ELF format.

  As more and more programs are converted to ELF, the use for a.out
  will gradually diminish. If you disable this option it will reduce
  your kernel by one page. This is not much and by itself does not
  warrant removing support. However its removal is a good idea if you
  wish to ensure that absolutely none of your programs will use this
  older executable format. If you don't know what to answer at this
  point then answer Y. If someone told you "You need a kernel with
  QMAGIC support" then you'll have to say Y here. You may answer M to
  compile a.out support as a module and later load the module when you
  want to use a program or library in a.out format. The module will be
  called binfmt_aout.o. Saying M or N here is dangerous though,
  because some crucial programs on your system might still be in A.OUT
  format.

Kernel support for JAVA binaries (obsolete)
CONFIG_BINFMT_JAVA
  JAVA(tm) is an object oriented programming language developed by
  SUN; JAVA programs are compiled into "JAVA bytecode" binaries which
  can then be interpreted by run time systems on many different
  architectures and operating systems. These JAVA binaries are
  becoming a universal executable format.

  If you want to execute JAVA binaries, read the Java on Linux HOWTO,
  available via FTP (user: anonymous) at
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO. You will then need to
  install the run time system contained in the Java Developers Kit
  (JDK) as described in the HOWTO. This is completely independent of
  the Linux kernel and you do NOT need to say Y here for this to work.

  Saying Y here allows you to execute a JAVA bytecode binary just like
  any other Linux program: by simply typing in its name. (You also
  need to have the JDK installed for this to work). As more and more
  Java programs become available, the use for this will gradually
  increase. You can even execute HTML files containing JAVA applets
  (little embedded JAVA binaries) if those files start with the string
  "<!--applet-->". If you want to use this, say Y here and read
  Documentation/java.txt.

  If you disable this option it will reduce your kernel by about 4 KB.
  This is not much and by itself does not warrant removing support.
  However its removal is a good idea if you do not have the JDK
  installed. You may answer M for module support and later load the
  module when you install the JDK or find an interesting Java program
  that you can't live without. The module will be called
  binfmt_java.o.

  The complete functionality of this Java support is also provided by
  the more general option "Kernel support for MISC binaries",
  below. This option is therefore considered obsolete and you should
  say N here and Y to "Kernel support for MISC binaries" if you're 
  interested in transparently executing Java programs.

Kernel support for Linux/Intel ELF binaries
CONFIG_BINFMT_EM86
  Say Y here if you want to be able to execute Linux/Intel ELF
  binaries just like native Alpha binaries on your Alpha machine. For
  this to work, you need to have the emulator /usr/bin/em86 in place.
  You may answer M to compile the emulation support as a module and
  later load the module when you want to use a Linux/Intel binary. The
  module will be called binfmt_em86.o. If unsure, say Y.

Kernel support for MISC binaries
CONFIG_BINFMT_MISC
  If you say Y here, it will be possible to plug wrapper-driven binary
  formats into the kernel. You will like this especially when you use
  programs that need an interpreter to run like Java, Python or
  Emacs-Lisp. It's also useful if you often run DOS executables under
  the Linux DOS emulator DOSEMU (read the DOSEMU-HOWTO, available in
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO). Once you have
  registered such a binary class with the kernel, you can start one of
  those programs simply by typing in its name at a shell prompt; Linux
  will automatically feed it to the correct interpreter.

  If you say Y here, you won't need "Kernel support for JAVA binaries"
  (CONFIG_BINFMT_JAVA) or "Kernel support for Linux/Intel ELF
  binaries" (CONFIG_BINFMT_EM86), as this is a more general solution.

  You can do other nice things, too. Read
  Documentation/binfmt_misc.txt to learn how to use this feature, and
  Documentation/java.txt for information about how to include Java
  support.

  You must say Y to "proc filesystem support" (CONFIG_PROC_FS) to
  use this part of the kernel.

  You may say M here for module support and later load the module when
  you have use for it; the module is called binfmt_misc.o. If you
  don't know what to answer at this point, say Y.

Solaris binary emulation
CONFIG_SOLARIS_EMUL
  This is experimental code which will enable you to run (many)
  Solaris binaries on your SPARC Linux machine. 

  This code is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called solaris.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

Processor family
CONFIG_M386
  This is the processor type of your CPU. This information is used for
  optimizing purposes. In order to compile a kernel that can run on
  all x86 CPU types (albeit not optimally fast), you can specify
  "386" here. If you specify one of "486" or "Pentium" or "PPro",
  then the kernel will run on all x86 architectures except on 386.

  Here are the settings recommended for greatest speed:
   - "386" for the AMD/Cyrix/Intel 386DX/DXL/SL/SLC/SX and
     Cyrix/TI 486DLC/DLC2. Only "386" kernels will run on a 386 class
     machine.
   - "486" for the AMD/Cyrix/IBM/Intel DX4 or 486DX/DX2/SL/SX/SX2,
     AMD/Cyrix 5x86, NexGen Nx586 and UMC U5D or U5S
   - "Pentium" for the AMD K5, K6 and K6-3D, Cyrix MediaGX,
     Cyrix/IBM/National Semiconductor 6x86 and GXm, IDT Centaur
     WinChip C6, and Intel Pentium/Pentium MMX
   - "PPro" for the Cyrix/IBM/National Semiconductor 6x86MX, MII and
     Intel Pentium II/Pentium Pro

  In rare cases, it can make sense to specify "Pentium" even if
  running on a 486: the kernel will be smaller but slower.

  If you have a single processor machine, make sure that the line
  "SMP=1" at the top of the toplevel kernel Makefile is commented out;
  if you have a multi processor machine and want Linux to use all the
  processors in parallel (Symmetric Multi Processing), make sure that
  the line "SMP=1" is not commented out and read Documentation/smp and
  Documentation/IO-APIC.txt and the SMP-FAQ on the WWW at
  http://www.irisa.fr/prive/mentre/smp-faq/ (to browse the WWW, you
  need to have access to a machine on the Internet that has a program
  like lynx or netscape). People using multiprocessor machines should
  also say Y to "Enhanced Real Time Clock Support", below.

  If you want to compile a kernel that works on both single processor
  and multi processor machines, it is possible to set SMP=1. The
  "Advanced Power Management" code (see configuration option below)
  will not work in that scenario, though. In addition, the kernel will
  be slower on single processor machines, and other problems may
  appear, so this is not recommended.

  If you don't know what to do, choose "386".

VGA text console
CONFIG_VGA_CONSOLE
  Saying Y here will allow you to use Linux in text mode through a
  display that complies with the generic VGA standard. Virtually
  everyone wants that. 

  The program SVGATextMode can be used to utilize SVGA video cards to
  their full potential in text mode. Download it via FTP (user:
  anonymous) from ftp://sunsite.unc.edu/pub/Linux/utils/console.

  Say Y.

Video mode selection support
CONFIG_VIDEO_SELECT
  This enables support for text mode selection on kernel startup. If
  you want to take advantage of some high-resolution text mode your
  card's BIOS offers, but the traditional Linux utilities like
  SVGATextMode don't, you can say Y here and set the mode using the
  "vga=" option from your boot loader (lilo or loadlin) or set
  "vga=ask" which brings up a video mode menu on kernel startup. Try
  "man bootparam" or see the documentation of your boot loader about
  how to pass options to the kernel. The lilo procedure is also
  explained in the SCSI-HOWTO, available via FTP (user: anonymous) in
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO. Read
  Documentation/svga.txt for more information about the Video mode
  selection support. If unsure, say N.

Support for frame buffer devices (EXPERIMENTAL)
CONFIG_FB
  The frame buffer device provides an abstraction for the graphics
  hardware. It represents the frame buffer of some video hardware and
  allows application software to access the graphics hardware through
  a well-defined interface, so the software doesn't need to know
  anything about the low-level (hardware register) stuff. 

  Frame buffer devices work identically across the different
  architectures supported by Linux and make the implementation of
  application programs easier and more portable; at this point, an X
  server exists which uses the frame buffer device exclusively.
  On several non-X86 architectures, the frame buffer device is the
  only way to use the graphics hardware.
 
  The device is accessed through special device nodes, usually located
  in the /dev directory, i.e. /dev/fb*.

  You need an utility program called fbset to make full use of frame
  buffer devices. Please read Documentation/fb/framebuffer.txt and the
  Framebuffer-HOWTO at
  http://www.tahallah.demon.co.uk/programming/prog.html for more
  information.

  Say Y here and to the driver for your graphics board below if you
  are compiling a kernel for a non-x86 architecture. If you are
  compiling for the x86 architecture, you can say Y if you want to
  play with it, but it is not essential.

Acorn VIDC support
CONFIG_FB_ACORN
  This is the frame buffer device driver for the Acorn VIDC graphics
  chipset.

Apollo frame buffer device
CONFIG_FB_APOLLO
  This is the frame buffer device driver for the monochrome graphics
  hardware found in some Apollo workstations.

Amiga native chipset support
CONFIG_FB_AMIGA
  This is the frame buffer device driver for the builtin graphics
  chipset found in Amigas.

Amiga OCS chipset support
CONFIG_FB_AMIGA_OCS
  This enables support for the original Agnus and Denise video chips,
  found in the Amiga 1000 and most A500's and A2000's. If you intend
  to run Linux on any of these systems, say Y; otherwise say N.

Amiga ECS chipset support
CONFIG_FB_AMIGA_ECS
  This enables support for the Enhanced Chip Set, found in later
  A500's, later A2000's, the A600, the A3000, the A3000T and CDTV. If
  you intend to run Linux on any of these systems, say Y; otherwise
  say N.

Amiga AGA chipset support
CONFIG_FB_AMIGA_AGA
  This enables support for the Advanced Graphics Architecture (also
  known as the AGA or AA) Chip Set, found in the A1200, A4000, A4000T
  and CD32. If you intend to run Linux on any of these systems, say Y;
  otherwise say N.

Amiga CyberVision support
CONFIG_FB_CYBER
  This enables support for the Cybervision 64 graphics card from
  Phase5. Please note that its use is not all that intuitive (i.e. if
  you have any questions, be sure to ask!). Say N unless you have a
  Cybervision 64 or plan to get one before you next recompile the
  kernel. Please note that this driver DOES NOT support the
  Cybervision 64 3D card, as they use incompatible video chips.

Amiga CyberVision3D support (EXPERIMENTAL)
CONFIG_FB_VIRGE
  This enables support for the Cybervision 64/3D graphics card from
  Phase5. Please note that its use is not all that intuitive (i.e. if
  you have any questions, be sure to ask!). Say N unless you have a
  Cybervision 64/3D or plan to get one before you next recompile the
  kernel. Please note that this driver DOES NOT support the older
  Cybervision 64 card, as they use incompatible video chips.

Amiga RetinaZ3 support (EXPERIMENTAL)
CONFIG_FB_RETINAZ3
  This enables support for the Retina Z3 graphics card. Say N unless
  you have a Retina Z3 or plan to get one before you next recompile
  the kernel.

Amiga CLgen driver (EXPERIMENTAL)
CONFIG_FB_CLGEN
  This enables support for Cirrus Logic GD542x/543x based boards on
  Amiga: SD64, Piccolo, Picasso II/II+, Picasso IV, or EGS Spectrum.
  Say N unless you have such a graphics board or plan to get one
  before you next recompile the kernel.

Atari native chipset support
CONFIG_FB_ATARI
  This is the frame buffer device driver for the builtin graphics
  chipset found in Ataris.

Open Firmware frame buffer device support 
CONFIG_FB_OF
  Say Y if you want support with Open Firmware for your graphics
  board.

S3 Trio frame buffer device support 
CONFIG_FB_S3TRIO
  If you have a S3 Trio say Y. Say N for S3 Virge. 

ATI Mach64 display support
CONFIG_FB_ATY
  This driver supports graphics boards with the ATI Mach64 chips.

PowerMac "control" frame buffer device support
CONFIG_FB_CONTROL
  This driver supports a frame buffer for the graphics adapter in the
  Power Macintosh 7300 and others.

PowerMac "platinum" frame buffer device support
CONFIG_FB_PLATINUM
  This driver supports a frame buffer for the "platinum" graphics
  adapter in some Power Macintoshes.

PowerMac "valkyrie" frame buffer device support
CONFIG_FB_VALKYRIE
  This driver supports a frame buffer for the "valkyrie" graphics
  adapter in some Power Macintoshes.

Chips 65550 display support
CONFIG_FB_CT65550
  This is the frame buffer device driver for the Chips & Technologies
  65550 graphics chip in PowerBooks.

Mac frame buffer device
CONFIG_FB_MAC
  This is the frame buffer device driver for the graphics hardware in
  m68k Macintoshes.

HP300 frame buffer device
CONFIG_FB_HP300
  This is the frame buffer device driver for the Topcat graphics
  hardware found in HP300 workstations.

TGA frame buffer support
CONFIG_FB_TGA
  This is the frame buffer device driver for generic TGA graphic
  cards. Say Y if you have one of those.

VESA VGA graphics console
CONFIG_FB_VESA
  This is the frame buffer device driver for generic VESA 2.0
  compliant graphic cards. The older VESA 1.2 cards are not supported.
  You will get a boot time penguin logo at no additional cost. Please
  read Documentation/fb/vesafb.txt and the . If unsure, say Y.

Backward compatibility mode for Xpmac
CONFIG_FB_COMPAT_XPMAC
  If you use the Xpmac X server (common with mklinux), you'll need
  to enable this to use X. You should consider changing to XFree86
  which includes a server that supports the frame buffer device
  directly (XF68_FBDev).

Matrox unified accelerated driver
CONFIG_FB_MATROX
  Say Y here if you have Matrox Millenium, Matrox Millenium II, Matrox
  Mystique, Matrox Mystique 220 or Matrox Productiva G100 in your box.
  At this time,  G100 support  is untested and  G200 support  does not
  exist at all.  If you want,  you can select  M, in this  case module
  matroxfb.o will be created.
  You can pass parameters into driver if it is compiled into kernel by 
  specifying "video=matrox:XXX", where meaning of XXX you can found at 
  the end of main source file  (drivers/video/matroxfb.c) at boottime.
  Same  parameters can  be passed  into insmod  if driver  is used  as 
  module.

Matrox Millenium support
CONFIG_FB_MATROX_MILLENIUM
  Say Y here if you have Matrox Millenium or Matrox Millenium II in the
  box. If you  select "Advanced  lowlevel driver  options", you  should 
  check 4 bpp packed pixel, 8 bpp packed pixel, 16 bpp packed pixel, 24
  bpp  packed pixel  and 32  bpp packed  pixel. You  can also  use font 
  widths different from 8.

Matrox Mystique support
CONFIG_FB_MATROX_MYSTIQUE
  Say Y here if you have  Matrox Mystique or Matrox Mystique 220 in the 
  box.  If you  select  "Advanced lowlevel driver options",  you should 
  check  8 bpp packed pixel,  16 bpp packed pixel,  24 bpp packed pixel
  and  32 bpp  packed pixel.  You can  also use  font widths  different 
  from 8.

Matrox G100 support
CONFIG_FB_MATROX_G100
  Say Y here  if you have  Matrox Productiva G100  in the box. But THIS 
  DRIVER  IS NOT  TESTED BECAUSE  OF I  HAVE NO  G100  board  and  G100 
  technical sheets  are top secret at this time.  But driver should not 
  cause any damage to your computer.
  If you select  "Advanced lowlevel  driver options",  you should check
  8 bpp  packed pixel,  16 bpp  packed pixel,  24 bpp  packed pixel and 
  32 bpp packed pixel. You can also use font widths different from 8.

Matrox unified driver multihead support
CONFIG_FB_MATROX_MULTIHEAD
  Say Y  here if you  have more  than one (supported) Matrox  device in 
  computer  and you  want to  use all  of them.  If you  have only  one 
  device,  you should say N because of driver compiled with Y is larger 
  and a bit slower, especially on ia32 (ix86).
  If you compiled  driver as module,  you are VERY  interested in speed 
  and  you can  use 40KB  of memory  per each  Matrox  device,  you can 
  compile driver  without multihead  support and  instead of  it insmod 
  more module instances. In this case, you MUST specify parameter dev=N 
  to insmod, where N is sequential number of Matrox device  (0 = first, 
  1 = second and so on).
  
MDA text console (dual-headed)
CONFIG_MDA_CONSOLE
  Say Y here if you have an old MDA or monochrome Hercules graphics
  adapter in your system acting as a second head ( = video card). You
  will then be able to use two monitors with your Linux system. Do not
  say Y here if your MDA card is the primary card in your system; the
  normal VGA driver will handle it.
  
  This driver is also available as a module ( = code which can be
  inserted and removed from the running kernel whenever you want).
  The module will be called mdacon.o. If you want to compile it as
  a module, say M here and read Documentation/modules.txt.
  
  If unsure, say N.

SBUS and UPA frame buffers
CONFIG_FB_SBUS
  Say Y if you want support for SBUS or UPA based frame buffer device.

Creator/Creator3D support
CONFIG_FB_CREATOR
  This is the frame buffer device driver for the Creator and Creator3D
  graphics boards.

CGsix (GX,TurboGX) support
CONFIG_FB_CGSIX
  This is the frame buffer device driver for the CGsix (GX, TurboGX)
  frame buffer.

BWtwo support
CONFIG_FB_BWTWO
  This is the frame buffer device driver for the BWtwo frame buffer.

CGthree support
CONFIG_FB_CGTHREE
  This is the frame buffer device driver for the CGthree frame buffer.

TCX (SS4/SS5 only) support
CONFIG_FB_TCX
  This is the frame buffer device driver for the TCX 24/8bit frame
  buffer.

Virtual Frame Buffer support (ONLY FOR TESTING!)
CONFIG_FB_VIRTUAL
  This is a `virtual' frame buffer device. It operates on a chunk of
  unswapable kernel memory instead of on the memory of a graphics
  board. This means you cannot see any output sent to this frame
  buffer device, while it does consume precious memory. The main use
  of this frame buffer device is testing and debugging the frame
  buffer subsystem. Do NOT enable it for normal systems! To protect
  the innocent, it has to be enabled explicitly at boot time using the
  kernel option `video=vfb:'.

  This driver is also available as a module ( = code which can be
  inserted and removed from the running kernel whenever you want). The
  module will be called vfb.o. If you want to compile it as a module,
  say M here and read Documentation/modules.txt.
 
  If unsure, say N.

Advanced low level driver options
CONFIG_FBCON_ADVANCED
  The frame buffer console uses character drawing routines that are
  tailored to the specific organization of pixels in the memory of
  your graphics hardware. These are called the low level frame buffer
  console drivers. Note that they are used for text console output
  only; they are NOT needed for graphical applications.

  If you say N here, the needed low level drivers are automatically
  enabled, depending on what frame buffer devices you selected above.
  This is recommended for most users.

  If you say Y here, you have more fine-grained control over which low
  level drivers are enabled. You can e.g. leave out low level drivers
  for color depths you do not intend to use for text consoles.

  Low level frame buffer console drivers can be modules ( = code which
  can be inserted and removed from the running kernel whenever you
  want). The modules will be called fbcon-*.o. If you want to compile
  (some of) them as modules, read Documentation/modules.txt.
  
  If unsure, say N.

Monochrome support
CONFIG_FBCON_MFB
  This is the low level frame buffer console driver for monochrome
  (2 colors) packed pixels.

2 bpp packed pixels support
CONFIG_FBCON_CFB2
  This is the low level frame buffer console driver for 2 bits per
  pixel (4 colors) packed pixels.

4 bpp packed pixels support
CONFIG_FBCON_CFB4
  This is the low level frame buffer console driver for 4 bits per
  pixel (16 colors) packed pixels.

8 bpp packed pixels support
CONFIG_FBCON_CFB8
  This is the low level frame buffer console driver for 8 bits per
  pixel (256 colors) packed pixels.

16 bpp packed pixels support
CONFIG_FBCON_CFB16
  This is the low level frame buffer console driver for 15 or 16 bits
  per pixel (32K or 64K colors, also known as `hicolor') packed
  pixels.

24 bpp packed pixels support
CONFIG_FBCON_CFB24
  This is the low level frame buffer console driver for 24 bits per
  pixel (16M colors, also known as `truecolor') packed pixels. It is
  NOT for `sparse' 32 bits per pixel mode.

32 bpp packed pixels support
CONFIG_FBCON_CFB32
  This is the low level frame buffer console driver for 32 bits per
  pixel (16M colors, also known as `truecolor') sparse packed pixels.

Amiga bitplanes support
CONFIG_FBCON_AFB
  This is the low level frame buffer console driver for 1 to 8
  bitplanes (2 to 256 colors) on Amiga.

Amiga interleaved bitplanes support
CONFIG_FBCON_ILBM
  This is the low level frame buffer console driver for 1 to 8
  interleaved bitplanes (2 to 256 colors) on Amiga.

Atari interleaved bitplanes (2 planes) support
CONFIG_FBCON_IPLAN2P2
  This is the low level frame buffer console driver for 2 interleaved
  bitplanes (4 colors) on Atari.

Atari interleaved bitplanes (4 planes) support
CONFIG_FBCON_IPLAN2P4
  This is the low level frame buffer console driver for 4 interleaved
  bitplanes (16 colors) on Atari.

Atari interleaved bitplanes (8 planes) support
CONFIG_FBCON_IPLAN2P8
  This is the low level frame buffer console driver for 8 interleaved
  bitplanes (256 colors) on Atari.

Mac variable bpp packed pixels support
CONFIG_FBCON_MAC
  This is the low level frame buffer console driver for 1/2/4/8/16/32
  bits per pixel packed pixels on Mac. It supports variable font
  widths for low resolution screens.
  
VGA characters/attributes support
CONFIG_FBCON_VGA
  This is the low level frame buffer console driver for VGA text mode;
  it is used if you said Y to "VGA chipset support (text only)" above.

Parallel-port support
CONFIG_PARPORT
  If you want to use devices connected to your machine's parallel port
  (the connector at the computer with 25 holes), e.g. printer, Zip
  drive, PLIP link (Parallel Line Internet Protocol is mainly used to
  create a mini network by connecting the parallel ports of two local
  machines) etc., then you need to say Y here; please read
  Documentation/parport.txt and drivers/misc/BUGS-parport.

  For extensive information about drivers for many devices attaching
  to the parallel port see http://www.torque.net/linux-pp.html on the
  WWW (to browse the WWW, you need to have access to a machine on the
  Internet that has a program like lynx or netscape).

  It is possible to share a single parallel port among several devices
  and it is safe to compile all the corresponding drivers into the
  kernel. If you want to compile parallel port support as a module ( =
  code which can be inserted in and removed from the running kernel
  whenever you want), say M here and read Documentation/modules.txt.
  The module will be called parport.o. If you have more than one
  parallel port and want to specify which port and IRQ to be used by
  this driver at module load time, read
  Documentation/networking/net-modules.txt.

  If unsure, say Y.

PC-style hardware 
CONFIG_PARPORT_PC
  You should say Y here if you have a PC-style parallel port. All IBM
  PC compatible computers and some Alphas have PC-style parallel
  ports. This code is also available as a module. If you want to it as
  a module ( = code which can be inserted in and removed from the
  running kernel whenever you want), say M here and read
  Documentation/modules.txt. The module will be called parport_pc.o.
  If unsure, say Y.

Support foreign hardware
CONFIG_PARPORT_OTHER
  Say Y here if you want to be able to load driver modules to support
  other non-standard types of parallel ports. This causes a
  performance loss, so most people say N.

Sun Ultra/AX-style hardware 
CONFIG_PARPORT_AX
  Say Y here if you need support for the parallel port hardware on Sun
  Ultra/AX machines. This code is also available as a module (say M),
  called parport_ax.o. If in doubt, saying N is the safe plan.

Plug and Play support
CONFIG_PNP
  Plug and Play support allows the kernel to automatically configure
  some peripheral devices. Say Y to enable PnP.

Auto-probe for parallel devices
CONFIG_PNP_PARPORT
  Some IEEE-1284 conforming parallel-port devices can identify
  themselves when requested. Say Y to enable this feature, or M to
  compile it as a module (parport_ieee1284.o). If in doubt, say N.

Enable loadable module support
CONFIG_MODULES
  Kernel modules are small pieces of compiled code which can be
  inserted in or removed from the running kernel, using the programs
  insmod and rmmod. This is described in the file
  Documentation/modules.txt, including the fact that you have to say
  "make modules" in order to compile the modules that you chose during
  kernel configuration. Modules can be device drivers, file systems,
  binary executable formats, and so on. If you think that you may want
  to make use of modules with this kernel in the future, then say Y
  here. If unsure, say Y.

Set version information on all symbols for modules
CONFIG_MODVERSIONS
  Usually, modules have to be recompiled whenever you switch to a new
  kernel. Saying Y here makes it possible, and safe, to use the
  same modules even after compiling a new kernel; this requires the
  program modprobe. All the software needed for module support is in
  the modutils package (check the file Documentation/Changes for
  location and latest version). NOTE: if you say Y here but don't
  have the program genksyms (which is also contained in the above
  mentioned modutils package), then the building of your kernel will
  fail. If you are going to use modules that are generated from
  non-kernel sources, you would benefit from this option. Otherwise
  it's not that important. So, N ought to be a safe bet.

Kernel module loader support
CONFIG_KMOD
  Normally when you have selected some drivers and/or filesystems to
  be created as loadable modules, you also have the responsibility to
  load the corresponding modules (using the programs insmod or
  modprobe) before you can use them. If you say Y here however, the
  kernel will be able to load modules for itself: when a part of the
  kernel needs a module, it runs modprobe with the appropriate
  arguments, thereby loading the module if it is available. (This is a
  replacement for kerneld.) Say Y here and read about configuring it
  in Documentation/kmod.txt.

ARP daemon support (EXPERIMENTAL)
CONFIG_ARPD
  Normally, the kernel maintains an internal cache which maps IP 
  addresses to hardware addresses on the local network, so that
  Ethernet/Token Ring/ etc. frames are sent to the proper address on
  the physical networking layer. For small networks having a few
  hundred directly connected hosts or less, keeping this address
  resolution (ARP) cache inside the kernel works well. However,
  maintaining an internal ARP cache does not work well for very large
  switched networks, and will use a lot of kernel memory if TCP/IP
  connections are made to many machines on the network. 

  If you say Y here, the kernel's internal ARP cache will never grow
  to more than 256 entries (the oldest entries are expired in a LIFO
  manner) and communication will be attempted with the user space ARP
  daemon arpd. Arpd then answers the address resolution request either
  from its own cache or by asking the net.

  This code is experimental. If you do say Y here, you should obtain a
  copy of arpd from http://www.loran.com/~layes/arpd/index.html, and
  you should also say Y to "Kernel/User network link driver", below.
  If unsure, say N.

TCP/IP networking
CONFIG_INET
  These are the protocols used on the Internet and on most local
  Ethernets. The safest is to say Y here (which will enlarge your
  kernel by about 35 kB), since some programs (e.g. the X window
  system) use TCP/IP even if your machine is not connected to any
  other computer. You will get the so-called loopback device which
  allows you to ping yourself (great fun, that!). This option is 
  also necessary if you want to use the full power of term (term 
  is a program which gives you almost full Internet connectivity 
  if you have a regular dial up shell account on some Internet 
  connected Unix computer; for more information, read
  http://www.bart.nl/~patrickr/term-howto/Term-HOWTO.html).
  
  If you say Y here and also to "/proc filesystem support" and "Sysctl
  support" below, you can change various aspects of the behavior of
  the TCP/IP code by writing to the (virtual) files in
  /proc/sys/net/ipv4/*; the options are explained in the file
  Documentation/Networking/ip-sysctl.txt.

  Short answer: say Y.

IP: multicasting
CONFIG_IP_MULTICAST
  This is code for addressing several networked computers at once,
  enlarging your kernel by about 2 kB. You need multicasting if you
  intend to participate in the MBONE, a high bandwidth network on top
  of the Internet which carries audio and video broadcasts. More
  information about the MBONE is on the WWW at
  http://www.best.com/~prince/techinfo/mbone.html (to browse the WWW,
  you need to have access to a machine on the Internet that has a
  program like lynx or netscape). Information about the multicast
  capabilities of the various network cards is contained in
  Documentation/networking/multicast.txt. For most people, it's safe
  to say N.

IP: advanced router
CONFIG_IP_ADVANCED_ROUTER
  If you intend to run your Linux box mostly as a router, i.e. as a
  computer that forwards and redistributes network packets, say Y; you
  will then be presented with several options that allow more precise
  control about the routing process.

  The answer to this question won't directly affect the kernel:
  answering N will just cause this configure script to skip all the
  questions about advanced routing.

  Note that your box can only act as a router if you enable IP
  forwarding in your kernel; you can do that by saying Y to "/proc
  filesystem support" and "Sysctl support" below and executing the
  line

    echo "1" > /proc/sys/net/ipv4/ip_forward

  at boot time after the /proc filesystem has been mounted. 

  If you turn on IP forwarding, you will also get the rp_filter, which
  automatically rejects incoming packets if the routing table entry
  for their source address doesn't match the network interface they're
  arriving on. This has security advantages because it prevents the
  so-called IP spoofing, however it can pose problems if you use
  asymmetric routing (packets from you to a host take a different path
  than packets from that host to you) or if you operate a non-routing
  host which has several IP addresses on different interfaces. To turn
  rp_filter off use:

        echo 0 > /proc/sys/net/ipv4/conf/<device>/rp_filter
  or
        echo 0 > /proc/sys/net/ipv4/conf/all/rp_filter

  If unsure, say N here.

IP: policy routing
CONFIG_IP_MULTIPLE_TABLES
  Normally, a router decides what to do with a received packet based
  solely on the packet's final destination address. If you say Y here,
  the Linux router will also be able to take the packet's source
  address into account. Furthermore, if you also say Y to "IP: use TOS
  value as routing key" below, the TOS (Type-Of-Service) field of the
  packet can be used for routing decisions as well.

IP: equal cost multipath
CONFIG_IP_ROUTE_MULTIPATH
  Normally, the routing tables specify a single action to be taken in
  a deterministic manner for a given packet. If you say Y here
  however, it becomes possible to attach several actions to a packet
  pattern, in effect specifying several alternative paths to travel
  for those packets. The router considers all these paths to be of
  equal "cost" and chooses one of them in a non-deterministic fashion
  if a matching packet arrives.

IP: use TOS value as routing key
CONFIG_IP_ROUTE_TOS
  The header of every IP packet carries a TOS (Type of Service) value
  with which the packet requests a certain treatment, e.g. low latency
  (for interactive traffic), high throughput, or high reliability. If
  you say Y here, you will be able to specify different routes for
  packets with different TOS values.

IP: verbose route monitoring
CONFIG_IP_ROUTE_VERBOSE
  If you say Y here, which is recommended, then the kernel will print
  verbose messages regarding the routing, for example warnings about
  received packets which look strange and could be evidence of an
  attack or a misconfigured system somewhere. The information is
  handled by the klogd daemon which is responsible for kernel messages
  ("man klogd").

IP: large routing tables
CONFIG_IP_ROUTE_LARGE_TABLES
  If you have routing zones that grow to more than about 64 entries,
  you may want to say Y here to speed up the routing process.

IP: fast network address translation
CONFIG_IP_ROUTE_NAT
  If you say Y here, your router will be able to modify source and
  destination addresses of packets that pass through it, in a manner
  you specify.

IP: optimize as router not host
CONFIG_IP_ROUTER
  Some Linux network drivers use a technique called copy and checksum
  to optimize host performance. For a machine which acts as a router
  most of the time and is forwarding most packets to another host this
  is however a loss. If you say Y here, copy and checksum will be
  switched off. In the future, it may make other changes which
  optimize for router operation.

  Note that your box can only act as a router if you enable IP
  forwarding in your kernel; you can do that by saying Y to "/proc
  filesystem support" and "Sysctl support" below and executing the
  line

    echo "1" > /proc/sys/net/ipv4/ip_forward

  at boot time after the /proc filesystem has been mounted. You can do
  that even if you say N here.

  If unsure, say N here.

IP: firewalling
CONFIG_IP_FIREWALL
  If you want to configure your Linux box as a packet filter firewall
  for a local TCP/IP based network, say Y here. You may want to read
  the FIREWALL-HOWTO, available via FTP (user: anonymous) in
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO.

  Also, you will need the ipchains tool (available on the WWW at
  http://www.adelaide.net.au/~rustcorp/) to allow selective blocking
  of Internet traffic based on type, origin and destination. 
  Note that the Linux firewall code has changed and the old program
  called ipfwadm won't work anymore.

  The type of firewall provided by ipchains and this kernel support is
  called a "packet filter". The other type of firewall, a
  "proxy-based" one, is more secure but more intrusive and more
  bothersome to set up; it inspects the network traffic much more
  closely, modifies it and has knowledge about the higher level
  protocols, which a packet filter lacks. Moreover, proxy-based
  firewalls often require changes to the programs running on the local
  clients. Proxy-based firewalls don't need support by the kernel, but
  they are often combined with a packet filter, which only works if
  you say Y here.

  The firewalling code will only work if IP forwarding is enabled in
  your kernel. You can do that by saying Y to "/proc filesystem
  support" and "Sysctl support" below and executing the line

    echo "1" > /proc/sys/net/ipv4/ip_forward

  at boot time after the /proc filesystem has been mounted. 

  You need to say Y to "IP firewalling" in order to be able to use IP
  masquerading (masquerading means that local computers can chat with
  an outside host, but that outside host is made to think that it is
  talking to the firewall box -- makes the local network completely
  invisible to the outside world and avoids the need to allocate
  globally valid IP host addresses for the machines on the local net)
  and IP packet logging and accounting (keeping track of what is using
  all your network bandwidth) and IP transparent proxying (makes the
  computers on the local network think they're talking to a remote
  computer, while in reality the traffic is redirected by your Linux
  firewall to a local proxy server).

  If in doubt, say N here.

IP: firewall packet netlink device
CONFIG_IP_FIREWALL_NETLINK
  If you say Y here, then the first 128 bytes of each packet that hit
  your Linux firewall and was blocked are passed on to optional user
  space monitoring software that can then look for attacks and take
  actions such as paging the administrator of the site.

  To use this, you need to create a character special file under /dev
  with major number 36 and minor number 3 using mknod ("man mknod"),
  and you need (to write) a program that reads from that device and
  takes appropriate action.

  With the ipchains tool you can specify which packets you want to go
  to this device, as well as how many bytes from each packet.

IP: kernel level autoconfiguration
CONFIG_IP_PNP
  This enables automatic configuration of IP addresses of devices and
  of the routing table during kernel boot, based on either information
  supplied at the kernel command line or by BOOTP or RARP protocols.
  You need to say Y only for diskless machines requiring network
  access to boot (in which case you want to say Y to "Root file system
  on NFS" as well), because all other machines configure the network
  in their startup scripts.

BOOTP support
CONFIG_IP_PNP_BOOTP
  If you want your Linux box to mount its whole root filesystem from
  some other computer over the net via NFS and you want the IP address
  of your computer to be discovered automatically at boot time using
  the BOOTP protocol (a special protocol designed for doing this job),
  say Y here. In case the boot ROM of your network card was designed
  for booting Linux and does BOOTP itself, providing all necessary
  information on the kernel command line, you can say N here. If
  unsure, say Y. Note that if you want to use BOOTP, a BOOTP server
  must be operating on your network. Read Documentation/nfsroot.txt
  for details.

RARP support
CONFIG_IP_PNP_RARP
  If you want your Linux box to mount its whole root filesystem from
  some other computer over the net via NFS and you want the IP address
  of your computer to be discovered automatically at boot time using
  the RARP protocol (an older protocol which is being obsoleted by
  BOOTP and DHCP), say Y here. Note that if you want to use RARP, a
  RARP server must be operating on your network. Read
  Documentation/nfsroot.txt for details.

IP: tunneling
CONFIG_NET_IPIP
  Tunneling means encapsulating data of one protocol type within
  another protocol and sending it over a channel that understands the
  encapsulating protocol. This particular tunneling driver implements
  encapsulation of IP within IP, which sounds kind of pointless, but
  can be useful if you want to make your (or some other) machine
  appear on a different network than it physically is, or to use
  mobile-IP facilities (allowing laptops to seamlessly move between
  networks without changing their IP addresses; check out
  http://anchor.cs.binghamton.edu/~mobileip/LJ/index.html). 

  Saying Y to this option will produce two modules ( = code which can
  be inserted in and removed from the running kernel whenever you
  want), one encapsulator called tunnel.o and one decapsulator called
  ipip.o. You can read details in drivers/net/README.tunnel. Most
  people won't need this and can say N.

IP: GRE tunnels over IP
CONFIG_NET_IPGRE
  Tunneling means encapsulating data of one protocol type within
  another protocol and sending it over a channel that understands the
  encapsulating protocol. This particular tunneling driver implements
  GRE (Generic Routing Encapsulation) and at this time allows
  encapsulating of IPv4 or IPv6 over existing IPv4 infrastructure.
  This driver is useful if the other endpoint is a Cisco router: Cisco
  likes GRE much better than the other Linux tunneling driver ("IP:
  tunneling" above). In addition, GRE allows multicast redistribution
  through the tunnel.

IP: broadcast GRE over IP
CONFIG_NET_IPGRE_BROADCAST
  One application of GRE/IP is to construct a broadcast WAN (Wide Area
  Network), which looks like a normal Ethernet LAN (Local Area
  Network), but can be distributed all over the Internet. If you want
  to do that, say Y here and to "IP: multicast routing" below.

IP: transparent proxying
CONFIG_IP_TRANSPARENT_PROXY
  This enables your Linux firewall to transparently redirect any
  network traffic originating from the local network and destined
  for a remote host to a local server, called a "transparent proxy
  server". This makes the local computers think they are talking to
  the remote end, while in fact they are connected to the local
  proxy. Redirection is activated by defining special input firewall
  rules (using the ipchains utility) and/or by doing an appropriate
  bind() system call.

IP: masquerading
CONFIG_IP_MASQUERADE
  If one of the computers on your local network for which your Linux
  box acts as a firewall wants to send something to the outside, your
  box can "masquerade" as that computer, i.e. it forwards the traffic
  to the intended outside destination, but makes it look like it came
  from the firewall box itself. It works both ways: if the outside
  host replies, the Linux firewall will silently forward the traffic
  to the corresponding local computer. This way, the computers on your
  local net are completely invisible to the outside world, even though
  they can reach the outside and can be reached. This makes it
  possible to have the computers on the local network participate on
  the Internet even if they don't have officially registered IP
  addresses. (This last problem can also be solved by connecting the
  Linux box to the Internet using SLiRP [SLiRP is a SLIP/PPP emulator
  that works if you have a regular dial up shell account on some UNIX
  computer; get it via FTP (user: anonymous) from
  ftp://sunsite.unc.edu/pub/Linux/system/network/serial/ ].) 

  The IP masquerading code will only work if IP forwarding is enabled
  in your kernel; you can do this by saying Y to "/proc
  filesystem support" and "Sysctl support" below and then executing a
  line like

    echo "1" > /proc/sys/net/ipv4/ip_forward

  from a boot time script after the /proc filesystem has been mounted.

  Details on how to set things up are contained in the IP Masquerade
  mini-HOWTO, available via FTP (user: anonymous) from
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO/mini; there's also some
  information on the WWW at
  http://www.tor.shaw.wave.ca/~ambrose/kernel21.html. 

  If you say Y here, you should also say Y to "IP: always defragment",
  below. 

  If you say Y here, then the modules ip_masq_ftp.o (for ftp file
  transfers), ip_masq_irc.o (for irc chats), ip_masq_quake.o (you
  guessed it), ip_masq_vdolive.o (for VDOLive video connections),
  ip_masq_cuseeme.o (for CU-SeeMe broadcasts) and ip_masq_raudio.o
  (for RealAudio downloads) will automatically be compiled. They are
  needed to make masquerading for these protocols work. Modules are
  pieces of code which can be inserted in and removed from the running
  kernel whenever you want; read Documentation/modules.txt for
  details.

IP: ICMP masquerading
CONFIG_IP_MASQUERADE_ICMP
  The basic masquerade code described for "IP: masquerading" above
  only handles TCP or UDP packets (and ICMP errors for existing
  connections). This option adds additional support for masquerading
  ICMP packets, such as ping or the probes used by the Windows 95
  tracert program.

  If you want this, say Y. 

IP: masquerading special modules support
CONFIG_IP_MASQUERADE_MOD
  This provides support for special modules that can modify the
  rewriting rules used when masquerading. Please not that this feature
  adds a little overhead in the input packet processing chain.

  Examples of such modules are ipautofw (allowing the masquerading of
  protocols which don't have their own protocol helpers) and port
  forwarding (making an incoming port of a local computer visible
  through the masquerading host).

  You will need the user space program "ipmasqadm" to use these
  additional modules; you can download it from
  http://juanjox.home.ml.org/

  All this additional code is still under development and so is
  currently marked EXPERIMENTAL.
  
  If you want to try, for example, PORT FORWARDING, say Y.

IP: ipautofw masquerade support (Experimental)
CONFIG_IP_MASQUERADE_IPAUTOFW
  ipautofw is a program which allows the masquerading of protocols
  which do not (as yet) have their own protocol helpers. Information
  and source for ipautofw is available via FTP (user: anonymous) from
  ftp://ftp.netis.com/pub/members/rlynch/

  You will also need the ipmasqadm tool available from
  http://juanjox.home.ml.org .

  The ipautofw code is still under development and so is currently
  marked EXPERIMENTAL. If you want to try it, say Y.

  This code is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called ip_masq_autofw.o. If you want to compile
  it as a module, say M here and read Documentation/modules.txt.

IP: ipportfw masquerade support
CONFIG_IP_MASQUERADE_IPPORTFW
  Port Forwarding is an addition to IP Masquerading which allows some
  forwarding of packets from outside to inside a firewall on given
  ports. This could be useful if, for example, you want to run a web
  server behind the firewall or masquerading host and this web server
  should be visible to the outside world. An external client connects
  to port 80 of the firewall, the firewall forwards requests to this
  port to the web server, the web server handles the request and the
  results are sent through the firewall to the original client. The
  client thinks that the firewall machine itself is running the web
  server.

  Information about it is available from
  http://www.monmouth.demon.co.uk/ipsubs/portforwarding.html (to
  browse the WWW, you need to have access to a machine on the Internet
  that has a program like lynx or netscape). For general info, please
  see ftp://ftp.compsoc.net/users/steve/ipportfw/linux21/

  You will need the user space program "ipmasqadm" which can be
  downloaded from http://juanjox.home.ml.org/

  The portfw code is still under development and so is currently
  marked EXPERIMENTAL. If you want to try it, say Y.

  This code is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called ip_masq_portfw.o. If you want to compile
  it as a module, say M here and read Documentation/modules.txt.

IP: ipmarkfw masquerade support
CONFIG_IP_MASQUERADE_IPMARKFW
  This provides functionality equivalent to port forwarding, the
  difference is that Mark Forwarding uses "firewalling mark" to select
  which packets must forward (see ipchains(8), "-m" argument).

  The markfw code is still under development and so is currently
  marked EXPERIMENTAL. If you want to try it, say Y.

  This code is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called ip_masq_markfw.o. If you want to compile
  it as a module, say M here and read Documentation/modules.txt.

IP: always defragment 
CONFIG_IP_ALWAYS_DEFRAG
  If you say Y here, then all incoming fragments (parts of IP packets
  that arose when some host between origin and destination decided
  that the packets were too large and cut them into pieces) will be
  reassembled (defragmented) before being processed, even if they are
  about to be forwarded.

  This option is highly recommended if you have said Y to "IP:
  masquerading" because that facility requires that second and further
  fragments can be related to TCP or UDP port numbers, which are only
  stored in the first fragment.

  When using "IP: firewalling" support, you might also want to say Y
  here, to have a more reliable firewall (otherwise second and further
  fragments must be dealt with by the firewall, which can be tricky).

  When using "IP: transparent proxying", this option is implicit,
  although it is safe to say Y here.

  Only say Y here if running either a firewall that is the sole link
  to your network or a transparent proxy; never ever say Y here for a
  normal router or host.

IP: aliasing support
CONFIG_IP_ALIAS
  Sometimes it is useful to give several IP addresses to a single
  physical network interface (serial port or Ethernet card). The most
  common case is that you want to serve different WWW or ftp documents
  to the outside according to which of your host names was used to
  connect to you. This is called "multihosting" or "virtual domains"
  or "virtual hosting services" and is explained in detail on the WWW
  at http://www.thesphere.com/~dlp/TwoServers/ (to browse the WWW, you
  need to have access to a machine on the Internet that has a program
  like lynx or netscape) and also in the Virtual-Hosting-HOWTO,
  available via FTP (user: anonymous) from
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO.

  Another scenario would be
  that there are two logical networks living on your local Ethernet
  and you want to access them both with the same Ethernet card. This
  can be done if you say Y here.

  The configuration of these alias addresses is done with a special
  name syntax explained in Documentation/networking/alias.txt and in
  the IP-Alias mini-HOWTO. If you want this, say Y. Most people don't
  need it and say N.

IP: multicast routing
CONFIG_IP_MROUTE
  This is used if you want your machine to act as a router for IP
  packets that have several destination addresses. It is needed on the
  MBONE, a high bandwidth network on top of the Internet which carries
  audio and video broadcasts. In order to do that, you would most
  likely run the program mrouted. Information about the multicast
  capabilities of the various network cards is contained in
  Documentation/networking/multicast.txt. If you haven't heard about
  it, you don't need it.

IP: PIM-SM version 1 support
CONFIG_IP_PIMSM_V1
  Kernel side support for Sparse Mode PIM (Protocol Independent
  Multicast) version 1. This multicast routing protocol is used widely
  because Cisco supports it. You need special software to use it
  (pimd-v1). Please see http://netweb.usc.edu/pim/ for more
  information about PIM (to browse the WWW, you need to have access to
  a machine on the Internet that has a program like lynx or
  netscape). 

  Say Y if you want to use PIM-SM v1. Note that you can say N here if
  you just want to use Dense Mode PIM.

IP: PIM-SM version 2 support
CONFIG_IP_PIMSM_V2
  Kernel side support for Sparse Mode PIM version 2. In order to use
  this, you need an experimental routing daemon supporting it (pimd or
  gated-5). This routing protocol is not used widely, so say N unless
  you want to play with it.

PC/TCP compatibility mode
CONFIG_INET_PCTCP
  If you have been having difficulties telnetting to your Linux
  machine from a DOS system that uses (broken) PC/TCP networking
  software (all versions up to OnNet 2.0) over your local Ethernet try
  saying Y here. Everyone else says N. 

  People having problems with NCSA telnet should see the file
  linux/Documentation/networking/ncsa-telnet.

Reverse ARP server
CONFIG_INET_RARP
  If there are (usually diskless or portable) machines on your local
  network that know their hardware Ethernet addresses but don't know
  their IP addresses upon startup, they can send out a Reverse Address
  Resolution Protocol (RARP) request to find out their own IP
  addresses. Diskless Sun 3 machines use this procedure at boot time,
  and diskless Linux boxes can be configured to do it as well.
  
  If you want your Linux box to be able to *answer* such requests,
  answer Y here; you'll then have to run the program rarp ("man rarp")
  on your box.

  If you actually want to use a diskless Sun 3 machine as an X
  terminal to Linux, say Y here and fetch Linux-Xkernel from
  ftp://sunsite.unc.edu/pub/Linux/system/network/boot.net/.

  Superior solutions to the problem of booting and configuring
  machines over a net connection are given by the protocol BOOTP and
  its successor DHCP. See the DHCP FAQ
  http://web.syr.edu/~jmwobus/comfaqs/dhcp.faq.html for details (to
  browse the WWW, you need to have access to a machine on the Internet
  that has a program like lynx or netscape).

  If you want to compile RARP support as a module ( = code which can
  be inserted in and removed from the running kernel whenever you
  want), say M here and read Documentation/modules.txt. The module
  will be called rarp.o. 

  If you don't understand a word of the above, say N and rest in
  peace.

Assume subnets are local
CONFIG_INET_SNARL
  Say Y if you are on a subnetted network with all machines connected
  by Ethernet segments only, as this option optimizes network access
  for this special case. If there are other connections, e.g. SLIP
  links, between machines of your IP network, say N. If in doubt,
  answer N. The PATH mtu discovery facility will cover most cases
  anyway.

Path MTU Discovery (normally enabled)
CONFIG_PATH_MTU_DISCOVERY
  MTU (maximal transfer unit) is the size of the chunks we send out
  over the net. "Path MTU Discovery" means that, instead of always
  sending very small chunks, we start out sending big ones and if we
  then discover that some host along the way likes its chunks smaller,
  we adjust to a smaller size. This is good, so most people say Y
  here.

  However, some DOS software (versions of DOS NCSA telnet and Trumpet
  Winsock in PPP mode) is broken and won't be able to connect to your
  Linux machine correctly in all cases (especially through a terminal
  server) unless you say N here. See
  Documentation/networking/ncsa-telnet for the location of fixed NCSA
  telnet clients. If in doubt, say Y.

Disable NAGLE algorithm (normally enabled)
CONFIG_TCP_NAGLE_OFF
  The NAGLE algorithm works by requiring an acknowledgment before
  sending small IP frames (packets). This keeps tiny telnet and
  rlogin packets from congesting Wide Area Networks. Most people
  strongly recommend to say N here, thereby leaving NAGLE
  enabled. Those programs that would benefit from disabling this
  facility can do it on a per connection basis themselves.

IP: Drop source routed frames
CONFIG_IP_NOSR
  Usually, the originator of an IP frame (packet) specifies only the
  destination, and the hosts along the way do the routing, i.e. they
  decide how to forward the frame. However, there is a feature of the
  IP protocol that allows to specify the full route for a given frame
  already at its origin. A frame with such a fully specified route is
  called "source routed". The question now is whether we should honour
  these route requests when such frames arrive, or if we should drop
  all those frames instead. Honouring them can introduce security
  problems (and is rarely a useful feature), and hence it is
  recommended that you say Y here unless you really know what you're
  doing.

IP: Allow large windows (not recommended if <16 MB of memory)
CONFIG_SKB_LARGE
  On high speed, long distance networks the performance limit on
  networking becomes the amount of data the sending machine can buffer
  until the other end confirms its reception. (At 45 Mbit/second there
  are a lot of bits between New York and London ...). If you say Y
  here, bigger buffers can be used which allows larger amounts of data
  to be "in flight" at any given time. It also means a user process
  can require a lot more memory for network buffers and thus this
  option is best used only on machines with 16 MB of memory or higher.
  Unless you are using long links with end to end speeds of over 2
  Mbit a second or satellite links this option will make no difference
  to performance.

Unix domain sockets
CONFIG_UNIX
  This includes Unix domain sockets, the standard Unix mechanism for
  establishing and accessing network connections. Many commonly used
  programs such as the X Window system and syslog use these sockets
  even if your machine is not connected to any network. Unless you are
  working on an embedded system or something similar, you therefore
  definitely want to say Y here.

  The socket support is also available as a module ( = code which can
  be inserted in and removed from the running kernel whenever you
  want). The module will be called unix.o. If you want to compile it
  as a module, say M here and read Documentation/modules.txt. If you
  try building this as a module and you have said Y to "Kernel module
  loader support" above, be sure to add 'alias net-pf-1 unix' to your
  /etc/conf.modules file.

  If unsure, say Y.

The IPv6 protocol
CONFIG_IPV6
  This is experimental support for the next version of the Internet
  Protocol: IP version 6 (also called IPng "IP next generation"). 
  Features of this new protocol include: expanded address space,
  authentication and privacy, and seamless interoperability with the
  current version of IP (IP version 4). For general information about
  IPv6, see http://playground.sun.com/pub/ipng/html/ipng-main.html (to
  browse the WWW, you need to have access to a machine on the Internet
  that has a program like lynx or netscape); for specific information
  about IPv6 under Linux read the HOWTO at http://www.terra.net/ipv6/
  and the file net/ipv6/README in the kernel source. 

  If you want to use IPv6, please upgrade to the newest net-tools as
  given in Documentation/Changes. You will still be able to do regular
  IPv4 networking as well.

  This protocol support is also available as a module ( = code which
  can be inserted in and removed from the running kernel whenever you
  want). The module will be called ipv6.o. If you want to compile it
  as a module, say M here and read Documentation/modules.txt.

  It is safe to say N here for now.

IPv6: enable EUI-64 token format
CONFIG_IPV6_EUI64
  6bone, the network of computers using the IPv6 protocol, is moving
  to a new aggregatable address format and a new link local address
  assignment (EUI-64). Say Y if your site has upgraded already, or
  has started to upgrade.

IPv6: disable provider based addresses
CONFIG_IPV6_NO_PB
  Linux tries to operate correctly when your site has moved to EUI-64
  only partially. Unfortunately, the two address formats (old:
  "provider based" and new: "aggregatable") are incompatible. Say Y if
  your site finished the upgrade to EUI-64, and/or you encountered
  some problems caused by the presence of two link-local addresses on
  an interface.

IPv6: routing messages via old netlink
CONFIG_IPV6_NETLINK
  You can say Y here to receive routing messages from the IPv6 code
  through the old netlink interface. However, a better option is to
  say Y to "Kernel/User network link driver" and to "Routing
  messages" instead.
  
IPX networking
CONFIG_IPX
  This is support for the Novell networking protocol, IPX, commonly
  used for local networks of Windows machines. You need it if you want
  to access Novell NetWare file or print servers using the Linux
  Novell client ncpfs (available via FTP (user: anonymous) from
  ftp://sunsite.unc.edu/pub/Linux/system/filesystems/) or from within
  the Linux DOS emulator DOSEMU (read the DOSEMU-HOWTO, available in
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO). In order to do the
  former, you'll also have to say Y to "NCP filesystem support",
  below.

  IPX is similar in scope to IP, while SPX, which runs on top of IPX,
  is similar to TCP. There is also experimental support for SPX in
  Linux (see "SPX networking", below).

  To turn your Linux box into a fully featured NetWare file server and
  IPX router, say Y here and fetch either lwared from
  ftp://sunsite.unc.edu/pub/Linux/system/network/daemons/ or mars_nwe
  from ftp://ftp.gwdg.de/pub/linux/misc/ncpfs. For more information,
  read the IPX-HOWTO in ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO.

  General information about how to connect Linux, Windows machines and
  Macs is on the WWW at http://www.eats.com/linux_mac_win.html (to
  browse the WWW, you need to have access to a machine on the Internet
  that has a program like lynx or netscape). 

  The IPX driver would enlarge your kernel by about 5 kB. This driver
  is also available as a module ( = code which can be inserted in and
  removed from the running kernel whenever you want). The module will
  be called ipx.o. If you want to compile it as a module, say M here
  and read Documentation/modules.txt. Unless you want to integrate
  your Linux box with a local Novell network, say N.

IPX: Full internal IPX network
CONFIG_IPX_INTERN
  Every IPX network has an address that identifies it. Sometimes it is
  useful to give an IPX "network" address to your Linux box as well
  (for example if your box is acting as a file server for different
  IPX networks: it will then be accessible from everywhere using the
  same address). The way this is done is to create a virtual internal
  "network" inside your box and to assign an IPX address to this
  network. Say Y here if you want to do this; read the IPX-HOWTO at
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO for details.

  The full internal IPX network enables you to allocate sockets on
  different virtual nodes of the internal network. This is done by
  evaluating the field sipx_node of the socket address given to the
  bind call. So applications should always initialize the node field
  to 0 when binding a socket on the primary network. In this case the
  socket is assigned the default node that has been given to the
  kernel when the internal network was created. By enabling the full
  internal IPX network the cross-forwarding of packets targeted at
  'special' sockets to sockets listening on the primary network is
  disabled. This might break existing applications, especially RIP/SAP
  daemons. A RIP/SAP daemon that works well with the full internal net
  can be found on ftp://ftp.gwdg.de/pub/linux/misc/ncpfs. 

  If you don't know what you are doing, say N.

IPX: SPX networking (EXPERIMENTAL)
CONFIG_SPX
  The Sequenced Packet eXchange protocol is a transport layer protocol
  built on top of IPX. It is used in Novell NetWare systems for
  client-server applications and is similar to TCP (which runs on top
  of IP).

  Note that Novell NetWare file sharing does not use SPX; it uses a
  protocol called NCP, for which separate Linux support is available
  ("NCP filesystem support" below for the client side, and the user
  space programs lwared or mars_nwe for the server side).

  Say Y here if you have use for SPX; read the IPX-HOWTO at
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO for details.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called af_spx.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

AppleTalk DDP
CONFIG_ATALK
  AppleTalk is the way Apple computers speak to each other on a
  network. If your Linux box is connected to such a network and you
  want to join the conversation, say Y. You will need to use the
  netatalk package so that your Linux box can act as a print and file
  server for Macs as well as access AppleTalk printers. Check out
  http://threepio.hitchcock.org/cgi-bin/faq/netatalk/faq.pl on the WWW
  for details (to browse the WWW, you need to have access to a machine
  on the Internet that has a program like lynx or netscape). EtherTalk
  is the name used for AppleTalk over Ethernet and the cheaper and
  slower LocalTalk is AppleTalk over a proprietary apple network using
  serial links. EtherTalk and LocalTalk are fully supported by Linux.
  The NET-2-HOWTO, available via FTP (user: anonymous) in
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO contains valuable
  information as well.

  General information about how to connect Linux, Windows machines and
  Macs is on the WWW at http://www.eats.com/linux_mac_win.html

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module is called appletalk.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt. I hear that
  the GNU boycott of Apple is over, so even politically correct people
  are allowed to say Y here.

AppleTalk-IP driver support
CONFIG_IPDDP
  This allows IP networking for users who only have AppleTalk
  networking available. This feature is experimental. With this
  driver, you can either encapsulate IP inside AppleTalk (e.g. if your
  Linux box is stuck on an AppleTalk only network) or decapsulate
  (e.g. if you want your Linux box to act as an Internet gateway for a
  zoo of AppleTalk connected Macs). You decide which one of the two
  you want in the following two questions; you can say Y to only one
  of them. Please see Documentation/networking/ipddp.txt for more
  information.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module is called ipddp.o. If you want to compile it as a module,
  say M here and read Documentation/modules.txt.

IP to AppleTalk-IP Encapsulation support
CONFIG_IPDDP_ENCAP
  If you say Y here, the kernel will be able to encapsulate IP packets
  inside AppleTalk frames; this is useful if your Linux box is stuck
  on an AppleTalk network (which hopefully contains a decapsulator
  somewhere). Please see Documentation/networking/ipddp.txt for more
  information. If you say Y here, you cannot say Y to "AppleTalk-IP to
  IP Decapsulation support", below.

AppleTalk-IP to IP Decapsulation support
CONFIG_IPDDP_DECAP
  If you say Y here, the kernel will be able to decapsulate
  AppleTalk-IP frames to IP packets; this is useful if you want your
  Linux box to act as an Internet gateway for an AppleTalk
  network. Please see Documentation/networking/ipddp.txt for more
  information. If you say Y here, you cannot say Y to "IP to
  AppleTalk-IP Encapsulation support", above.

Apple/Farallon LocalTalk PC card support
CONFIG_LTPC
  This allows you to use the AppleTalk PC card to connect to LocalTalk
  networks. The card is also known as the Farallon PhoneNet PC card.
  If you are in doubt, this card is the one with the 65C02 chip on it.
  You also need version 1.3.3 or later of the netatalk package.
  This driver is experimental, which means that it may not work.
  See the file Documentation/networking/ltpc.txt.

COPS LocalTalk PC card support
CONFIG_COPS
  This allows you to use COPS AppleTalk cards to connect to LocalTalk
  networks. You also need version 1.3.3 or later of the netatalk
  package. This driver is experimental, which means that it may not
  work. This driver will only work if you choose "AppleTalk DDP"
  networking support, above.
  Please read the file Documentation/networking/cops.txt. 

Dayna firmware support
CONFIG_COPS_DAYNA
  Support COPS compatible cards with Dayna style firmware (Dayna
  DL2000/ Daynatalk/PC (half length), COPS LT-95, Farallon PhoneNET PC
  III, Farallon PhoneNET PC II).

Tangent firmware support
CONFIG_COPS_TANGENT
  Support COPS compatible cards with Tangent style firmware (Tangent
  ATB_II, Novell NL-1000, Daystar Digital LT-200.

Amateur Radio support
CONFIG_HAMRADIO
  If you want to connect your Linux box to an amateur radio, answer Y
  here. You want to read http://www.tapr.org/tapr/html/pkthome.html
  (to browse the WWW, you need to have access to a machine on the
  Internet that has a program like lynx or netscape) and the HAM-HOWTO
  and the AX25-HOWTO, both available via FTP (user: anonymous) from
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO.

  Note that the answer to this question won't directly affect the
  kernel: saying N will just cause this configure script to skip all
  the questions about amateur radio.

Amateur Radio AX.25 Level 2
CONFIG_AX25
  This is the protocol used for computer communication over amateur
  radio. It is either used by itself for point-to-point links, or to
  carry other protocols such as tcp/ip. To use it, you need a device
  that connects your Linux box to your amateur radio. You can either
  use a low speed TNC (a Terminal Node Controller acts as a kind of
  modem connecting your computer's serial port to your radio's
  microphone input and speaker output) supporting the KISS protocol or
  one of the various SCC cards that are supported by the generic Z8530
  or the DMA SCC driver. Another option are the Baycom modem serial
  and parallel port hacks or the sound card modem (supported by their
  own drivers). If you say Y here, you also have to say Y to one of
  those drivers.

  Information about where to get supporting software for Linux amateur
  radio as well as information about how to configure an AX.25 port is
  contained in the AX25-HOWTO, available via FTP (user: anonymous) in
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO. You might also want to
  check out the file Documentation/networking/ax25.txt in the kernel
  source. More information about digital amateur radio in general is
  on the WWW at http://www.tapr.org/tapr/html/pkthome.html. (To browse
  the WWW, you need to have access to a machine on the Internet that
  has a program like lynx or netscape).

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called ax25.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

AX.25 DAMA Slave support
CONFIG_AX25_DAMA_SLAVE
  DAMA is a mechanism to prevent collisions when doing AX.25
  networking. A DAMA server (called "master") accepts incoming traffic
  from clients (called "slaves") and redistributes it to other slaves.
  If you say Y here, your Linux box will act as a DAMA slave; this is
  transparent in that you don't have to do any special DAMA
  configuration. (Linux cannot yet act as a DAMA server.) If unsure,
  say N.

AX.25 DAMA Master support
CONFIG_AX25_DAMA_MASTER
  DAMA is a mechanism to prevent collisions when doing AX.25
  networking. A DAMA server (called "master") accepts incoming traffic
  from clients (called "slaves") and redistributes it to other
  slaves. If you say Y here, your Linux box will act as a DAMA server.
  If unsure, say N.

Amateur Radio NET/ROM
CONFIG_NETROM
  NET/ROM is a network layer protocol on top of AX.25 useful for
  routing.

  A comprehensive listing of all the software for Linux amateur radio
  users as well as information about how to configure an AX.25 port is
  contained in the AX25-HOWTO, available via FTP (user: anonymous) in
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO. You also might want to
  check out the file Documentation/networking/ax25.txt. More
  information about digital amateur radio in general is on the WWW at
  http://www.tapr.org/tapr/html/pkthome.html (to browse the WWW, you
  need to have access to a machine on the Internet that has a program
  like lynx or netscape).

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called netrom.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

Amateur Radio X.25 PLP (Rose)
CONFIG_ROSE
  The Packet Layer Protocol (PLP) is a way to route packets over X.25
  connections in general and amateur radio AX.25 connections in
  particular, essentially an alternative to NET/ROM.

  A comprehensive listing of all the software for Linux amateur radio
  users as well as information about how to configure an AX.25 port is
  contained in the AX25-HOWTO, available via FTP (user: anonymous) in
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO. You also might want to
  check out the file Documentation/networking/ax25.txt. More
  information about digital amateur radio in general is on the WWW at
  http://www.tapr.org/tapr/html/pkthome.html (to browse the WWW, you
  need to have access to a machine on the Internet that has a program
  like lynx or netscape).

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called rose.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

Serial port KISS driver for AX.25
CONFIG_MKISS
  KISS is a protocol used for the exchange of data between a computer
  and a Terminal Node Controller (a small embedded system commonly
  used for networking over AX.25 amateur radio connections; it
  connects the computer's serial port with the radio's microphone
  input and speaker output).

  Although KISS is less advanced than the 6pack protocol, it has
  the advantage that it is already supported by most modern TNCs
  without the need for a firmware upgrade.

  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called mkiss.o.

Serial port 6PACK driver for AX.25
CONFIG_6PACK
  6pack is a transmission protocol for the data exchange between your
  PC and your TNC (the Terminal Node Controller acts as a kind of
  modem connecting your computer's serial port to your radio's
  microphone input and speaker output). This protocol can be used as
  an alternative to KISS for networking over AX.25 amateur radio
  connections, but it has some extended functionality.

  Note that this driver is still experimental and might cause
  problems. For details about the features and the usage of the
  driver, read Documentation/networking/6pack.txt.

  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called 6pack.o.

BPQ Ethernet driver
CONFIG_BPQETHER
  AX.25 is the protocol used for computer communication over amateur
  radio. If you say Y here, you will be able to send and receive AX.25
  traffic over Ethernet (also called "BPQ AX.25"), which could be
  useful if some other computer on your local network has a direct
  amateur radio connection.

High-speed (DMA) SCC driver for AX.25
CONFIG_DMASCC
  This is a driver for high-speed SCC boards, i.e. those supporting
  DMA on one port. You usually use those boards to connect your
  computer to an amateur radio modem (such as the WA4DSY 56kbps
  modem), in order to send and receive AX.25 packet radio network
  traffic.

  Currently, this driver supports Ottawa PI/PI2
  (http://hydra.carleton.ca/info/pi2.html) and Gracilis PackeTwin
  (http://www.paccomm.com/gracilis.html) boards. They are detected
  automatically. If you have one of these cards, say Y here and read
  the AX25-HOWTO, available via FTP (user: anonymous) in
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO/.

  This driver can operate multiple boards simultaneously. If you
  compile it as a module (by saying M instead of Y), it will be called
  dmascc.o. If you don't pass any parameter to the driver, all
  possible I/O addresses are probed. This could irritate other devices
  that are currently not in use. You may specify the list of addresses
  to be probed by "dmascc=addr1,addr2,..." (when compiled into the
  kernel image) or "io=addr1,addr2,..." (when loaded as a module). The
  network interfaces will be called dmascc0 and dmascc1 for the board
  detected first, dmascc2 and dmascc3 for the second one, and so on.

  Before you configure each interface with ifconfig, you MUST set
  certain parameters, such as channel access timing, clock mode, and
  DMA channel. This is accomplished with a small utility program,
  dmascc_cfg, available at
  http://www.nt.tuwien.ac.at/~kkudielk/Linux/. (To browse the WWW, you
  need to have access to a machine on the Internet that has a program
  like lynx or netscape).

Z8530 SCC driver for AX.25
CONFIG_SCC
  These cards are used to connect your Linux box to an amateur radio
  in order to communicate with other computers. If you want to use
  this, read Documentation/networking/z8530drv.txt and the
  AX25-HOWTO, available via FTP (user: anonymous) at
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO. Also make sure to say Y
  to "Amateur Radio AX.25 Level 2" support.

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called scc.o.

additional delay for PA0HZP OptoSCC compatible boards
CONFIG_SCC_DELAY
  Say Y here if you experience problems with the SCC driver not
  working properly; please read Documentation/networking/z8530drv.txt
  for details. If unsure, say N.

#support for TRX that feedback the tx signal to rx
#CONFIG_SCC_TRXECHO
###
### Don't know what's going on here.
###
#
BAYCOM picpar and par96 driver for AX.25
CONFIG_BAYCOM_PAR
  This is a driver for Baycom style simple amateur radio modems that
  connect to a parallel interface. The driver supports the picpar and
  par96 designs. To configure the driver, use the sethdlc utility
  available in the standard ax25 utilities package. For information on
  the modems, see http://www.baycom.de (to browse the WWW, you need to
  have access to a machine on the Internet that has a program like
  lynx or netscape) and Documentation/networking/baycom.txt. 

  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. This is recommended.
  The module will be called baycom_par.o.

BAYCOM EPP driver for AX.25
CONFIG_BAYCOM_EPP
  This is a driver for Baycom style simple amateur radio modems that
  connect to a parallel interface. The driver supports the EPP
  designs. To configure the driver, use the sethdlc utility available
  in the standard ax25 utilities package. For information on the
  modems, see http://www.baycom.de (to browse the WWW, you need to
  have access to a machine on the Internet that has a program like
  lynx or netscape) and Documentation/networking/baycom.txt.

  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. This is recommended.
  The module will be called baycom_par.o.

BAYCOM ser12 full duplex driver for AX.25
CONFIG_BAYCOM_SER_FDX
  This is one of two drivers for Baycom style simple amateur radio
  modems that connect to a serial interface. The driver supports the
  ser12 design in full duplex mode. In addition, it allows the
  baudrate to be set between 300 and 4800 baud (however not all modems
  support all baudrates). This is the preferred driver. The next
  driver, "BAYCOM ser12 half duplex driver for AX.25" is the old
  driver and still provided in case this driver does not work with
  your serial interface chip. To configure the driver, use the sethdlc
  utility available in the standard ax25 utilities package. For
  information on the modems, see http://www.baycom.de (to browse the
  WWW, you need to have access to a machine on the Internet that has a
  program like lynx or netscape) and
  Documentation/networking/baycom.txt. 

  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. This is recommended.
  The module will be called baycom_ser_fdx.o.

BAYCOM ser12 half duplex driver for AX.25
CONFIG_BAYCOM_SER_HDX
  This is one of two drivers for Baycom style simple amateur radio
  modems that connect to a serial interface. The driver supports the
  ser12 design in full duplex mode. This is the old driver. It is
  still provided in case your serial interface chip does not work with
  the full duplex driver. This driver is depreciated. To configure
  the driver, use the sethdlc utility available in the standard ax25
  utilities package. For information on the modems, see
  http://www.baycom.de (to browse the WWW, you need to have access to
  a machine on the Internet that has a program like lynx or netscape)
  and Documentation/networking/baycom.txt. 

  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. This is recommended.
  The module will be called baycom_ser_hdx.o.

Sound card modem driver for AX.25
CONFIG_SOUNDMODEM
  This experimental driver allows a standard Sound Blaster or
  WindowsSoundSystem compatible sound card to be used as a packet
  radio modem (NOT as a telephone modem!), to send digital traffic
  over amateur radio.

  To configure the driver, use the sethdlc, smdiag and smmixer
  utilities available in the standard ax25 utilities package. For
  information on how to key the transmitter, see
  http://www.ife.ee.ethz.ch/~sailer/pcf/ptt_circ/ptt.html (to browse
  the WWW, you need to have access to a machine on the Internet that
  has a program like lynx or netscape) and
  Documentation/networking/soundmodem.txt. 

  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. This is recommended.
  The module will be called soundmodem.o.

Sound card modem support for Sound Blaster and compatible cards
CONFIG_SOUNDMODEM_SBC
  This option enables the soundmodem driver to use Sound Blaster and
  compatible cards. If you have a dual mode card (i.e. a WSS cards
  with a Sound Blaster emulation) you should say N here and Y to
  "Sound card modem support for WSS and Crystal cards", below, because
  this usually results in better performance. This option also
  supports SB16/32/64 in full duplex mode.

Sound card modem support for WSS and Crystal cards
CONFIG_SOUNDMODEM_WSS
  This option enables the soundmodem driver to use WindowsSoundSystem
  compatible cards. These cards feature a codec chip from either
  Analog Devices (such as AD1848, AD1845, AD1812) or Crystal
  Semiconductors (such as CS4248, CS423x). This option also supports
  the WSS full duplex operation which currently works with Crystal
  CS423x chips. If you don't need full duplex operation, do not enable
  it to save performance.

Sound card modem support for 1200 baud AFSK modulation
CONFIG_SOUNDMODEM_AFSK1200
  This option enables the soundmodem driver 1200 baud AFSK modem,
  compatible to popular modems using TCM3105 or AM7911. The
  demodulator requires about 12% of the CPU power of a Pentium 75 CPU
  per channel.

Sound card modem support for 2400 baud AFSK modulation (7.3728MHz crystal)
CONFIG_SOUNDMODEM_AFSK2400_7
  This option enables the soundmodem driver 2400 baud AFSK modem,
  compatible to TCM3105 modems (over-)clocked with a 7.3728MHz
  crystal. Note that the availability of this driver does _not_ imply
  that I recommend building such links. It is only here since users
  especially in eastern Europe have asked me to do so. In fact this
  modulation scheme has many disadvantages, mainly its incompatibility
  with many transceiver designs and the fact that the TCM3105 (if
  used) is operated widely outside its specifications.

Sound card modem support for 2400 baud AFSK modulation (8MHz crystal)
CONFIG_SOUNDMODEM_AFSK2400_8
  This option enables the soundmodem driver 2400 baud AFSK modem,
  compatible to TCM3105 modems (over-)clocked with an 8MHz crystal.
  Note that the availability of this driver does _not_ imply that I
  recommend building such links. It is only here since users
  especially in eastern Europe have asked me to do so. In fact this
  modulation scheme has many disadvantages, mainly its incompatibility
  with many transceiver designs and the fact that the TCM3105 (if
  used) is operated widely outside its specifications.

Sound card modem support for 2666 baud AFSK modulation
CONFIG_SOUNDMODEM_AFSK2666
  This option enables the soundmodem driver 2666 baud AFSK modem.
  This modem is experimental, and not compatible to anything
  else I know of.

Sound card modem support for 4800 baud 8PSK modulation
CONFIG_SOUNDMODEM_PSK4800
  This option enables the soundmodem driver 4800 baud 8PSK modem.
  This modem is experimental, and not compatible to anything
  else I know of.

Sound card modem support for 4800 baud HAPN-1 modulation
CONFIG_SOUNDMODEM_HAPN4800
  This option enables the soundmodem driver 4800 baud HAPN-1
  compatible modem. This modulation seems to be widely used 'down
  under' and in the Netherlands. Here, nobody uses it, so I could not
  test if it works. It is compatible to itself, however :-)

Sound card modem support for 9600 baud FSK G3RUH modulation
CONFIG_SOUNDMODEM_FSK9600
  This option enables the soundmodem driver 9600 baud FSK modem,
  compatible to the G3RUH standard. The demodulator requires about 4%
  of the CPU power of a Pentium 75 CPU per channel. You can say Y to
  both 1200 baud AFSK and 9600 baud FSK if you want (but obviously you
  can only use one protocol at a time, depending on what the other end
  can understand).

CCITT X.25 Packet Layer
CONFIG_X25
  X.25 is a set of standardized network protocols, similar in scope to
  frame relay; the one physical line from your box to the X.25 network
  entry point can carry several logical point-to-point connections
  (called "virtual circuits") to other computers connected to the X.25
  network. Governments, banks, and other organizations tend to use it
  to connect to each other or to form Wide Area Networks (WANs). Many
  countries have public X.25 networks. X.25 consists of two
  protocols: the higher level Packet Layer Protocol (PLP) (say Y here
  if you want that) and the lower level data link layer protocol LAPB
  (say Y to "LAPB Data Link Driver" below if you want that). 

  You can read more about X.25 at http://www.sangoma.com/x25.html and
  http://www.cisco.com/univercd/data/doc/software/11_0/rpcg/cx25.htm
  (to browse the WWW, you need to have access to a machine on the
  Internet that has a program like lynx or netscape). Information
  about X.25 for Linux is contained in the files
  Documentation/networking/x25.txt and
  Documentation/networking/x25-iface.txt. 

  One connects to an X.25 network either with a dedicated network card
  using the X.21 protocol (not yet supported by Linux) or one can do
  X.25 over a standard telephone line using an ordinary modem (say Y
  to "X.25 async driver" below) or over Ethernet using an ordinary
  Ethernet card and either the 802.2 LLC protocol (say Y to "802.2
  LLC" below) or LAPB over Ethernet (say Y to "LAPB Data Link Driver"
  and "LAPB over Ethernet driver" below). 

  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called x25.o. If unsure, say N.

LAPB Data Link Driver (EXPERIMENTAL) 
CONFIG_LAPB
  Link Access Procedure, Balanced (LAPB) is the data link layer (i.e.
  the lower) part of the X.25 protocol. It offers a reliable
  connection service to exchange data frames with one other host, and
  it is used to transport higher level protocols (mostly X.25 Packet
  Layer, the higher part of X.25, but others are possible as well).
  Usually, LAPB is used with specialized X.21 network cards, but Linux
  currently supports LAPB only over Ethernet connections. If you want
  to use LAPB connections over Ethernet, say Y here and to "LAPB over
  Ethernet driver" below. Read
  Documentation/networking/lapb-module.txt for technical details.

  If you want to compile this driver as a module though ( = code which
  can be inserted in and removed from the running kernel whenever you
  want), say M here and read Documentation/modules.txt. The module
  will be called lapb.o. If unsure, say N.

802.2 LLC (VERY EXPERIMENTAL)
CONFIG_LLC
  This is a Logical Link Layer protocol used for X.25 connections over
  Ethernet, using ordinary Ethernet cards. 

Bridging (EXPERIMENTAL)
CONFIG_BRIDGE
  If you say Y here, then your Linux box will be able to act as an
  Ethernet bridge, which means that the different Ethernet segments it
  is connected to will appear as one Ethernet to the participants.
  Several such bridges can work together to create even larger
  networks of Ethernets using the IEEE802.1 spanning tree algorithm.
  As this is a standard, Linux bridges will interwork properly with
  other third party bridge products. 

  In order to use this, you'll need the bridge configuration tools
  available via FTP (user: anonymous) from
  ftp://shadow.cabi.net/pub/Linux. Please read the Bridge mini-HOWTO
  for more information. Note that if your box acts as a bridge, it
  probably contains several Ethernet devices, but the kernel is not
  able to recognize more than one at boot time without help; for
  details read the Ethernet-HOWTO, available via FTP (user: anonymous)
  in ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO. The Bridging code is
  still in test. If unsure, say N.

Packet socket
CONFIG_PACKET
  The Packet protocol is used by applications which communicate
  directly with network devices without an intermediate network
  protocol implemented in the kernel, e.g. tcpdump. If you want them
  to work, choose Y. This driver is also available as a module called
  af_packet.o ( = code which can be inserted in and removed from the
  running kernel whenever you want). If you want to compile it as a
  module, say M here and read Documentation/modules.txt. If unsure,
  say Y.

Kernel/User network link driver
CONFIG_NETLINK
  This driver allows for two-way communication between certain parts
  of the kernel or modules and user processes; the user processes are
  able to read from and write to character special files in the /dev
  directory having major mode 36. So far, the kernel uses it to
  publish some network related information if you say Y to "Routing
  messages", below. It is also used by the firewall code to publish
  information about possible attacks if you say Y to "IP: firewall
  packet netlink device" further down. You also need to say Y here if
  you want to use arpd, a daemon that helps keep the internal ARP
  cache (a mapping between IP addresses and hardware addresses on the
  local network) small. The ethertap device, which lets user space
  programs read and write raw Ethernet frames, also needs the network
  link driver. If unsure, say Y.

Routing messages
CONFIG_RTNETLINK
  If you say Y here and create a character special file /dev/route
  with major number 36 and minor number 0 using mknod ("man mknod"),
  you (or some user space utility) can read some network related
  routing information from that file. Everything you write to that
  file will be discarded.

Netlink device emulation
CONFIG_NETLINK_DEV
  This is a backward compatibility option, choose Y for now.
  This option will be removed soon.

SCSI support?
CONFIG_SCSI
  If you want to use a SCSI hard disk, SCSI tape drive, SCSI CDROM or
  any other SCSI device under Linux, say Y and make sure that you know
  the name of your SCSI host adapter (the card inside your computer
  that "speaks" the SCSI protocol, also called SCSI controller),
  because you will be asked for it. 

  You also need to say Y here if you want support for the parallel
  port version of the 100 MB IOMEGA ZIP drive.

  Please read the SCSI-HOWTO, available via FTP (user: anonymous) in
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO. The
  SCSI-Programming-HOWTO contains information about how to add or
  remove an SCSI device from a running Linux machine without
  rebooting. 

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called scsi_mod.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt and
  Documentation/scsi.txt. However, do not compile this as a module if
  your root filesystem (the one containing the directory /) is located
  on a SCSI device.

SCSI disk support
CONFIG_BLK_DEV_SD
  If you want to use a SCSI hard disk or the SCSI or parallel port
  version of the IOMEGA ZIP drive under Linux, say Y and read the
  SCSI-HOWTO, the Disk-HOWTO and the Multi-Disk-HOWTO, available via
  FTP (user: anonymous) in ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO.
  This is NOT for SCSI CDROMs.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called sd_mod.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt and
  Documentation/scsi.txt. Do not compile this driver as a module if
  your root filesystem (the one containing the directory /) is located
  on a SCSI disk. In this case, do not compile the driver for your
  SCSI host adapter (below) as a module either.

SCSI tape support
CONFIG_CHR_DEV_ST
  If you want to use a SCSI tape drive under Linux, say Y and read the
  SCSI-HOWTO, available via FTP (user: anonymous) in
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO and
  drivers/scsi/README.st in the kernel source. This is NOT for SCSI
  CDROMs.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called st.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt and
  Documentation/scsi.txt .

SCSI CDROM support
CONFIG_BLK_DEV_SR
  If you want to use a SCSI CDROM under Linux, say Y and read the
  SCSI-HOWTO and the CDROM-HOWTO from
  ftp://sunsite.unc.edu:/pub/Linux/docs/HOWTO. Also make sure to say Y
  or M to "ISO 9660 CDROM filesystem support" later.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called sr_mod.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt and
  Documentation/scsi.txt .

Enable vendor-specific extensions (for SCSI CDROM)
CONFIG_BLK_DEV_SR_VENDOR
  This enables the usage of vendor specific SCSI commands. This is
  required to support multisession CDs with old NEC/TOSHIBA cdrom
  drives (and HP Writers). If you have such a drive and get the first
  session only, try saying Y here; everybody else says N.

SCSI generic support
CONFIG_CHR_DEV_SG
  If you want to use SCSI scanners, synthesizers or CD-writers or just
  about anything having "SCSI" in its name other than hard disks,
  CDROMs or tapes, say Y here. These won't be supported by the kernel
  directly, so you need some additional software which knows how to
  talk to these devices using the SCSI protocol. For CD-writers, you
  would need the program cdwrite, available via FTP (user: anonymous)
  from ftp://sunsite.unc.edu/pub/Linux/utils/disk-management; for
  other devices, it's possible that you'll have to write the driver
  software yourself, so have a look at the SCSI-HOWTO and at the
  SCSI-Programming-HOWTO, both available via FTP (user: anonymous) in
  ftp://sunsite.unc.edu:/pub/Linux/docs/HOWTO.

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt and
  Documentation/scsi.txt. The module will be called sg.o. If unsure,
  say N.

Probe all LUNs on each SCSI device
CONFIG_SCSI_MULTI_LUN
  If you have a SCSI device that supports more than one LUN (Logical
  Unit Number), e.g. a CD jukebox, and only one LUN is detected, you
  can say Y here to force the SCSI driver to probe for multiple LUNs. 
  A SCSI device with multiple LUNs acts logically like multiple SCSI
  devices. The vast majority of SCSI devices have only one LUN, and
  so most people can say N here and should in fact do so, because it
  is safer.

Verbose SCSI error reporting (kernel size +=12K)
CONFIG_SCSI_CONSTANTS
  The error messages regarding your SCSI hardware will be easier to
  understand if you say Y here; it will enlarge your kernel by about
  12 KB. If in doubt, say Y.

SCSI logging facility
CONFIG_SCSI_LOGGING
  This turns on a logging facility that can be used to debug a number
  of SCSI related problems. 

  If you say Y here, no logging output will appear by default, but you
  can enable logging by saying Y to "/proc filesystem support" and
  "Sysctl support" below and executing the command

     echo "scsi log token [level]" > /proc/scsi/scsi

  at boot time after the /proc filesystem has been mounted.

  There are a number of things that can be used for 'token' (you can
  find them in the source: drivers/scsi/scsi.c), and this allows you
  to select the types of information you want, and the level allows
  you to select the level of verbosity. 

  If you say N here, it may be harder to track down some types of SCSI
  problems. If you say Y here your kernel will be somewhat larger, but
  there should be no noticeable performance impact as long as you have
  logging turned off.

AdvanSys SCSI support
CONFIG_SCSI_ADVANSYS
  This is a driver for all SCSI host adapters manufactured by
  AdvanSys. It is documented in the kernel source in
  drivers/scsi/advansys.c. 

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  If you want to compile it as a module, say M here and read
  Documentation/modules.txt. The module will be called advansys.o.

Adaptec AHA152X/2825 support
CONFIG_SCSI_AHA152X
  This is support for the AHA-1510, AHA-1520, AHA-1522, and AHA-2825
  SCSI host adapters. It is explained in section 3.3 of the
  SCSI-HOWTO, available via FTP (user: anonymous) at
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO. You might also want to
  read the comments at the top of drivers/scsi/aha152x.c.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called aha152x.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

Adaptec AHA1542 support
CONFIG_SCSI_AHA1542
  This is support for a SCSI host adapter. It is explained in section
  3.4 of the SCSI-HOWTO, available via FTP (user: anonymous) at
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO. Note that Trantor was
  recently purchased by Adaptec, and some former Trantor products are
  being sold under the Adaptec name. If it doesn't work out of the
  box, you may have to change some settings in drivers/scsi/aha1542.h.
  
  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called aha1542.o.

Adaptec AHA1740 support
CONFIG_SCSI_AHA1740
  This is support for a SCSI host adapter. It is explained in section
  3.5 of the SCSI-HOWTO, available via FTP (user: anonymous) at
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO. If it doesn't work out
  of the box, you may have to change some settings in
  drivers/scsi/aha1740.h.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called aha17400.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

Adaptec AIC7xxx chipset SCSI controller support
CONFIG_SCSI_AIC7XXX
  This is support for the various aic7xxx based Adaptec SCSI
  controllers. These include the 274x EISA cards, 284x VLB cards, 294x
  PCI cards, 394x PCI cards, 3985 PCI card, and several versions of
  the Adaptec built-in SCSI controllers on various PC motherboards.
  Information on the configuration options for this controller can be
  found by checking the help file for each of the available
  configuration options. You also want to read
  drivers/scsi/README.aic7xxx and the SCSI-HOWTO, available via FTP
  (user: anonymous) at ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO.
  Note that the AHA2920 SCSI host adapter is *not* supported by this
  driver; choose "Future Domain 16xx SCSI support" instead if you have
  one of those.

  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called aic7xxx.o.

Override driver defaults for commands per LUN
CONFIG_OVERRIDE_CMDS
  Say Y here if you want to override the default maximum number of
  commands that a single device on the aic7xxx controller is allowed
  to have active at one time. This option only affects tagged queueing
  capable devices. The driver uses a "failsafe" value of 8 by default.
  This is much lower than many devices can handle, but left in place
  for safety's sake. If you say Y here, you can adjust the number of
  commands per LUN with the following configuration option.
  
  NOTE: This does not actually enable tagged queueing on any
  particular device. The driver has changed in this respect. Please
  see the file drivers/scsi/README.aic7xxx for more information on how
  to get particular devices to use tagged command queueing.
  
  If unsure, say N.

Maximum number of commands per LUN
CONFIG_AIC7XXX_CMDS_PER_LUN
  Specify the maximum number of commands you would like to allocate
  per LUN (a LUN is a Logical Unit Number -- some physical SCSI
  devices, e.g. CD jukeboxes, act logically as several separate units,
  each of which gets its own number).

  Reasonable figures are in the range of 14 to 32 commands per device,
  but depending on hardware could be increased or decreased from that
  figure. If the number is too high for any particular device, the
  driver will automatically compensate usually after only 10 minutes
  of uptime and will issue a message to alert you to the fact that the
  number of commands for that device has been reduced. It will not
  hinder performance if some of your devices eventually have their
  commands per LUN reduced, but is a waste of memory if all of your
  devices end up reducing this number down to a more reasonable
  figure. Default: 24

Collect statistics to report in /proc
CONFIG_AIC7XXX_PROC_STATS
  This option tells the driver to keep track of how many commands have
  been sent to each particular device and report that information to
  the user via the /proc/scsi/aic7xxx/n file, where n is the number of
  the aic7xxx controller you want the information on. This adds a
  small amount of overhead to each and every SCSI command the aic7xxx
  driver handles, so if you aren't really interested in this
  information, it is best to leave it disabled. This will only work if
  you also say Y to "/proc filesystem support", below. 

  If unsure, say N.

Delay in seconds after SCSI bus reset
CONFIG_AIC7XXX_RESET_DELAY
  This sets how long the driver will wait after resetting the SCSI bus
  before attempting to communicate with the devices on the SCSI bus
  again. This delay will be used during the reset phase at bootup time
  as well as after any reset that might occur during normal operation.
  Reasonable numbers range anywhere from 5 to 15 seconds depending on
  your devices. DAT tape drives are notorious for needing more time
  after a bus reset to be ready for the next command, but most hard
  drives and CD-ROM devices are ready in only a few seconds. This
  option has a maximum upper limit of 20 seconds to avoid bad
  interactions between the aic7xxx driver and the rest of the linux
  kernel. The default value has been reduced to 5 seconds. If this
  doesn't work with your hardware, try increasing this value.

BusLogic SCSI support
CONFIG_SCSI_BUSLOGIC
  This is support for BusLogic MultiMaster and FlashPoint SCSI Host
  Adapters. Consult the SCSI-HOWTO, available via anonymous FTP from
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO, and the files
  README.BusLogic and README.FlashPoint in drivers/scsi for more
  information. If this driver does not work correctly without
  modification, please contact the author, Leonard N. Zubkoff, by
  email to lnz@dandelion.com. 

  You can also build this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  but only a single instance may be loaded. If you want to compile it
  as a module, say M here and read Documentation/modules.txt. The
  module will be called BusLogic.o.

Omit BusLogic SCSI FlashPoint support
CONFIG_SCSI_OMIT_FLASHPOINT
  This option allows you to omit the FlashPoint support from the
  BusLogic SCSI driver. The FlashPoint SCCB Manager code is
  substantial, so users of MultiMaster Host Adapters may wish to omit
  it.

DTC3180/3280 SCSI support
CONFIG_SCSI_DTC3280
  This is support for DTC 3180/3280 SCSI Host Adapters. Please read
  the SCSI-HOWTO, available via FTP (user: anonymous) at
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO and the file
  drivers/scsi/README.dtc3x80. 

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called dtc.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

EATA-DMA (DPT, NEC, AT&T, SNI, AST, Olivetti, Alphatronix) support
CONFIG_SCSI_EATA_DMA
  This is support for the EATA-DMA protocol compliant SCSI Host
  Adapters like the SmartCache III/IV, SmartRAID controller families
  and the DPT PM2011B and PM2012B controllers. Note that there is
  also another driver for the same hardware: "EATA ISA/EISA/PCI
  support". You should only say Y to one of them. Please read the
  SCSI-HOWTO, available via FTP (user: anonymous) at
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO. 

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called eata_dma.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

EATA-PIO (old DPT PM2001, PM2012A) support
CONFIG_SCSI_EATA_PIO
  This driver supports all EATA-PIO protocol compliant SCSI Host
  Adapters like the DPT PM2001 and the PM2012A. EATA-DMA compliant
  host adapters could also use this driver but are discouraged from
  doing so, since this driver only supports hard disks and lacks
  numerous features. You might want to have a look at the SCSI-HOWTO,
  available via FTP (user: anonymous) at
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO. 

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called eata_pio.o.

UltraStor 14F/34F support
CONFIG_SCSI_U14_34F
  This is support for the UltraStor 14F and 34F SCSI-2 host adapters.
  The source at drivers/scsi/u14-34f.c contains some information about
  this hardware. If the driver doesn't work out of the box, you may
  have to change some settings in drivers/scsi/u14-34f.c. Read the
  SCSI-HOWTO, available via FTP (user: anonymous) at
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO. Note that there is also
  another driver for the same hardware: "UltraStor SCSI support",
  below. You should say Y to both only if you want 24F support as
  well. 

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called u14-34f.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

enable elevator sorting
CONFIG_SCSI_U14_34F_LINKED_COMMANDS
  This is a feature of SCSI-2 which improves performance: the host
  adapter can send a whole list of commands to a device in one
  batch. Some SCSI devices might not implement this properly, so the
  safe answer is N.

maximum number of queued commands
CONFIG_SCSI_U14_34F_MAX_TAGS
  This specifies how many SCSI commands can be maximally queued for a
  given SCSI device. Go with the default unless you know what you're
  doing. Minimum is 2 and maximum is 8.

Future Domain 16xx SCSI/AHA 2920 support
CONFIG_SCSI_FUTURE_DOMAIN
  This is support for Future Domain's 16-bit SCSI host adapters
  (TMC-1660/1680, TMC-1650/1670, TMC-3260, TMC-1610M/MER/MEX) and
  other adapters based on the Future Domain chipsets (Quantum
  ISA-200S, ISA-250MG; Adaptec AHA-2920; and at least one IBM board).
  It is explained in section 3.7 of the SCSI-HOWTO, available via FTP
  (user: anonymous) at ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO. 

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called fdomain.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

Future Domain MCS-600/700 SCSI support
CONFIG_SCSI_FD_MCS
 This is support for Future Domain MCS 600/700 MCA SCSI adapters. Some
 PS/2s are also equipped with IBM Fast SCSI Adapter/A which is an OEM
 of the MCS 700. This driver also supports Reply SB16/SCSI card (the 
 SCSI part). It supports multiple adapters in the same system.

Generic NCR5380/53c400 SCSI support
CONFIG_SCSI_GENERIC_NCR5380
  This is the generic NCR family of SCSI controllers, not to be
  confused with the NCR 53c7 or 8xx controllers. It is explained in
  section 3.8 of the SCSI-HOWTO, available via FTP (user: anonymous)
  at ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO. If it doesn't work
  out of the box, you may have to change some settings in
  drivers/scsi/g_NCR5380.h.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called g_NCR5380.o. If you want to compile it as
  a module, say M here and read Documentation/modules.txt.

Enable NCR53c400 extensions
CONFIG_SCSI_GENERIC_NCR53C400
  This enables certain optimizations for the NCR53c400 SCSI cards. You
  might as well try it out. Note that this driver will only probe for
  the Trantor T130B in its default configuration; you might have to
  pass a command line option to the kernel at boot time if it doesn't
  detect your card. See the file drivers/scsi/README.g_NCR5380 for
  details.

NCR5380/53c400 mapping method (use Port for T130B)
CONFIG_SCSI_G_NCR5380_PORT
  The NCR5380 and NCR53c400 SCSI controllers come in two varieties:
  port or memory mapped. You should know what you have. The most
  common card, Trantor T130B, uses port mapped mode.

NCR53c7,8xx SCSI support
CONFIG_SCSI_NCR53C7xx
  This is the 53c7 and 8xx NCR family of SCSI controllers, not to be
  confused with the NCR 5380 controllers. It is explained in section
  3.8 of the SCSI-HOWTO, available via FTP (user: anonymous) at
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO. If it doesn't work out
  of the box, you may have to change some settings in
  drivers/scsi/53c7,8xx.h.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called 53c7,8xx.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

always negotiate synchronous transfers
CONFIG_SCSI_NCR53C7xx_sync
  In general, this is good; however, it is a bit dangerous since there
  are some broken SCSI devices out there. Take your chances. Safe bet
  is N.

allow FAST-SCSI [10MHz]
CONFIG_SCSI_NCR53C7xx_FAST
  This will enable 10MHz FAST-SCSI transfers with your host
  adapter. Some systems have problems with that speed, so it's safest
  to say N here.

allow DISCONNECT
CONFIG_SCSI_NCR53C7xx_DISCONNECT
  This enables the disconnect/reconnect feature of the NCR SCSI
  controller. When you say Y here, a slow SCSI device will not lock
  the SCSI bus while processing a request, allowing simultaneous use
  of e.g. a SCSI hard disk and SCSI tape or CD-ROM drive, and
  providing much better performance when using slow and fast SCSI
  devices at the same time. Some devices, however, do not operate
  properly with this option enabled, and will cause your SCSI system
  to hang, which might cause a system crash. The safe answer
  therefore is to say N.

NCR53C8XX SCSI support
CONFIG_SCSI_NCR53C8XX
  This is the BSD ncr driver adapted to linux for the NCR53C8XX family
  of PCI-SCSI controllers. This driver supports parity checking,
  tagged command queuing and fast synchronous data transfers up to 80
  MB/s with wide FAST-40 LVD devices and controllers.

  The NCR53C860 and NCR53C875 support FAST-20 transfers. The NCR53C895
  supports FAST-40 transfers with Ultra2 LVD devices.

  Please read drivers/scsi/README.ncr53c8xx for more information.

synchronous data transfers frequency
CONFIG_SCSI_NCR53C8XX_SYNC
  The SCSI Parallel Interface-2 Standard defines 4 classes of transfer
  rates: FAST-5, FAST-10, FAST-20 and FAST-40. The numbers are
  respectively the maximum data transfer rates in mega-transfers per
  second for each class. For example, a FAST-20 Wide 16 device is able
  to transfer data at 20 million 16 bit packets per second for a total
  rate of 40 MB/s.

  You may specify 0 if you want to only use asynchronous data
  transfers. This is the safest and slowest option. Otherwise, specify
  a value between 5 and 40, depending on the capability of your SCSI
  controller. The higher the number, the faster the data transfer.
  Note that 40 should normally be ok since the driver decreases the
  value automatically according to the controller's capabilities.

  Your answer to this question is ignored for controllers with NVRAM,
  since the driver will get this information from the user set-up. It
  also can be overridden using a boot setup option, as follows
  (example): 'ncr53c8xx=sync:12' will allow the driver to negotiate
  for FAST-20 synchronous data transfer (20 mega-transfers per
  second).

  The normal answer therefore is not to go with the default but to
  select the maximum value 40 allowing the driver to use the maximum
  value supported by each controller. If this causes problems with
  your SCSI devices, you should come back and decrease the value.

  There is no safe option other than using good cabling, right
  terminations and SCSI conformant devices.

use normal IO
CONFIG_SCSI_NCR53C8XX_IOMAPPED
  If you say Y here, the driver will use normal IO, as opposed to
  memory mapped IO. Memory mapped IO has less latency than normal IO
  and works for most Intel-based hardware. Under Linux/Alpha only
  normal IO is currently supported by the driver and so, this option
  has no effect on those systems. 

  The normal answer therefore is N; try Y only if you encounter SCSI
  related problems.

not allow targets to disconnect
CONFIG_SCSI_NCR53C8XX_NO_DISCONNECT
  This option is only provided for safety if you suspect some SCSI
  device of yours to not support properly the target-disconnect
  feature. In that case, you would say Y here. In general however, to
  not allow targets to disconnect is not reasonable if there is more
  than 1 device on a SCSI bus. The normal answer therefore is N.

default tagged command queue depth
CONFIG_SCSI_NCR53C8XX_DEFAULT_TAGS
  "Tagged command queuing" is a feature of SCSI-2 which improves
  performance: the host adapter can send several SCSI commands to a
  device's queue even if previous commands haven't finished yet. Some
  SCSI devices don't implement this properly; if you want to disable
  this feature, enter 0 or 1 here (it doesn't matter which).

  The default value is 8 and should be supported by most hard disks.
  This value can be overridden from the boot command line using the 
  'tags' option as follows (example):
  'ncr53c8xx=tags:4/t2t3q16/t0u2q10' will set default queue depth to
  4, set queue depth to 16 for target 2 and target 3 on controller 0
  and set queue depth to 10 for target 0 / lun 2 on controller 1.

  The normal answer therefore is to go with the default 8 and to use 
  a boot command line option for devices that need to use a different 
  command queue depth.

  There is no safe option other than using good SCSI devices.

maximum number of queued commands
CONFIG_SCSI_NCR53C8XX_MAX_TAGS
  This option allows you to specify the maximum number of commands
  that can be queued to any device, when tagged command queuing is
  possible. The default value is 32. Minimum is 2, maximum is 64.
  Modern hard disks are able to support 64 tags and even more, but 
  donnot seem to be faster when more than 32 tags are being used.
  
  So, the normal answer here is to go with the default value 32 unless
  you are using very large hard disks with large cache (>= 1 MB) that
  are able to take advantage of more than 32 tagged commands.

  There is no safe option and the default answer is recommended.

assume boards are SYMBIOS compatible
CONFIG_SCSI_NCR53C8XX_SYMBIOS_COMPAT
  This option allows you to enable some features depending on GPIO
  wiring. These General Purpose Input/Output pins can be used for
  vendor specific features or implementation of the standard SYMBIOS
  features. Genuine SYMBIOS controllers use GPIO0 in output for
  controller LED and GPIO3 bit as a flag indicating
  singled-ended/differential interface. The Tekram DC-390U/F boards
  uses a different GPIO wiring.
  
  Your answer to this question is ignored if all your controllers have
  NVRAM, since the driver is able to detect the board type from the
  NVRAM format.

  If all the controllers in your system are genuine SYMBIOS boards or
  use BIOS and drivers from SYMBIOS, you would want to say Y here,
  otherwise N. N is the safe answer.

enable profiling statistics gathering
CONFIG_SCSI_NCR53C8XX_PROFILE
  This option allows you to enable profiling information gathering.
  These statistics are not very accurate due to the low frequency 
  of the kernel clock (100 Hz on i386) and have performance impact 
  on systems that use very fast devices.

  The normal answer therefore is N.

IBMMCA SCSI support
CONFIG_SCSI_IBMMCA
  This is support for the IBM SCSI adapter found in many of the PS/2
  series computers. These machines have an MCA bus, so you need to
  answer Y to "MCA support" as well and read Documentation/mca.txt.

  If the adapter isn't found during boot (a common problem for models
  56, 57, 76, and 77) you'll need to use the 'ibmmcascsi=<pun>' kernel
  option, where <pun> is the id of the SCSI subsystem (usually 7, but
  if that doesn't work check your reference diskette). Owners of model
  95 with a LED-matrix-display can in addition activate some activity
  info like under OS/2, but more informative, by setting
  'ibmmcascsi=display' as an additional kernel parameter. Try "man
  bootparam" or see the documentation of your boot loader about how to
  pass options to the kernel. The lilo procedure is also explained in
  the SCSI-HOWTO, available via FTP (user: anonymous) in
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO.

  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called ibmmca.o.

Standard SCSI-order
CONFIG_IBMMCA_SCSI_ORDER_STANDARD
  In the PC-world and in most modern SCSI-BIOS-setups, SCSI-hard disks
  are assigned to the drive letters, starting with the lowest SCSI-id
  (physical number -- pun) to be drive C:, as seen from DOS and
  similar operating systems. When looking into papers describing the
  ANSI-SCSI-standard, this assignment of drives appears to be wrong.
  The SCSI-standard follows a hardware-hierarchy which says that id 7
  has the highest priority and id 0 the lowest. Therefore, the host
  adapters are still today everywhere placed as SCSI-id 7 by default.
  In the SCSI-standard, the drive letters express the priority of the
  disk. C: should be the hard disk, or a partition on it, with the
  highest priority. This must therefore be the disk with the highest
  SCSI-id (e.g. 6) and not the one with the lowest! IBM-BIOS kept the
  original definition of the SCSI-standard as also industrial- and
  process-control-machines, like VME-CPUs running under realtime-OSs
  (e.g. LynxOS, OS9) do.

  If you like to run Linux on your MCA-machine with the same
  assignment of hard disks as seen from e.g. DOS or OS/2 on your
  machine, which is in addition conformant to the SCSI-standard, you
  must say Y here. This is also necessary for MCA-Linux users who want
  to keep downward compatibility to older releases of the
  IBM-MCA-SCSI-driver (older than driver-release 2.00 and older than
  June 1997).

  If you like to have the lowest SCSI-id assigned as drive C:, as
  modern SCSI-BIOSes do, which does not conform to the standard, but
  is widespread and common in the PC-world of today, you must say N
  here. If unsure, say Y.

Reset SCSI-devices at boot time
CONFIG_IBMMCA_SCSI_DEV_RESET
  By default, SCSI-devices are reset when the machine is powered on.
  However, some devices exist, like special-control-devices,
  SCSI-CNC-machines, SCSI-printer or scanners of older type, that do
  not reset when switched on. If you say Y here, each device connected
  to your SCSI-bus will be issued a reset-command after it has been
  probed, while the kernel is booting. This may cause problems with
  more modern devices, like hard disks, which do not appreciate these
  reset commands, and can cause your system to hang. So say Y only if
  you know that one of your older devices needs it; N is the safe
  answer.

Always IN2000 SCSI support
CONFIG_SCSI_IN2000
  This is support for an ISA bus SCSI host adapter. You'll find more
  information in drivers/scsi/in2000.readme. If it doesn't work out of
  the box, you may have to change the jumpers for IRQ or address
  selection. 

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called in2000.o.

PAS16 SCSI support
CONFIG_SCSI_PAS16
  This is support for a SCSI host adapter. It is explained in section
  3.10 of the SCSI-HOWTO, available via FTP (user: anonymous) at
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO. If it doesn't work out
  of the box, you may have to change some settings in
  drivers/scsi/pas16.h.
  
  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called pas16.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

PCI2000 support
CONFIG_SCSI_PCI2000
  This is support for the PCI2000I EIDE interface card which acts as a
  SCSI host adapter. Please read the SCSI-HOWTO, available via FTP
  (user: anonymous) at ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO. 

  This driver is also available as a module called pci2000.o ( = code
  which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt.

PCI2220i support
CONFIG_SCSI_PCI2220I
  This is support for the PCI2220i EIDE interface card which acts as a
  SCSI host adapter. Please read the SCSI-HOWTO, available via FTP
  (user: anonymous) at ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO. 

  This driver is also available as a module called pci2220i.o ( = code
  which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt.

PSI240i support
CONFIG_SCSI_PSI240I
  This is support for the PSI240i EIDE interface card which acts as a
  SCSI host adapter. Please read the SCSI-HOWTO, available via FTP
  (user: anonymous) at ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO. 

  This driver is also available as a module called psi240i.o ( = code
  which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt.

Qlogic FAS SCSI support
CONFIG_SCSI_QLOGIC_FAS
  This driver works only with the ISA, VLB, and PCMCIA versions of the
  Qlogic FastSCSI! cards as well as any other card based on the FASXX
  chip (including the Control Concepts SCSI/IDE/SIO/PIO/FDC cards); it
  does NOT support the PCI version. The PCI versions are supported by
  the Qlogic ISP driver though. Information about this driver is
  contained in drivers/scsi/README.qlogicfas. You should also read
  the SCSI-HOWTO, available via FTP (user: anonymous) at
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO. 

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called qlogicfas.o. If you want to compile it as
  a module, say M here and read Documentation/modules.txt.

Qlogic ISP SCSI support (EXPERIMENTAL)
CONFIG_SCSI_QLOGIC_ISP
  This driver works for all QLogic PCI SCSI host adapters (IQ-PCI,
  IQ-PCI-10, IQ_PCI-D) except for the PCI-basic card. (This latter
  card is supported by the "AM53/79C974 PCI SCSI" driver). 

  If you say Y here, make sure to say Y to "PCI BIOS support" as well.

  Please read the file drivers/scsi/README.qlogicisp. You should also
  read the SCSI-HOWTO, available via FTP (user: anonymous) at
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called qlogicisp.o. If you want to compile it as
  a module, say M here and read Documentation/modules.txt.

Seagate ST-02 and Future Domain TMC-8xx SCSI support
CONFIG_SCSI_SEAGATE
  These are 8-bit SCSI controllers; the ST-01 is also supported by
  this driver. It is explained in section 3.9 of the SCSI-HOWTO,
  available via FTP (user: anonymous) at
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO. If it doesn't work out
  of the box, you may have to change some settings in
  drivers/scsi/seagate.h.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called seagate.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

Trantor T128/T128F/T228 SCSI support
CONFIG_SCSI_T128
  This is support for a SCSI host adapter. It is explained in section
  3.11 of the SCSI-HOWTO, available via FTP (user: anonymous) at
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO. If it doesn't work out
  of the box, you may have to change some settings in
  drivers/scsi/t128.h. Note that Trantor was purchased by Adaptec, and
  some former Trantor products are being sold under the Adaptec name.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called t128.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

UltraStor SCSI support
CONFIG_SCSI_ULTRASTOR
  This is support for the UltraStor 14F, 24F and 34F SCSI-2 host
  adapter family. This driver is explained in section 3.12 of the
  SCSI-HOWTO, available via FTP (user: anonymous) at
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO. If it doesn't work out
  of the box, you may have to change some settings in
  drivers/scsi/ultrastor.h.
  
  Note that there is also another driver for the same hardware:
  "UltraStor 14F/34F support", above.

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called ultrastor.o. 

7000FASST SCSI support
CONFIG_SCSI_7000FASST
  This driver supports the Western Digital 7000 SCSI host adapter
  family. Some information is in the source: drivers/scsi/wd7000.c.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you
  want). The module will be called wd7000.o. If you want to compile it
  as a module, say M here and read Documentation/modules.txt.

EATA ISA/EISA/PCI (DPT and generic EATA/DMA-compliant boards) support
CONFIG_SCSI_EATA
  This driver supports all the EATA/DMA-compliant SCSI host adapters
  and does not need any BIOS32 service. DPT ISA and all EISA i/o
  addresses are probed looking for the "EATA" signature. If you said Y
  to "PCI BIOS support", the addresses of all the PCI SCSI controllers
  reported by BIOS32 are probed as well. You want to read the start of
  drivers/scsi/eata.c and the SCSI-HOWTO, available via FTP (user:
  anonymous) at ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO.

  Note that there is also another driver for the same hardware
  available: "EATA-DMA support". You should say Y to only one of them.

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called eata.o.

enable tagged command queuing
CONFIG_SCSI_EATA_TAGGED_QUEUE
  This is a feature of SCSI-2 which improves performance: the host
  adapter can send several SCSI commands to a device's queue even if
  previous commands haven't finished yet. Some SCSI devices don't
  implement this properly, so the safe answer is N.
        
enable elevator sorting
CONFIG_SCSI_EATA_LINKED_COMMANDS
  This is a feature of SCSI-2 which improves performance: the host
  adapter can send a whole list of commands to a device in one
  batch. Some SCSI devices might not implement this properly, so the
  safe answer is N.

maximum number of queued commands
CONFIG_SCSI_EATA_MAX_TAGS
  This specifies how many SCSI commands can be maximally queued for a
  given SCSI device. Go with the default unless you know what you're
  doing. Minimum is 2 and maximum is 16. This number will only have an
  effect if you said Y to "enable tagged command queuing", above.

NCR53c406a SCSI support
CONFIG_SCSI_NCR53C406A
  This is support for the NCR53c406a SCSI host adapter. For user
  configurable parameters, check out drivers/scsi/NCR53c406.c in the
  kernel source. Also read the SCSI-HOWTO, available via FTP (user:
  anonymous) at ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO. 

  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called NCR53c406.o.

Tekram DC390(T) and Am53/79C974 (PCscsi) SCSI support
CONFIG_SCSI_DC390T
  This driver supports PCI SCSI host adapters based on the Am53C974A
  chip, e.g. Tekram DC390(T), DawiControl 2974 and some onboard
  PCscsi/PCnet (Am53/79C974) solutions.

  Documentation can be found in linux/drivers/scsi/README.tmscsim.
  
  Note that this driver does NOT support Tekram DC390W/U/F, which are
  based on NCR/Symbios chips. Use "NCR53C8XX SCSI support" for those.
  Also note that there is another generic Am53C974 driver.

  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called tmscsim.o.

Omit support for other Am53/79C974 based SCSI adapters
CONFIG_SCSI_DC390T_NOGENSUPP
  If you say N here, the DC390(T) SCSI driver relies on the DC390
  EEPROM to get initial values for its settings, such as speed,
  termination, etc. If it can't find this EEPROM, it will use defaults
  or the user supplied boot/module parameters. For details on driver
  configuration see linux/drivers/scsi/README.tmscsim.

  If you say Y here and if no EEPROM is found, the driver gives up and
  thus only supports Tekram DC390(T) adapters. This can be useful if
  you have a DC390(T) and another Am53C974 based adapter, which, for
  some reason, you want to drive with the other AM53C974 driver.

  If unsure, say N.

AM53/79C974 PCI SCSI support
CONFIG_SCSI_AM53C974
  This is support for the AM53/79C974 SCSI host adapters. Please read
  drivers/scsi/README.AM53C974 for details. Also, the SCSI-HOWTO,
  available via FTP (user: anonymous) at
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO, is for you.

  Note that there is another driver for AM53C974 based adapters:
  "Tekram DC390(T) and Am53/79C974 (PCscsi) SCSI support", above.

  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called AM53C974.o.

GDT SCSI Disk Array Controller support
CONFIG_SCSI_GDTH
  This is a driver for all SCSI Disk Array Controllers (EISA/ISA/PCI) 
  manufactured by ICP vortex. It is documented in the kernel source in
  drivers/scsi/gdth.c and drivers/scsi/gdth.h. 

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  If you want to compile it as a module, say M here and read
  Documentation/modules.txt.

IOMEGA Parallel Port ZIP drive SCSI support
CONFIG_SCSI_PPA
  This driver supports the parallel port version of IOMEGA's ZIP drive
  (a 100 MB removable media device). For more information about this
  driver and how to use it you should read the file
  drivers/scsi/README.ppa. You should also read the SCSI-HOWTO, which
  is available via FTP (user: anonymous) from
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO. If you use this driver,
  you will still be able to use the parallel port for other tasks,
  such as a printer; it is safe to compile both drivers into the
  kernel.

  Note that you can say N here if you have the SCSI version of the ZIP
  drive: it will be supported automatically if you said Y to the
  generic "SCSI disk support", above.

  This driver is also available as a module which can be inserted in
  and removed from the running kernel whenever you want. To compile
  this driver as a module, say M here and read
  Documentation/modules.txt. The module will be called ppa.o. 

EPP FIFO Checking
CONFIG_SCSI_PPA_HAVE_PEDANTIC
  EPP (Enhanced Parallel Port) is a standard for parallel ports which
  allows them to act as expansion buses that can handle up to 64
  peripheral devices. Some parallel port chipsets are slower than
  their motherboard, and so we have to control the state of the
  chipset's FIFO queue every now and then to avoid data loss. This
  will be done if you say Y here. 
  
  If your EPP chipset is from the SMC series, you are likely to have
  to say Y here. Generally, saying Y is the safe option and slows
  things down a bit.

SCSI Debug host simulator.
CONFIG_SCSI_DEBUG
  This is a host adapter simulator that can be programmed to simulate
  a large number of conditions that could occur on a real bus. The
  advantage is that many hard to reproduce problems can be tested in a
  controlled environment where there is reduced risk of losing
  important data. This is primarily of use to people trying to debug
  the middle and upper layers of the SCSI subsystem. If unsure, say N.

Fibre Channel support
CONFIG_FC4
  This is an experimental support for storage arrays connected to
  the system using Fibre Optic and the "X3.269-199X Fibre Channel
  Protocol for SCSI" specification. You'll also need the generic SCSI
  support, as well as the drivers for the storage array itself and
  for the interface adapter such as SOC. This subsystem could even
  serve for IP networking, with some code extensions.

  If unsure, say N.

Sun SOC
CONFIG_FC4_SOC
  Serial Optical Channel is an interface card with one or two Fibre
  Optic ports, each of which can be connected to a disk array. Only
  the SBus incarnation of the adapter is supported at the moment.

SparcSTORAGE Array 100 and 200 series
CONFIG_SCSI_PLUTO
  If you never bought a disk array made by Sun, go with N. 

AcornSCSI support
CONFIG_SCSI_ACORNSCSI_3
  This enables support for the Acorn SCSI card (aka30). If you have an
  Acorn system with one of these, say Y. If unsure, say N.

Acorn SCSI tagged queue support
CONFIG_SCSI_ACORNSCSI_TAGGED_QUEUE
  Say Y here to enable tagged queuing support on the Acorn SCSI card.

  This is a feature of SCSI-2 which improves performance: the host
  adapter can send several SCSI commands to a device's queue even if
  previous commands haven't finished yet. Some SCSI devices don't
  implement this properly, so the safe answer is N.

Acorn SCSI Synchronous transfers support
CONFIG_SCSI_ACORNSCSI_SYNC
  Say Y here to enable synchronous transfer negotiation with all
  targets on the Acorn SCSI card.

  In general, this improves performance; however some SCSI devices
  don't implement it properly, so the safe answer is N.

Oak SCSI support
CONFIG_SCSI_OAK1
  This enables support for the Oak SCSI card. If you have an Acorn
  system with one of these, say Y. If unsure, say N.

Cumana SCSI I support
CONFIG_SCSI_CUMANA_1
  This enables support for the Cumana SCSI I card. If you have an
  Acorn system with one of these, say Y. If unsure, say N.

Cumana SCSI II support
CONFIG_SCSI_CUMANA_2
  This enables support for the Cumana SCSI II card. If you have an
  Acorn system with one of these, say Y. If unsure, say N.

EcoSCSI support
CONFIG_SCSI_ECOSCSI
  This enables support for the EcoSCSI card -- a small card that sits
  in the Econet socket. If you have an Acorn system with one of these,
  say Y. If unsure, say N.

EESOX SCSI support
CONFIG_SCSI_EESOXSCSI
  This enables support for the EESOX SCSI card. If you have an Acorn
  system with one of these, say Y, otherwise say N.

Powertec SCSI support
CONFIG_SCSI_POWERTECSCSI
  This enables support for the Powertec SCSI card on Acorn systems. If
  you have one of these, say Y. If unsure, say N.

Network device support?
CONFIG_NETDEVICES
  You can say N here if you don't intend to connect to any other
  computer at all or if all your connections will be over a telephone
  line with a modem either via UUCP (UUCP is a protocol to forward
  mail and news between unix hosts over telephone lines; read the
  UUCP-HOWTO, available via FTP (user: anonymous) in
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO) or dialing up a shell
  account or a BBS, even using term (term is a program which gives you
  almost full Internet connectivity if you have a regular dial up
  shell account on some Internet connected Unix computer. Read
  http://www.bart.nl/~patrickr/term-howto/Term-HOWTO.html (to browse
  the WWW, you need to have access to a machine on the Internet that
  has a program like lynx or netscape)).

  You'll have to say Y if your computer contains a network card that
  you want to use under Linux (make sure you know its name because you
  will be asked for it and read the Ethernet-HOWTO (especially if you
  plan to use more than one network card under Linux), available from
  ftp://sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini) or if you want to
  use SLIP (Serial Line Internet Protocol is the protocol used to send
  Internet traffic over telephone lines or null modem cables) or CSLIP
  (compressed SLIP) or PPP (Point to Point Protocol, a better and
  newer replacement for SLIP) or PLIP (Parallel Line Internet Protocol
  is mainly used to create a mini network by connecting the parallel
  ports of two local machines) or AX.25/KISS (protocol for sending
  Internet traffic over radio links).

  Make sure to read the NET-2-HOWTO. Eventually, you will have to read
  Olaf Kirch's excellent and free book "Network Administrator's
  Guide", to be found in ftp://sunsite.unc.edu:/pub/Linux/docs/LDP. If
  unsure, say Y.

Dummy net driver support
CONFIG_DUMMY
  This is essentially a bit-bucket device (i.e. traffic you send to
  this device is consigned into oblivion) with a configurable IP
  address. It is most commonly used in order to make your currently
  inactive SLIP address seem like a real address for local programs.
  If you use SLIP or PPP, you might want to say Y here. Read about it
  in the Network Administrator's Guide, available via FTP (user:
  anonymous) from ftp://sunsite.unc.edu/pub/Linux/docs/LDP. Since this
  thing often comes in handy, the default is Y. It won't enlarge your
  kernel either. What a deal.

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called dummy.o. If you want to use more than one dummy device at a
  time, you need to compile this driver as a module. Instead of
  'dummy', the devices will then be called 'dummy0', 'dummy1' etc.

SLIP (serial line) support
CONFIG_SLIP
  Say Y if you intend to use SLIP or CSLIP (compressed SLIP) to
  connect to your Internet service provider or to connect to some
  other local Unix box or if you want to configure your Linux box as a
  Slip/CSlip server for other people to dial in. SLIP (Serial Line
  Internet Protocol) is a protocol used to send Internet traffic over
  serial connections such as telephone lines or null modem cables;
  nowadays, the protocol PPP is more commonly used for this same
  purpose.

  Normally, your access provider has to support SLIP in order for you
  to be able to use it, but there is now a SLIP emulator called SLiRP
  around (available via FTP (user: anonymous) from
  ftp://sunsite.unc.edu/pub/Linux/system/network/serial/ ) which
  allows you to use SLIP over a regular dial up shell connection. If
  you plan to use SLiRP, make sure to say Y to CSLIP, below. The
  NET-2-HOWTO, available via FTP (user: anonymous) in
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO, explains how to
  configure SLIP. Note that you don't need this option if you just
  want to run term (term is a program which gives you almost full
  Internet connectivity if you have a regular dial up shell account on
  some Internet connected Unix computer. Read
  http://www.bart.nl/~patrickr/term-howto/Term-HOWTO.html (to browse
  the WWW, you need to have access to a machine on the Internet that
  has a program like lynx or netscape)). SLIP support will enlarge
  your kernel by about 4 KB. If unsure, say N.

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. The module will be called
  slip.o.

CSLIP compressed headers
CONFIG_SLIP_COMPRESSED
  This protocol is faster than SLIP because it uses compression on the
  TCP/IP headers (not on the data itself), but it has to be supported
  on both ends. Ask your access provider if you are not sure and
  answer Y, just in case. You will still be able to use plain SLIP. If
  you plan to use SLiRP, the SLIP emulator (available via FTP (user:
  anonymous) from
  ftp://sunsite.unc.edu/pub/Linux/system/network/serial/) which allows
  you to use SLIP over a regular dial up shell connection, you
  definitely want to say Y here. The NET-2-HOWTO, available via FTP
  (user: anonymous) in ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO,
  explains how to configure CSLIP. This won't enlarge your kernel.

Keepalive and linefill
CONFIG_SLIP_SMART
  Adds additional capabilities to the SLIP driver to support the
  RELCOM line fill and keepalive monitoring. Ideal on poor quality
  analogue lines.

Six bit SLIP encapsulation
CONFIG_SLIP_MODE_SLIP6
  Just occasionally you may need to run IP over hostile serial
  networks that don't pass all control characters or are only seven
  bit. Saying Y here adds an extra mode you can use with SLIP:
  "slip6". In this mode, SLIP will only send normal ASCII symbols over
  the serial device. Naturally, this has to be supported at the other
  end of the link as well. It's good enough, for example, to run IP
  over the async ports of a Camtec JNT Pad. If unsure, say N.

PPP (point-to-point) support
CONFIG_PPP
  PPP (Point to Point Protocol) is a newer and better SLIP. It serves
  the same purpose: sending Internet traffic over telephone (and other
  serial) lines. Ask your access provider if they support it, because
  otherwise you can't use it (not quite true any more: the free
  program SLiRP can emulate a PPP line if you just have a regular dial
  up shell account on some UNIX computer; get it via FTP (user:
  anonymous) from
  ftp://sunsite.unc.edu/pub/Linux/system/network/serial/). Note that
  you don't need "PPP support" if you just want to run term (term is a
  program which gives you almost full Internet connectivity if you
  have a regular dial up shell account on some Internet connected UNIX
  computer. Read
  http://www.bart.nl/~patrickr/term-howto/Term-HOWTO.html (to browse
  the WWW, you need to have access to a machine on the Internet that
  has a program like lynx or netscape)).

  To use PPP, you need an additional program called pppd as described
  in Documentation/networking/ppp.txt and in the PPP-HOWTO, available
  from ftp://sunsite.unc.edu:/pub/Linux/docs/HOWTO. If you upgrade
  from an older kernel, you might need to upgrade pppd as well. The
  PPP option enlarges your kernel by about 16 KB.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  If you said Y to "Version information on all symbols" above, then
  you cannot compile the PPP driver into the kernel; you can then only
  compile it as a module. The module will be called ppp.o. If you want
  to compile it as a module, say M here and read
  Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. Note that, no matter what
  you do, the BSD compression code (used to compress the IP packets
  sent over the serial line; has to be supported at the other end as
  well) will always be compiled as a module; it is called bsd_comp.o
  and will show up in the directory modules once you have said "make
  modules". If unsure, say N.

Wireless LAN (non-hamradio)
CONFIG_NET_RADIO
  Support for wireless LANs and everything having to do with radio,
  but not with amateur radio. Note that the answer to this question
  won't directly affect the kernel: saying N will just cause this
  configure script to skip all the questions about radio
  interfaces. 

  Some user-level drivers for scarab devices which don't require
  special kernel support are available via FTP (user: anonymous) from
  ftp://shadow.cabi.net/pub/Linux.

STRIP (Metricom Starmode radio IP)
CONFIG_STRIP
  Say Y if you have a Metricom radio and intend to use Starmode Radio
  IP. STRIP is a radio protocol developed for the MosquitoNet project
  (On the WWW at http://mosquitonet.stanford.edu/; to browse the WWW,
  you need to have access to a machine on the Internet that has a
  program like lynx or netscape) to send Internet traffic using
  Metricom radios. Metricom radios are small, battery powered,
  100kbit/sec packet radio transceivers, about the size and weight of
  a cellular telephone. (You may also have heard them called
  "Metricom modems" but we avoid the term "modem" because it misleads
  many people into thinking that you can plug a Metricom modem into a
  phone line and use it as a modem.)  

  You can use STRIP on any Linux machine with a serial port, although
  it is obviously most useful for people with laptop computers. If you
  think you might get a Metricom radio in the future, there is no harm
  in saying Y to STRIP now, except that it makes the kernel a bit
  bigger. 

  You can also compile this as a module ( = code which can be inserted
  in and removed from the running kernel whenever you want), say M
  here and read Documentation/modules.txt. The module will be called
  strip.o.

AT&T WaveLAN & DEC RoamAbout DS support
CONFIG_WAVELAN
  The Lucent WaveLAN (formerly NCR and AT&T; or DEC RoamAbout DS) is
  a Radio LAN (wireless Ethernet-like Local Area Network) using the
  radio frequencies 900 MHz and 2.4 GHz.
  
  This driver support the ISA version of the WaveLAN card. A separate
  driver for the pcmcia hardware is available in David Hinds'
  pcmcia-cs package (see the file Documentation/Changes for location).

  If you want to use an ISA WaveLAN card under Linux, say Y and read
  the Ethernet-HOWTO, available via FTP (user: anonymous) in
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO. Some more specific
  information is contained in Documentation/networking/wavelan.txt and
  in the source code drivers/net/wavelan.p.h.

  You will also need the wireless tools package available from
  ftp://ftp.inka.de/pub/comp/Linux/networking/NetTools/contrib/.
  Please read the man pages contained therein.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called wavelan.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

LAPB over Ethernet driver
CONFIG_LAPBETHER
  This is a driver for a pseudo device (typically called /dev/lapb0)
  which allows you to open an LAPB point-to-point connection to some
  other computer on your Ethernet network. In order to do this, you
  need to say Y or M to the driver for your Ethernet card as well as
  to "LAPB Data Link Driver". 

  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called lapbether.o. If unsure, say N.

X.25 async driver
CONFIG_X25_ASY
  This is a driver for sending and receiving X.25 frames over regular
  asynchronous serial lines such as telephone lines equipped with
  ordinary modems. Experts should note that this driver doesn't
  currently comply with the asynchronous HDLS framing protocols in
  CCITT recommendation X.25. 

  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called x25_asy.o. If unsure, say N.

Shortwave radio modem driver
CONFIG_HFMODEM
  This experimental driver is used by a package (to be released)
  that implements the shortwave radio protocols RTTY, Sitor (Amtor),
  Pactor 1 and GTOR using a standard PC sound card. If unsure,
  say N.

Shortwave radio modem driver support for Sound Blaster and compatible cards
CONFIG_HFMODEM_SBC
  This option enables the hfmodem driver to use Sound Blaster and
  compatible cards. It requires a 16bit capable card, i.e.
  SB16 or better, or ESS1688 or newer.

Shortwave radio modem driver support for WSS and Crystal cards
CONFIG_HFMODEM_WSS
  This option enables the hfmodem driver to use WindowsSoundSystem
  compatible cards. These cards feature a codec chip from either
  Analog Devices (such as AD1848, AD1845) or Crystal Semiconductors
  (such as CS4248, CS423x).

PLIP (parallel port) support
CONFIG_PLIP
  PLIP (Parallel Line Internet Protocol) is used to create a
  reasonably fast mini network consisting of two (or, rarely, more)
  local machines. A PLIP link from a Linux box is a popular means to
  install a Linux distribution on a machine which doesn't have a CDROM
  drive (a minimal system has to be transferred with floppies first).
  The kernels on both machines need to have this PLIP option enabled
  for this to work.

  The PLIP driver has two modes, mode 0 and mode 1. The parallel ports
  (the connectors at the computers with 25 holes) are connected with
  "null printer" or "Turbo Laplink" cables which can transmit 4 bits
  at a time (mode 0) or with special PLIP cables, to be used on
  bidirectional parallel ports only, which can transmit 8 bits at a
  time (mode 1); you can find the wiring of these cables in
  Documentation/networking/PLIP.txt. The cables can be up to 15m long.
  Mode 0 works also if one of the machines runs DOS/Windows and has
  some PLIP software installed, e.g. the Crynwr PLIP packet driver
  (http://oak.oakland.edu/simtel.net/msdos/pktdrvr-pre.html; to browse
  the WWW, you need to have access to a machine on the Internet that
  has a program like lynx or netscape) and winsock or NCSA's telnet.

  If you want to use PLIP, say Y and read the PLIP mini-HOWTO,
  available via FTP (user: anonymous) in
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO/mini as well as the
  NET-2-HOWTO in ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO. Note that
  the PLIP protocol was changed and this PLIP driver won't work
  together with the PLIP support in Linux versions 1.0.x. This option
  enlarges your kernel by about 8 KB.

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. The module will be called
  plip.o. If unsure, say Y or M, in case you buy a laptop later.

EQL (serial line load balancing) support
CONFIG_EQUALIZER
  If you have two serial connections to some other computer (this
  usually requires two modems and two telephone lines) and you use
  SLIP (the protocol for sending Internet traffic over telephone
  lines) or PPP (a better SLIP) on them, you can make them behave
  like one double speed connection using this driver. Naturally, this
  has to be supported at the other end as well, either with a similar
  EQL Linux driver or with a Livingston Portmaster 2e. Say Y if you
  want this and read Documentation/networking/eql.txt. 

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called eql.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt. If unsure,
  say N.

Ethertap network tap
CONFIG_ETHERTAP
  If you say Y here (and have said Y to "Kernel/User network link
  driver", above) and create a character special file /dev/tap0 with
  major number 36 and minor number 16 using mknod ("man mknod"), you
  will be able to have a user space program read and write raw
  Ethernet frames from/to that special file. tap0 can be configured
  with ifconfig and route like any other Ethernet device but it is not
  connected to any physical LAN; everything written by the user to
  /dev/tap0 is treated by the kernel as if it had come in from a LAN
  to the device tap0; everything the kernel wants to send out over the
  device tap0 can instead be read by the user from /dev/tap0: the user
  mode program replaces the LAN that would be attached to an ordinary
  Ethernet device. Please read the file
  Documentation/networking/ethertap.txt for more information. 

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called ethertap.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt. If you don't
  know what to use this for, you don't need it.

Frame Relay (DLCI) support
CONFIG_DLCI
  This is support for the frame relay protocol; frame relay is a fast
  low-cost way to connect to a remote Internet access provider or to
  form a private wide area network. The one physical line from your
  box to the local "switch" (i.e. the entry point to the frame relay
  network, usually at the phone company) can carry several logical
  point-to-point connections to other computers connected to the frame
  relay network. For a general explanation of the protocol, check out
  http://www.frforum.com/ on the WWW. (To browse the WWW, you need to
  have access to a machine on the Internet that has a program like
  lynx or netscape.) To use frame relay, you need supporting hardware
  (called FRAD) and certain programs from the net-tools package as
  explained in Documentation/networking/framerelay.txt.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called dlci.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

Max open DLCI
CONFIG_DLCI_COUNT
  This is the maximal number of logical point-to-point frame relay
  connections (the identifiers of which are called DCLIs) that
  the driver can handle. The default is probably fine.

Max DLCI per device
CONFIG_DLCI_MAX
  You can specify here how many logical point-to-point frame relay
  connections (the identifiers of which are called DCLIs) should be
  handled by each of your hardware frame relay access devices. Go with
  the default.

Sangoma S502A FRAD support
CONFIG_SDLA
  Say Y here if you need a driver for the Sangoma S502A, S502E, and
  S508 Frame Relay Access Devices. These are multi-protocol cards, but
  only frame relay is supported by the driver at this time. Please
  read Documentation/framerelay.txt. 

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called sdla.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

Acorn Econet/AUN protocols (EXPERIMENTAL)
CONFIG_ECONET
  Econet is a fairly old and slow networking protocol mainly used by
  Acorn computers to access file and print servers. It uses native
  Econet network cards. AUN is an implementation of the higher level
  parts of Econet that runs over ordinary Ethernet connections, on
  top of the UDP packet protocol, which in turn runs on top of the
  Internet protocol IP.

  If you say Y here, you can choose with the next two options whether
  to send Econet/AUN traffic over a UDP Ethernet connection or over
  a native Econet network card.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called econet.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

AUN over UDP
CONFIG_ECONET_AUNUDP
  Say Y here if you want to send Econet/AUN traffic over a UDP
  connection (UDP is a packet based protocol that runs on top of the
  Internet protocol IP) using an ordinary Ethernet network card.

Native Econet
CONFIG_ECONET_NATIVE
  Say Y here if you have a native Econet network card installed in
  your computer.

WAN Router
CONFIG_WAN_ROUTER
  Wide Area Networks (WANs), such as X.25, frame relay and leased
  lines, are used to interconnect Local Area Networks (LANs) over vast
  distances with data transfer rates significantly higher than those
  achievable with commonly used asynchronous modem connections.
  Usually, a quite expensive external device called a `WAN router' is
  needed to connect to a WAN.

  As an alternative, WAN routing can be built into the Linux kernel.
  With relatively inexpensive WAN interface cards available on the
  market, a perfectly usable router can be built for less than half
  the price of an external router. If you have one of those cards and
  wish to use your Linux box as a WAN router, say Y here and to the
  WAN driver for your card, below. You will also need a wan-tools
  package available via FTP (user: anonymous) from
  ftp://ftp.sangoma.com. Read Documentation/networking/wan-router.txt
  for more information.

  WAN routing support is always built as a module ( = code which can
  be inserted in and removed from the running kernel whenever you
  want). The module is called wanrouter.o. For general information
  about modules read Documentation/modules.txt.

Fast switching (read help!)
CONFIG_NET_FASTROUTE
  Saying Y here enables direct NIC-to-NIC (NIC = Network Interface
  Card) data transfers, which is fast.

    *** This option is NOT COMPATIBLE with several important ***
    *** networking options: especially CONFIG*FIREWALL.      ***

  However, it will work with all options in CONFIG_IP_ADVANCED_ROUTER
  section (except for CONFIG_IP_ROUTE_TOS). At the moment, few devices
  support fast switching (tulip is one of them, modified 8390 can be
  found at ftp://ftp.inr.ac.ru/ip-routing/fastroute-8390.tar.gz). 

  If unsure, say N.

Forwarding between high speed interfaces
CONFIG_NET_HW_FLOWCONTROL
  This option enables NIC (Network Interface Card) hardware throttling
  during periods of extremal congestion. At the moment only a couple
  of device drivers support it (really only one -- tulip, modified
  8390 can be found at
  ftp://ftp.inr.ac.ru/ip-routing/fastroute-8390.tar.gz). Really, this
  option is applicable to any machine attached to a fast enough
  network, and even a 10 Mb NIC is able to kill a not very slow box,
  such as a 120MHz Pentium.

  However, do not say Y here if you did not experience any serious
  problems.

CPU is too slow to handle full bandwidth
CONFIG_CPU_IS_SLOW
  If you suspect that your CPU is not fast enough to handle the
  full bandwidth of your network connection, try saying Y here. If
  unsure, say N.

QoS and/or fair queueing
CONFIG_NET_SCHED
  When the kernel has several packets to send out over the network
  devices, it has to make a decision which one to send first. This is
  especially important if some of the network devices are real time
  devices that need a certain minimum data flow rate. There are
  several different algorithms for how to do this "fairly"; they are
  called packet schedulers. If you want to stick to the default
  scheduling algorithm, say N here. If you want to experiment with a
  couple of different algorithms, say Y. You can then attach different
  schedulers to different network devices. Currently, this is only
  recommended for experts.

  To administer these schedulers, you'll need the user-level utilities
  from the package iproute2+tc at ftp://ftp.inr.ac.ru/ip-routing/

  If you say Y here and to "/proc filesystem" below, you will be able
  to read status information about priority schedulers from the file
  /proc/net/psched.
  
  The available schedulers are listed in the following questions; you
  can say Y to as many as you like. If unsure, say N now.

CBQ packet scheduler
CONFIG_NET_SCH_CBQ
  Say Y here if you want to use the Class-Based Queueing (CBQ) packet
  scheduling algorithm for some of your network devices. This
  algorithm classifies the waiting packets into a tree-like hierarchy
  of classes; the leaves of this tree are in turn scheduled by
  separate algorithms (called "disciplines" in this context) which you
  can choose below from among the various queueing algorithms. See the
  top of net/sched/sch_cbq.c for references about the CBQ algorithm.

  This code is also available as a module called sch_cbq.o ( = code
  which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt.

CSZ packet scheduler
CONFIG_NET_SCH_CSZ
  Say Y here if you want to use the Clark-Shenker-Zhang (CSZ) packet
  scheduling algorithm for some of your network devices. At the
  moment, this is the only algorithm that can guarantee service for
  real-time applications (see the top of net/sched/sch_csz.c for
  details and references about the algorithm). 
  
  Note: this scheduler is currently broken.

  This code is also available as a module called sch_csz.o ( = code
  which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt.

The simplest PRIO pseudo scheduler
CONFIG_NET_SCH_PRIO
  Say Y here if you want to use an n-band priority queue packet
  "scheduler" for some of your network devices or as a leaf discipline
  for the CBQ scheduling algorithm. 

  This code is also available as a module called sch_prio.o ( = code
  which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt.

RED queue
CONFIG_NET_SCH_RED
  Say Y here if you want to use the Random Early Detection (RED)
  packet scheduling algorithm for some of your network devices (see
  the top of net/sched/sch_red.c for details and references about the
  algorithm). 

  This code is also available as a module called sch_red.o ( = code
  which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt.

SFQ queue
CONFIG_NET_SCH_SFQ
  Say Y here if you want to use the Stochastic Fairness Queueing (SFQ)
  packet scheduling algorithm for some of your network devices or as a
  leaf discipline for the CBQ scheduling algorithm (see the top of
  net/sched/sch_sfq.c for details and references about the SFQ
  algorithm). 

  This code is also available as a module called sch_sfq.o ( = code
  which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt.

TEQL queue
CONFIG_NET_SCH_TEQL
  Say Y here if you want to use the True Link Equalizer (TLE) packet
  scheduling algorithm for some of your network devices or as a leaf
  discipline for the CBQ scheduling algorithm. This queueing
  discipline allows the combination of several physical devices into
  one virtual device. (see the top of net/sched/sch_teql.c for
  details).

  This code is also available as a module called sch_teql.o ( = code
  which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt.

TBF queue
CONFIG_NET_SCH_TBF
  Say Y here if you want to use the Simple Token Bucket Filter (TBF)
  packet scheduling algorithm for some of your network devices or as a
  leaf discipline for the CBQ scheduling algorithm (see the top of
  net/sched/sch_tbf.c for a description of the TBF algorithm). 

  This code is also available as a module called sch_tbf.o ( = code
  which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt.

QoS support
CONFIG_NET_QOS
  Say Y here if you want to include Quality Of Service scheduling
  features, which means that you will be able to request certain
  rate-of-flow limits for your net devices.

  Note that the answer to this question won't directly affect the
  kernel: saying N will just cause this configure script to skip all
  the questions about QoS support.

Rate estimator
CONFIG_NET_ESTIMATOR
  In order for Quality of Service scheduling to work, the current
  rate-of-flow for a network device has to be estimated; if you say Y
  here, the kernel will do just that.

Packet classifier API
CONFIG_NET_CLS
  The CBQ scheduling algorithm requires that network packets which are
  scheduled to be sent out over a network device be classified in some
  way. If you say Y here, you will get a choice of several different
  packet classifiers with the following questions. 
#
# Routing tables based classifier
# CONFIG_NET_CLS_ROUTE
#
# Firewall based classifier
# CONFIG_NET_CLS_FW
#
# U32 classifier
# CONFIG_NET_CLS_U32
#
# Special RSVP classifier
# CONFIG_NET_CLS_RSVP
#
# Special RSVP classifier for IPv6
# CONFIG_NET_CLS_RSVP6
#
# Ingres traffic policing
# CONFIG_NET_CLS_POLICE
###
### Some expert please fill these in
###

Network code profiler
CONFIG_NET_PROFILE
  If you say Y here and to "/proc filesystem support" below, some
  obscure and undocumented information about the network code's
  performance will be written to /proc/net/profile. If you don't know
  what it is about, you don't need it: say N.

Comtrol Hostess SV-11 support
CONFIG_HOSTESS_SV11
  This is a network card for low speed synchronous serial links, at
  up to 256Kbits. It supports both PPP and Cisco HDLC
  At this point, the driver can only be compiled as a module.

WAN Drivers
CONFIG_WAN_DRIVERS
  Say Y to this option if your Linux box contains a WAN card and you
  are planning to use the box as a WAN ( = Wide Area Network) router 
  ( = device used to interconnect local area networks over wide area
  communication links, such as leased lines or public data networks,
  e.g. X.25 or frame relay) and you will be offered a list of drivers
  for WAN cards currently available. For more information, read
  Documentation/networking/wan-router.txt.

  Note that the answer to this question won't directly affect the
  kernel: saying N will just cause this configure script to skip all
  the questions about WAN card drivers. If unsure, say N.

Sangoma WANPIPE(tm) multiprotocol cards
CONFIG_VENDOR_SANGOMA
  WANPIPE from Sangoma Technologies Inc. (http://www.sangoma.com; to
  browse the WWW, you need to have access to a machine on the Internet
  that has a program like lynx or netscape) is a family of intelligent
  multiprotocol WAN adapters with data transfer rates up to T1 (1.544
  Mbps). They are also known as Synchronous Data Link Adapters (SDLA)
  and designated S502E(A), S503 or S508. These cards support the X.25,
  Frame Relay, and PPP protocols. If you have one or more of these
  cards, say Y to this option; you may then also want to read the file
  Documentation/networking/wanpipe.txt. The next questions will ask
  you about the protocols you want the driver to support.

  The driver will be compiled as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called wanpipe.o. For general information about
  modules read Documentation/modules.txt.

Maximum number of cards
CONFIG_WANPIPE_CARDS
  Enter number of WANPIPE adapters installed in your machine. The
  driver can support up to 8 cards. You may enter more than you
  actually have if you plan to add more cards in the future without
  re-compiling the driver, but remember that in this case you'll waste
  some kernel memory (about 1K per card).

WANPIPE X.25 support
CONFIG_WANPIPE_X25
  Say Y to this option if you are planning to connect a WANPIPE card
  to an X.25 network. You should then also have said Y to "CCITT X.25
  Packet Layer" and "LAPB Data Link Driver", above. If you say N, the
  X.25 support will not be included in the driver (saves about 16 KB
  of kernel memory).

WANPIPE Frame Relay support
CONFIG_WANPIPE_FR
  Say Y to this option if you are planning to connect a WANPIPE card
  to a frame relay network. You should then also have said Y to "Frame
  Relay (DLCI) support", above. If you say N, the frame relay
  support will not be included in the driver (saves about 16 KB of
  kernel memory).

WANPIPE PPP support
CONFIG_WANPIPE_PPP
  Say Y to this option if you are planning to connect a WANPIPE card
  to a leased line using Point-to-Point protocol (PPP). You should
  then also have said Y to "PPP (point-to-point) support", above. If
  you say N, the PPP support will not be included in the driver (saves
  about 16 KB of kernel memory).

Ethernet (10 or 100Mbit)
CONFIG_NET_ETHERNET
  Ethernet (also called IEEE 802.3 or ISO 8802-2) is the most common
  type of Local Area Network (LAN) in universities and companies.

  Common varieties of Ethernet are: 10BASE-2 or Thinnet (10 Mbps over
  coaxial cable, linking computers in a chain), 10BASE-T or twisted
  pair (10 Mbps over twisted pair cable, linking computers to central
  hubs), 10BASE-F (10 Mbps over optical fiber links, using hubs),
  100BASE-TX (100 Mbps over two twisted pair cables, using hubs),
  100BASE-T4 (100 Mbps over 4 standard voice-grade twisted pair
  cables, using hubs), 100BASE-FX (100 Mbps over optical fiber links)
  [the 100BASE varieties are also known as Fast Ethernet], and Gigabit
  Ethernet (1 Gbps over optical fiber or short copper links).

  If your Linux machine will be connected to an Ethernet and you have
  an Ethernet network interface card (NIC) installed in your computer,
  say Y here and read the Ethernet-HOWTO, available via FTP (user:
  anonymous) from ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO. You will
  then also have to say Y to the driver for your particular NIC.

  Note that the answer to this question won't directly affect the
  kernel: saying N will just cause this configure script to skip all
  the questions about Ethernet network cards. If unsure, say N.

Sun LANCE Ethernet support
CONFIG_SUN_LANCE
  This is support for lance Ethernet cards on Sun workstations such as
  the SPARCstation IPC (any SPARC with a network interface 'le0' under
  SunOS basically). 

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called lance.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

Sun Intel Ethernet support
CONFIG_SUN_INTEL
  This is support for the Intel Ethernet cards on some Sun
  workstations (all those with a network interface 'ie0' under SunOS).

Western Digital/SMC cards
CONFIG_NET_VENDOR_SMC
  If you have a network (Ethernet) card belonging to this class, say Y
  and read the Ethernet-HOWTO, available via FTP (user: anonymous) in
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO. 

  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause this configure script to skip all
  the questions about Western Digital cards. If you say Y, you will be
  asked for your specific card in the following questions.

WD80*3 support
CONFIG_WD80x3
  If you have a network (Ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available via FTP (user: anonymous) in
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO. 

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called wd.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

SMC Ultra MCA support
CONFIG_ULTRAMCA
  If you have a network (Ethernet) card of this type and are running
  an MCA based system (PS/2), say Y and read
  the Ethernet-HOWTO, available via FTP (user: anonymous) in
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO. 

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called smc-mca.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

SMC Ultra support
CONFIG_ULTRA
  If you have a network (Ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available via FTP (user: anonymous) in
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO. 
  
  Important: There have been many reports that, with some motherboards
  mixing an SMC Ultra and an Adaptec AHA154x SCSI card (or compatible,
  such as some BusLogic models) causes corruption problems with many
  operating systems. The Linux smc-ultra driver has a work-around for
  this but keep it in mind if you have such a SCSI card and have
  problems.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called smc-ultra.o. If you want to compile it as
  a module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. 

SMC Ultra32 EISA support
CONFIG_ULTRA32
  If you have a network (Ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available via FTP (user: anonymous) in
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO. 

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called smc-ultra32.o. If you want to compile it
  as a module, say M here and read Documentation/modules.txt as well
  as Documentation/networking/net-modules.txt.

SMC 9194 Support
CONFIG_SMC9194
  This is support for the SMC9xxx based Ethernet cards. Choose this
  option if you have a DELL laptop with the docking station, or
  another SMC9192/9194 based chipset. Say Y if you want it compiled
  into the kernel, and read the file
  Documentation/networking/smc9.txt and the Ethernet-HOWTO, available
  via FTP (user: anonymous) in
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you
  want). The module will be called smc9194.o. If you want to compile
  it as a module, say M here and read Documentation/modules.txt as
  well as Documentation/networking/net-modules.txt.

PCI NE2000 support
CONFIG_NE2K_PCI
  This driver is for NE2000 compatible PCI cards. It will not work
  with ISA NE2000 cards (they have their own driver, "NE2000/NE1000
  support" below). If you have a PCI NE2000 network (Ethernet) card,
  say Y and read the Ethernet-HOWTO, available via FTP (user:
  anonymous) in ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called ne2k-pci.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

Racal-Interlan (Micom) NI cards
CONFIG_NET_VENDOR_RACAL
  If you have a network (Ethernet) card belonging to this class, such
  as the NI5010, NI5210 or NI6210, say Y and read the Ethernet-HOWTO,
  available via FTP (user: anonymous) in
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO.

  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause this configure script to skip all
  the questions about NI cards. If you say Y, you will be asked for
  your specific card in the following questions.

NI5010 support
CONFIG_NI5010
  If you have a network (Ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available via FTP (user: anonymous) in
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO. Note that this is still
  experimental code. 

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called ni5010.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

NI5210 support
CONFIG_NI52
  If you have a network (Ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available via FTP (user: anonymous) in
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO. 

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called ni52.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

NI6510 support
CONFIG_NI65
  If you have a network (Ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available via FTP (user: anonymous) in
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO. 

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called ni65.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

RealTek 8129/8139 (not 8019/8029!) support
CONFIG_RTL8139
  This is a driver for the Fast Ethernet PCI network cards based on
  the RTL8129 and RTL8139 chips. If you have one of those, say Y and
  read the Ethernet-HOWTO, available via FTP (user: anonymous) in
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO.

  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. This is recommended.
  The module will be called rtl8139.o.

Packet Engines Yellowfin Gigabit-NIC support
CONFIG_YELLOWFIN
  Say Y here if you have a Packet Engines G-NIC PCI Gigabit Ethernet
  adapter. This adapter is used by the Beowulf Linux cluster project.
  See http://cesdis.gsfc.nasa.gov/linux/drivers/yellowfin.html for
  more information about this driver in particular and Beowulf in
  general (to browse the WWW, you need to have access to a machine on
  the Internet that has a program like lynx or netscape).

  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. This is recommended.
  The module will be called yellowfin.o.

AMD LANCE and PCnet (AT1500 and NE2100) support
CONFIG_LANCE
  If you have a network (Ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available via FTP (user: anonymous) in
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO. Some LinkSys cards are
  of this type.

3COM cards
CONFIG_NET_VENDOR_3COM
  If you have a network (Ethernet) card belonging to this class, say Y
  and read the Ethernet-HOWTO, available via FTP (user: anonymous) in
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO.

  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause this configure script to skip all
  the questions about 3COM cards. If you say Y, you will be asked for
  your specific card in the following questions.

3c501 support
CONFIG_EL1
  If you have a network (Ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available via FTP (user: anonymous) in
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO. Also, consider buying a
  new card, since the 3c501 is slow, broken, and obsolete: you will
  have problems. Some people suggest to ping ("man ping") a nearby
  machine every minute ("man cron") when using this card.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called 3c501.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

3c503 support
CONFIG_EL2
  If you have a network (Ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available via FTP (user: anonymous) in
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called 3c503.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

3c505 support
CONFIG_ELPLUS
  Information about this network (Ethernet) card can be found in
  Documentation/networking/3c505.txt. If you have a card of this type,
  say Y and read the Ethernet-HOWTO, available via FTP (user:
  anonymous) in ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO.

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. The module will be called
  3c505.o.

3c507 support
CONFIG_EL16
  If you have a network (Ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available via FTP (user: anonymous) in
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called 3c507.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

3c523 support 
CONFIG_ELMC
  If you have a network (Ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available via FTP (user: anonymous) in
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called 3c523.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

3c509/3c579 support
CONFIG_EL3
  If you have a network (Ethernet) card belonging to the 3Com
  EtherLinkIII series, say Y and read the Ethernet-HOWTO, available
  via FTP (user: anonymous) in
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO.

  If your card is not working you may need to use the DOS
  setup disk to disable Plug & Play mode, and to select the default
  media type.

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. The module will be called
  3c509.o. 

3c590 series (592/595/597) "Vortex" support
CONFIG_VORTEX
  If you have a 3Com "Vortex" (Fast EtherLink 3c590/3c592/3c595/3c597)
  or "Boomerang" series (EtherLink XL 3c900 or 3c905) network
  (Ethernet) card, say Y and read the Ethernet-HOWTO, available via
  FTP (user: anonymous) in ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO.
  More specific information is in Documentation/networking/vortex.txt
  and in the comments at the beginning of drivers/net/3c59x.c.

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

Other ISA cards
CONFIG_NET_ISA
  If your network (Ethernet) card hasn't been mentioned yet and its
  bus system (that's the way the cards talks to the other components
  of your computer) is ISA (as opposed to EISA, VLB or PCI), say Y.
  Make sure you know the name of your card. Read the Ethernet-HOWTO,
  available via FTP (user: anonymous) in
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO. If unsure, say Y.

  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause this configure script to skip all
  the remaining ISA network card questions. If you say Y, you will be
  asked for your specific card in the following questions.

Generic ARCnet support
CONFIG_ARCNET
  If you have a network card of this type, say Y and check out the
  (arguably) beautiful poetry in Documentation/networking/arcnet.txt.

  You need both this driver, and the driver for the particular ARCnet
  chipset of your card. If you don't know, then it's probably a
  COM90xx type card, so say Y (or M) to "ARCnet COM90xx chipset
  support" below.

  You might also want to have a look at the Ethernet-HOWTO, available
  via FTP (user: anonymous) in
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO (even though ARCnet is
  not really Ethernet).

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called arcnet.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

Enable arc0e (ARCnet "ether-encap" packet format)
CONFIG_ARCNET_ETH
  This allows you to use "Ethernet encapsulation" with your ARCnet
  card via the virtual arc0e device. You only need arc0e if you want
  to talk to nonstandard ARCnet software, specifically,
  DOS/Windows-style "NDIS" drivers. You do not need to say Y here to
  communicate with industry-standard RFC1201 implementations, like the
  arcether.com packet driver or most DOS/Windows ODI drivers. RFC1201
  is included automatically as the arc0 device. Please read the
  ARCnet documentation in Documentation/networking/arcnet.txt for more
  information about using arc0e and arc0s.

Enable arc0s (ARCnet RFC1051 packet format)
CONFIG_ARCNET_1051
  This allows you to use RFC1051 with your ARCnet card via the virtual
  arc0s device. You only need arc0s if you want to talk to ARCnet
  software complying with the "old" standard, specifically, the DOS
  arcnet.com packet driver, Amigas running AmiTCP, and some variants
  of NetBSD. You do not need to say Y here to communicate with
  industry-standard RFC1201 implementations, like the arcether.com
  packet driver or most DOS/Windows ODI drivers. RFC1201 is included
  automatically as the arc0 device. Please read the ARCnet
  documentation in Documentation/networking/arcnet.txt for more
  information about using arc0e and arc0s.

ARCnet COM90xx (normal) chipset driver
CONFIG_ARCNET_COM90xx
  This is the chipset driver for the standard COM90xx cards. If you
  have always used the old ARCnet driver without knowing what type of
  card you had, this is probably the one for you. 

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called com90xx.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

ARCnet COM90xx (IO mapped) chipset driver
CONFIG_ARCNET_COM90xxIO
  This is the chipset driver for the COM90xx cards, using them in
  IO-mapped mode instead of memory-mapped mode. This is slower than
  the normal driver. Only use it if your card doesn't support shared
  memory. 

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called com90io.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

ARCnet COM90xx (RIM I) chipset driver
CONFIG_ARCNET_RIM_I
  This is yet another chipset driver for the COM90xx cards, but this
  time only using memory-mapped mode, and no IO ports at all. This
  driver is completely untested, so if you have one of these cards,
  please mail David.Woodhouse@mvhi.com, especially if it works!

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you
  want). The module will be called arc-rimi.o. If you want to compile
  it as a module, say M here and read Documentation/modules.txt as
  well as Documentation/networking/net-modules.txt.

ARCnet COM20020 chipset driver
CONFIG_ARCNET_COM20020
  This is the driver for the new COM20020 chipset. It supports such
  things as promiscuous mode, so packet sniffing is possible, and
  extra diagnostic information. 

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called com20020.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

Cabletron E21xx support
CONFIG_E2100
  If you have a network (Ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available via FTP (user: anonymous) in
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called e2100.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

CS89x0 support
CONFIG_CS89x0
  Support for CS89x0 chipset based Ethernet cards. If you have a
  network (Ethernet) card of this type, say Y and read the
  Ethernet-HOWTO, available via FTP (user: anonymous) in
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO as well as
  Documentation/networking/cs89x0.txt.

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. The module will be called
  cs89x.o.

DEPCA support
CONFIG_DEPCA
  If you have a network (Ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available via FTP (user: anonymous) in
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO as well as
  drivers/net/depca.c.

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. The module will be called
  depca.o.

EtherWorks 3 support
CONFIG_EWRK3
  This driver supports the DE203, DE204 and DE205 network (Ethernet)
  cards. If this is for you, say Y and read
  Documentation/networking/ewrk3.txt in the kernel source as well as
  the Ethernet-HOWTO, available via FTP (user: anonymous) from
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO.

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. The module will be called
  ewrk3.o.

SEEQ8005 support
CONFIG_SEEQ8005
  This is a driver for the SEEQ 8005 network (Ethernet) card. If this
  is for you, read the Ethernet-HOWTO, available via FTP (user:
  anonymous) from ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO.

AT1700/1720 support
CONFIG_AT1700
  If you have a network (Ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available via FTP (user: anonymous) in
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  If you want to compile it as a module, say M here and read
  Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. The module will be called
  at1700.o.

FMV-181/182/183/184 support
CONFIG_FMV18X
  If you have a Fujitsu FMV-181/182/183/184 network (Ethernet) card,
  say Y and read the Ethernet-HOWTO, available via FTP (user:
  anonymous) in ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO.

  If you use an FMV-183 or FMV-184 and it is not working, you may need
  to disable Plug & Play mode of the card.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called fmv18x.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. 

EtherExpress PRO support
CONFIG_EEXPRESS_PRO
  If you have a network (Ethernet) card of this type, say Y. Note
  however that the EtherExpress PRO/100 Ethernet card has its own
  separate driver. Please read the Ethernet-HOWTO, available via FTP
  (user: anonymous) in ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called eepro.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

EtherExpress support
CONFIG_EEXPRESS
  If you have an EtherExpress16 network (Ethernet) card, say Y and
  read the Ethernet-HOWTO, available via FTP (user: anonymous) in
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO. Note that the Intel
  EtherExpress16 card used to be regarded as a very poor choice
  because the driver was very unreliable. We now have a new driver
  that should do better.

  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. The module will be called
  eexpress.o.

HP PCLAN+ (27247B and 27252A) support
CONFIG_HPLAN_PLUS
  If you have a network (Ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available via FTP (user: anonymous) in
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called hp-plus.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

HP PCLAN (27245 and other 27xxx series) support
CONFIG_HPLAN
  If you have a network (Ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available via FTP (user: anonymous) in
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called hp.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

HP 10/100VG PCLAN (ISA, EISA, PCI) support
CONFIG_HP100
  If you have a network (Ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available via FTP (user: anonymous) in
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO.

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. The module will be called
  hp100.o.

NE2000/NE1000 support
CONFIG_NE2000
  If you have a network (Ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available via FTP (user: anonymous) in
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO. Many Ethernet cards
  without a specific driver are compatible with NE2000. 

  If you have a PCI NE2000 card however, say N here and Y to "PCI
  NE2000 support", above. If you have a NE2000 card and are running on
  an MCA system (a bus system used on some IBM PS/2 computers and
  laptops), say N here and Y to "NE/2 (ne2000 MCA version) support",
  below.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called ne.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

SK_G16 support
CONFIG_SK_G16
  If you have a network (Ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available via FTP (user: anonymous) in
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO.

NE/2 (ne2000 MCA version) support
CONFIG_NE2_MCA
  If you have a network (Ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available via FTP (user: anonymous) in
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called ne2.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

EISA, VLB, PCI and on board controllers
CONFIG_NET_EISA
  This is another class of network cards which attach directly to the
  bus. If you have one of those, say Y and read the Ethernet-HOWTO,
  available via FTP (user: anonymous) from
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO.

  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause this configure script to skip all
  the questions about this class of network cards. If you say Y, you
  will be asked for your specific card in the following questions. If
  you are unsure, say Y.

AMD PCnet32 (VLB and PCI) support
CONFIG_PCNET32
  If you have a PCnet32 or PCnetPCI based network (Ethernet) card,
  answer Y here and read the Ethernet-HOWTO, available via FTP (user:
  anonymous) in ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called pcnet32.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

Ansel Communications EISA 3200 support
CONFIG_AC3200
  If you have a network (Ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available via FTP (user: anonymous) in
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called ac3200.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

Mylex EISA LNE390A/LNE390B support
CONFIG_LNE390
  If you have a network (Ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available via FTP (user: anonymous) in
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called lne390.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

Novell/Eagle/Microdyne NE3210 EISA support
CONFIG_NE3210
  If you have a network (Ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available via FTP (user: anonymous) in
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO. Note that this driver
  will NOT WORK for NE3200 cards as they are completely different.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called ne3210.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

Apricot Xen-II on board Ethernet
CONFIG_APRICOT
  If you have a network (Ethernet) controller of this type, say Y and
  read the Ethernet-HOWTO, available via FTP (user: anonymous) in
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO.

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. The module will be called
  apricot.o.

Generic DECchip & DIGITAL EtherWORKS PCI/EISA
CONFIG_DE4X5
  This is support for the DIGITAL series of PCI/EISA Ethernet cards.
  These include the DE425, DE434, DE435, DE450 and DE500 models. If
  you have a network card of this type, say Y and read the
  Ethernet-HOWTO, available via FTP (user: anonymous) in
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO. More specific
  information is contained in Documentation/networking/de4x5.txt.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called de4x5.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

DECchip Tulip (dc21x4x) PCI support
CONFIG_DEC_ELCP
  This driver is developed for the SMC EtherPower series Ethernet
  cards and also works with cards based on the DECchip
  21040/21041/21140 (Tulip series) chips. Some LinkSys PCI cards are
  of this type. (If your card is NOT SMC EtherPower 10/100 PCI
  (smc9332dst), you can also try the driver for "Generic DECchip"
  cards, above. However, most people with a network card of this type
  will say Y here.) Do read the Ethernet-HOWTO, available via FTP
  (user: anonymous) in ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO.
  More specific information is contained in
  Documentation/networking/tulip.txt.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called tulip.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

Digi Intl. RightSwitch support
CONFIG_DGRS
  This is support for the Digi International RightSwitch series of
  PCI/EISA Ethernet switch cards. These include the SE-4 and the SE-6
  models. If you have a network card of this type, say Y and read the
  Ethernet-HOWTO, available via FTP (user: anonymous) in
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO. More specific
  information is contained in Documentation/networking/dgrs.txt.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called dgrs.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

EtherExpress PRO/100 support
CONFIG_EEXPRESS_PRO100
  If you have an Intel EtherExpress PRO/100 PCI network (Ethernet)
  card, say Y and read the Ethernet-HOWTO, available via FTP (user:
  anonymous) in ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called eepro100.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

ICL EtherTeam 16i/32 support
CONFIG_ETH16I
  If you have a network (Ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available via FTP (user: anonymous) in
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called eth16i.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

TI ThunderLAN support (EXPERIMENTAL)
CONFIG_TLAN
  If you have a PCI Ethernet network card based on the ThunderLAN chip
  which is supported by this driver, say Y and read the
  Ethernet-HOWTO, available via FTP (user: anonymous) in
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO.

  Devices currently supported by this driver are Compaq Netelligent,
  Compaq NetFlex and Olicom cards. Please read the file
  Documentation/networking/tlan.txt for more details.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called tlan.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

  Please email feedback to james.banks@caldera.com.

VIA Rhine support
CONFIG_VIA_RHINE
  If you have a VIA "rhine" based network card (Rhine-I (3043) or
  Rhine-2 (VT86c100A)), say Y here.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called via-rhine.o. If you want to compile it as
  a module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

Racal-Interlan EISA ES3210 support
CONFIG_ES3210
  If you have a network (Ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available via FTP (user: anonymous) in
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called es3210.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

SMC EtherPower II (EXPERIMENTAL)
CONFIG_EPIC100
  If you have an SMC EtherPower II 9432 PCI Ethernet network card
  which is based on the SMC83c170, say Y and read the Ethernet-HOWTO,
  available via FTP (user: anonymous) in
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called epic100.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

SGI Seeq ethernet controller support
CONFIG_SGISEEQ
  Say Y here if you have an Seeq based Ethernet network card. This is
  used in many Silicon Graphics machines.

Zenith Z-Note support
CONFIG_ZNET
  The Zenith Z-Note notebook computer has a built-in network
  (Ethernet) card, and this is the Linux driver for it. Note that the
  IBM Thinkpad 300 is compatible with the Z-Note and is also supported
  by this driver. Read the Ethernet-HOWTO, available via FTP (user:
  anonymous) in ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO.

Pocket and portable adapters
CONFIG_NET_POCKET
  Cute little network (Ethernet) devices which attach to the parallel
  port ("pocket adapters"), commonly used with laptops. If you have
  one of those, say Y and read the Ethernet-HOWTO, available via FTP
  (user: anonymous) from ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO.

  If you want to plug a network card into the PCMCIA slot of your
  laptop instead (PCMCIA is the standard for credit card size
  extension cards used by all modern laptops), look on the FTP site
  (user: anonymous) ftp://cb-iris.stanford.edu/pub/pcmcia and say N
  here.

  Laptop users should read the Linux Laptop home page at
  http://www.cs.utexas.edu/users/kharker/linux-laptop/ (to browse the
  WWW, you need to have access to a machine on the Internet that has a
  program like lynx or netscape). 

  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause this configure script to skip all
  the questions about this class of network devices. If you say Y, you
  will be asked for your specific device in the following questions.

AT-LAN-TEC/RealTek pocket adapter support
CONFIG_ATP
  This is a network (Ethernet) device which attaches to your parallel
  port. Read drivers/net/atp.c as well as the Ethernet-HOWTO,
  available via FTP (user: anonymous) from
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO if you want to use this.
  If you intend to use this driver, you should have said N to the
  Parallel Printer support, because the two drivers don't like each
  other.

D-Link DE600 pocket adapter support
CONFIG_DE600
  This is a network (Ethernet) device which attaches to your parallel
  port. Read Documentation/networking/DLINK.txt as well as the
  Ethernet-HOWTO, available via FTP (user: anonymous) from
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO if you want to use this.
  It is possible to have several devices share a single parallel port
  and it is safe to compile the corresponding drivers into the kernel.

  If you want to compile this driver as a module however ( = code
  which can be inserted in and removed from the running kernel
  whenever you want), say M here and read Documentation/modules.txt.
  The module will be called de600.o.

D-Link DE620 pocket adapter support
CONFIG_DE620
  This is a network (Ethernet) device which attaches to your parallel
  port. Read Documentation/networking/DLINK.txt as well as the
  Ethernet-HOWTO, available via FTP (user: anonymous) from
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO if you want to use this.
  It is possible to have several devices share a single parallel port
  and it is safe to compile the corresponding drivers into the kernel.

  If you want to compile this driver as a module however ( = code
  which can be inserted in and removed from the running kernel
  whenever you want), say M here and read Documentation/modules.txt.
  The module will be called de620.o.

Token Ring driver support
CONFIG_TR
  Token Ring is IBM's way of communication on a local network; the
  rest of the world uses Ethernet. To participate on a Token Ring
  network, you need a special Token ring network card. If you are
  connected to such a Token Ring network and want to use your Token
  Ring card under Linux, say Y here and to the driver for your
  particular card below and read the Token-Ring mini-HOWTO, available
  via FTP (user:anonymous) from
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO. Most people can say N
  here.

IBM Tropic chipset based adapter support
CONFIG_IBMTR
  This is support for all IBM Token Ring cards that don't use DMA. If
  you have such a beast, say Y and read the Token-Ring mini-HOWTO,
  available via FTP (user:anonymous) from
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO.

  Warning: this driver will almost definitely fail if more than one
  active Token Ring card is present. 

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called ibmtr.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

SysKonnect adapter support
CONFIG_SKTR
  This is support for all SysKonnect Token Ring cards, specifically
  SysKonnect TR4/16(+) ISA (SK-4190), SysKonnect TR4/16(+) PCI
  (SK-4590), SysKonnect TR4/16 PCI (SK-4591) adapters.

  If you have such an adapter and would like to use it, say Y or M and
  read the Token-Ring mini-HOWTO, available via FTP (user: anonymous)
  from ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO.

  Also read the file linux/Documentation/networking/sktr.txt or check
  the Linux-SNA WWW site for the latest information at
  http://samba.anu.edu.au/linux-sna/documents/drivers/SysKonnect/

Traffic Shaper (EXPERIMENTAL)
CONFIG_SHAPER
  The traffic shaper is a virtual network device that allows you to
  limit the rate of outgoing data flow over some other network
  device. See Documentation/networking/shaper.txt for more
  information. To set up and configure shaper devices, you need the
  shapecfg program, available via FTP (user: anonymous) from
  ftp://shadow.cabi.net/pub/Linux in the shaper package. 

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called shaper.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt. If unsure,
  say N.

FDDI driver support
CONFIG_FDDI
  Fiber Distributed Data Interface is a high speed local area network
  design; essentially a replacement for high speed Ethernet. FDDI can
  run over copper or fiber. If you are connected to such a network and
  want a driver for the FDDI card in your computer, say Y here (and
  then also Y to the driver for your FDDI card, below). Most people
  will say N.

Digital DEFEA and DEFPA adapter support
CONFIG_DEFXX
  This is support for the DIGITAL series of EISA (DEFEA) and PCI
  (DEFPA) controllers which can connect you to a local FDDI network.

HIgh Performance Parallel Interface support (EXPERIMENTAL)
CONFIG_HIPPI
  HIgh Performance Parallel Interface (HIPPI) is a 800Mbit/sec and
  1600Mbit/sec dual-simplex switched or point-to-point network. HIPPI
  can run over copper (25m) or fiber (300m on multi-mode or 10km on
  single-mode). HIPPI networks are commonly used for clusters and to
  connect to super computers. If you are connected to a HIPPI network
  and have a HIPPI network card in your computer that you want to use
  under Linux, say Y here (you must also remember to enable the driver
  for your HIPPI card below). Most people will say N here.
  
CERN HIPPI PCI adapter support
CONFIG_CERN_HIPPI
  Say Y here if this is your PCI HIPPI network card.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called cern_hippi.o. If you want to compile it as
  a module, say M here and read Documentation/modules.txt. If unsure,
  say N.

Essential RoadRunner HIPPI PCI adapter support
CONFIG_ROADRUNNER
  Say Y here if this is your PCI HIPPI network card.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called rrunner.o. If you want to compile it as
  a module, say M here and read Documentation/modules.txt. If unsure,
  say N.

Use large TX/RX rings
CONFIG_ROADRUNNER_LARGE_RINGS
  If you say Y here, the RoadRunner driver will preallocate up to 2 MB
  of additional memory to allow for fastest operation, both for
  transmitting and receiving. This memory cannot be used by any other
  kernel code or by user space programs. Say Y here only if you have
  the memory.

Acorn Ether1 card
CONFIG_ARM_ETHER1
  If you have an Acorn system with one of these (AKA25) network cards,
  you should say Y to this option if you wish to use it with Linux.

Acorn/ANT Ether3 card
CONFIG_ARM_ETHER3
  If you have an Acorn system with one of these network cards, you
  should say Y to this option if you wish to use it with Linux.

I Cubed EtherH card
CONFIG_ARM_ETHERH
  If you have an Acorn system with one of these network cards, you
  should say Y to this option if you wish to use it with Linux.

EBSA-110 Ethernet interface
CONFIG_AM79C961A
  If you wish to compile a kernel for the EBSA-110, then you should
  always answer Y to this.

Support CDROM drives that are not SCSI or IDE/ATAPI
CONFIG_CD_NO_IDESCSI
  If you have a CDROM drive that is neither SCSI nor IDE/ATAPI, say Y
  here, otherwise N. Read the CDROM-HOWTO, available via FTP (user:
  anonymous) from ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO. 

  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause this configure script to skip all
  the questions about these CDROM drives. If you are unsure what you
  have, say Y and find out whether you have one of the following
  drives. 

  For each of these drivers, a file Documentation/cdrom/<driver_name>
  exists. Especially in cases where you do not know exactly which kind
  of drive you have you should read there. Most of these drivers use a
  file drivers/cdrom/<driver_name>.h where you can define your
  interface parameters and switch some internal goodies. 

  All these CDROM drivers are also usable as a module ( = code which
  can be inserted in and removed from the running kernel whenever you
  want). If you want to compile them as module, say M instead of Y and
  read Documentation/modules.txt. 

  If you want to use any of these CDROM drivers, you also have to
  answer Y or M to "ISO 9660 CDROM filesystem support" below (this
  answer will get "defaulted" for you if you enable any of the Linux
  CDROM drivers).

Sony CDU31A/CDU33A CDROM support
CONFIG_CDU31A
  These CDROM drives have a spring-pop-out caddyless drawer, and a
  rectangular green LED centered beneath it. NOTE: these CDROM drives
  will not be auto detected by the kernel at boot time; you have to
  provide the interface address as an option to the kernel at boot
  time as described in Documentation/cdrom/cdu31a or fill in your
  parameters into drivers/cdrom/cdu31a.c. Try "man bootparam" or
  see the documentation of your boot loader (lilo or loadlin) about
  how to pass options to the kernel. The lilo procedure is also
  explained in the SCSI-HOWTO. 

  If you say Y here, you should also say Y or M to "ISO 9660 CDROM
  filesystem support" below, because that's the filesystem used on
  CDROMs. 

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called cdu31a.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

Standard Mitsumi [no XA/Multisession] CDROM support
CONFIG_MCD
  This is the older of the two drivers for the older Mitsumi models
  LU-005, FX-001 and FX-001D. This is not the right driver for the
  FX-001DE and the triple or quad speed models (all these are
  IDE/ATAPI models). Please also the file Documentation/cdrom/mcd.

  With the old LU-005 model, the whole drive chassis slides out for cd
  insertion. The FX-xxx models use a motorized tray type mechanism.
  Note that this driver does not support XA or MultiSession CDs
  (PhotoCDs). There is a new driver (next question) which can do
  this. If you want that one, say N here.

  If the driver doesn't work out of the box, you might want to have a
  look at drivers/cdrom/mcd.h. 

  If you say Y here, you should also say Y or M to "ISO 9660 CDROM
  filesystem support" below, because that's the filesystem used on
  CDROMs. 

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called mcd.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

Mitsumi [XA/MultiSession] support
CONFIG_MCDX
  Use this driver if you want to be able to read XA or MultiSession
  CDs (PhotoCDs) as well as ordinary CDs with your Mitsumi LU-005,
  FX-001 or FX-001D CDROM drive. In addition, this driver uses much
  less kernel memory than the old one, if that is a concern. This
  driver is able to support more than one drive, but each drive needs
  a separate interface card. Please read the file
  Documentation/cdrom/mcdx.

  If you say Y here, you should also say Y or M to "ISO 9660 CDROM
  filesystem support" below, because that's the filesystem used on
  CDROMs. 

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called mcdx.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

Matsushita/Panasonic/Creative, Longshine, TEAC CDROM support
CONFIG_SBPCD
  This driver supports most of the drives which use the Panasonic or
  Sound Blaster interface. Please read the file
  Documentation/cdrom/sbpcd.

  The Matsushita CR-521, CR-522, CR-523, CR-562, CR-563 drives
  (sometimes labeled "Creative"), the Creative Labs CD200, the
  Longshine LCS-7260, the "IBM External ISA CDROM" (in fact a CR-56x
  model), the TEAC CD-55A fall under this category. Some other
  "electrically compatible" drives (Vertos, Genoa, some Funai models)
  are currently not supported; for the Sanyo H94A drive currently a
  separate driver (asked later) is responsible. Most drives have a
  uniquely shaped faceplate, with a caddyless motorized drawer, but
  without external brand markings. The older CR-52x drives have a
  caddy and manual loading/eject, but still no external markings. The
  driver is able to do an extended auto-probing for interface
  addresses and drive types; this can help to find facts in cases you
  are not sure, but can consume some time during the boot process if
  none of the supported drives gets found. Once your drive got found,
  you should enter the reported parameters into drivers/cdrom/sbpcd.h
  and set "DISTRIBUTION 0" there.

  This driver can support up to four CDROM controller cards, and each
  card can support up to four CDROM drives; if you say Y here, you
  will be asked how many controller cards you have. If compiled as a
  module, only one controller card (but with up to four drives) is
  usable.

  If you say Y here, you should also say Y or M to "ISO 9660 CDROM
  filesystem support" below, because that's the filesystem used on
  CDROMs. 

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called sbpcd.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

Matsushita/Panasonic, ... second CDROM controller support
CONFIG_SBPCD2
  Say Y here only if you have two CDROM controller cards of this type
  (usually only if you have more than four drives). You should enter
  the parameters for the second, third and fourth interface card into
  linux/include/linux/sbpcd.h before compiling the new kernel. Read
  the file Documentation/cdrom/sbpcd.

Aztech/Orchid/Okano/Wearnes/TXC/CyDROM CDROM support
CONFIG_AZTCD
  This is your driver if you have an Aztech CDA268-01A, Orchid
  CD-3110, Okano or Wearnes CDD110, Conrad TXC, or CyCDROM CR520 or
  CR540 CDROM drive. This driver -- just like all these CDROM drivers
  -- is NOT for CDROM drives with IDE/ATAPI interfaces, such as Aztech
  CDA269-031SE. Please read the file Documentation/cdrom/aztcd. 

  If you say Y here, you should also say Y or M to "ISO 9660 CDROM
  filesystem support" below, because that's the filesystem used on
  CDROMs.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called aztcd.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

Sony CDU535 CDROM support
CONFIG_CDU535
  This is the driver for the older Sony CDU-535 and CDU-531 CDROM
  drives. Please read the file Documentation/cdrom/sonycd535.

  If you say Y here, you should also say Y or M to "ISO 9660 CDROM
  filesystem support" below, because that's the filesystem used on
  CDROMs.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called sonycd535.o. If you want to compile it as
  a module, say M here and read Documentation/modules.txt.

Goldstar R420 CDROM support
CONFIG_GSCD
  If this is your CDROM drive, say Y here. As described in the file
  linux/Documentation/cdrom/gscd, you might have to change a setting
  in the file linux/drivers/cdrom/gscd.h before compiling the
  kernel. Please read the file Documentation/cdrom/gscd. 

  If you say Y here, you should also say Y or M to "ISO 9660 CDROM
  filesystem support" below, because that's the filesystem used on
  CDROMs. 

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called gscd.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

Philips/LMS CM206 CDROM support
CONFIG_CM206
  If you have a Philips/LMS CDROM drive cm206 in combination with a
  cm260 host adapter card, say Y here. Please also read the file
  Documentation/cdrom/cm206. 

  If you say Y here, you should also say Y or M to "ISO 9660 CDROM
  filesystem support" below, because that's the filesystem used on
  CDROMs. 

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called cm206.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

Optics Storage DOLPHIN 8000AT CDROM support
CONFIG_OPTCD
  This is the driver for the 'DOLPHIN' drive with a 34-pin Sony
  compatible interface. It also works with the Lasermate CR328A. If
  you have one of those, say Y. This driver does not work for the
  Optics Storage 8001 drive; use the IDE-ATAPI CDROM driver for that
  one. Please read the file Documentation/cdrom/optcd. 

  If you say Y here, you should also say Y or M to "ISO 9660 CDROM
  filesystem support" below, because that's the filesystem used on
  CDROMs. 

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called optcd.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

Sanyo CDR-H94A CDROM support
CONFIG_SJCD
  If this is your CDROM drive, say Y here and read the file
  Documentation/cdrom/sjcd. You should then also say Y or M to
  "ISO 9660 CDROM filesystem support" below, because that's the
  filesystem used on CDROMs.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called sjcd.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

Soft configurable cdrom interface card support
CONFIG_CDI_INIT
  If you want to include boot-time initialization of any cdrom
  interface card that is software configurable, say Y here. Currently
  only the ISP16/MAD16/Mozart sound cards with built-in cdrom
  interfaces are supported. 

  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause this configure script to skip all
  the questions about these CDROM drives.

ISP16/MAD16/Mozart soft configurable cdrom interface support
CONFIG_ISP16_CDI
  These are sound cards with built-in cdrom interfaces using the OPTi
  82C928 or 82C929 chips. Say Y here to have them detected and
  possibly configured at boot time. In addition, You'll have to say Y
  to a driver for the particular cdrom drive you have attached to the
  card. Read Documentation/cdrom/isp16 for details.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called isp16.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

Quota support
CONFIG_QUOTA
  If you say Y here, you will be able to set per user limits for disk
  usage (also called disk quotas). Currently, it works only for the
  ext2 filesystem. You need additional software in order to use quota
  support; for details, read the Quota mini-HOWTO, available via FTP
  (user: anonymous) in
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO/mini. Probably the quota
  support is only useful for multi user systems. If unsure, say N.

Minix fs support
CONFIG_MINIX_FS
  Minix is a simple operating system used in many classes about OS's.
  The minix filesystem (method to organize files on a hard disk
  partition or a floppy disk) was the original filesystem for Linux,
  has since been superseded by the second extended filesystem ext2fs
  but is still being used for root/boot and other floppies or ram
  disks since it is leaner. You don't want to use it on your hard disk
  because of certain built-in restrictions. This option will enlarge
  your kernel by about 25 kB. Everyone should say Y or M so that they
  are able to read this common floppy filesystem.

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called minix.o. Note that the filesystem of your root partition
  cannot be compiled as a module.

Second extended fs support
CONFIG_EXT2_FS
  This is the de facto standard Linux filesystem (method to organize
  files on a storage device) for hard disks. 

  You want to say Y here, unless you intend to use Linux exclusively
  from inside a DOS partition using the umsdos filesystem. The
  advantage of the latter is that you can get away without
  repartitioning your hard drive (which often implies backing
  everything up and restoring afterwards); the disadvantage is that
  Linux becomes susceptible to DOS viruses and that umsdos is somewhat
  slower than ext2fs. Even if you want to run Linux in this fashion,
  it might be a good idea to have ext2fs around: it enables you to
  read more floppy disks and facilitates the transition to a *real*
  Linux partition later. Another (rare) case which doesn't require
  ext2fs is a diskless Linux box which mounts all files over the
  network using NFS (in this case it's sufficient to say Y to "NFS
  filesystem support" below). Saying Y here will enlarge your kernel
  by about 41 kB.

  The Ext2fs-Undeletion mini-HOWTO, available via FTP (user:
  anonymous) from ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO/mini,
  gives information about how to retrieve deleted files on ext2fs
  filesystems.

  To change the behavior of ext2 filesystems, you can use the tune2fs
  utility ("man tune2fs"). To modify attributes of files and
  directories on ext2 filesystems, use chattr ("man chattr").
  
  Ext2fs partitions can be read from within DOS using the ext2tool
  command line tool package (available via FTP (user: anonymous) from
  ftp://sunsite.unc.edu/pub/Linux/system/filesystems/ext2) and from
  within Windows NT using the ext2nt command line tool package from
  ftp://sunsite.unc.edu/pub/Linux/utils/dos. Explore2fs is a graphical
  explorer for ext2fs partitions which runs on Windows 95 and Windows
  NT and includes experimental write support; it is available from
  http://jnewbigin-pc.it.swin.edu.au/Linux/Explore2fs.htm.

  If you want to compile this filesystem as a module ( = code which
  can be inserted in and removed from the running kernel whenever you
  want), say M here and read Documentation/modules.txt. The module
  will be called ext2.o. Be aware however that the filesystem of your
  root partition cannot be compiled as a module, and so this could be
  dangerous. Most everyone wants to say Y here.

ISO 9660 CDROM filesystem support
CONFIG_ISO9660_FS
  This is the standard filesystem used on CDROMs. It was previously
  known as "High Sierra Filesystem" and is called "hsfs" on other Unix
  systems. The so-called Rock-Ridge extensions which allow for long
  Unix filenames and symbolic links are also supported by this driver.
  If you have a CDROM drive and want to do more with it than just
  listen to audio CDs and watch its LEDs, say Y (and read
  Documentation/filesystems/isofs.txt and the CDROM-HOWTO, available
  via FTP (user: anonymous) from
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO), thereby enlarging your
  kernel by about 27 kB; otherwise say N.

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called isofs.o.

Microsoft Joliet cdrom extensions
CONFIG_JOLIET
  Joliet is a Microsoft extension for the ISO 9660 CDROM filesystem
  which allows for long filenames in unicode format (unicode is the
  new 16 bit character code, successor to ASCII, which encodes the
  characters of almost all languages of the world; see
  http://www.unicode.org for more information; to browse the WWW, you
  need to have access to a machine on the Internet that has a program
  like lynx or netscape). Say Y here if you want to be able to read
  Joliet CDROMs under Linux.

fat fs support
CONFIG_FAT_FS
  If you want to use one of the FAT-based filesystems (the MS-DOS,
  VFAT (Windows 95) and UMSDOS (used to run Linux on top of an
  ordinary DOS partition) filesystems), then you must include FAT
  support. This is not a filesystem in itself, but it provides the
  foundation for the other filesystems. It is now also becoming
  possible to read and write compressed FAT filesystems; read
  Documentation/filesystems/fat_cvf.txt for details. This option will
  enlarge your kernel by about 24 kB. If unsure, say Y. 

  If you want to compile this as a module however ( = code which can
  be inserted in and removed from the running kernel whenever you
  want), say M here and read Documentation/modules.txt. The module
  will be called fat.o. Note that if you compile the FAT support as a
  module, you cannot compile any of the FAT-based filesystems into the
  kernel -- they will have to be modules as well. The filesystem of
  your root partition cannot be a module, so don't say M here if you
  intend to use UMSDOS as your root filesystem.

msdos fs support
CONFIG_MSDOS_FS
  This allows you to mount MSDOS partitions of your hard drive (unless
  they are compressed; to access compressed MSDOS partitions under
  Linux, you can either use the DOS emulator DOSEMU, described in the
  DOSEMU-HOWTO, available via FTP (user: anonymous) at
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO, or try dmsdosfs in
  ftp://sunsite.unc.edu/pub/Linux/system/filesystems/dosfs. If you
  intend to use dosemu with a non-compressed MSDOS partition, say Y
  here) and MSDOS floppies. This means that file access becomes
  transparent, i.e. the MSDOS files look and behave just like all
  other Unix files.

  Another way to read and write MSDOS floppies from within Linux (but
  not transparently) is with the mtools ("man mtools") program suite,
  which doesn't require the msdos filesystem support. 

  If you want to use umsdos, the Unix-like filesystem on top of DOS,
  which allows you to run Linux from within a DOS partition without
  repartitioning, you'll have to say Y or M here. If you have Windows
  95 or Windows NT installed on your MSDOS partitions, you should use
  the VFAT filesystem instead, or you will not be able to see the long
  filenames generated by Windows 95 / Windows NT.

  This option will enlarge your kernel by about 7 kB. If unsure,
  answer Y. This will only work if you said Y to "fat fs support" as
  well. If you want to compile this as a module however ( = code which
  can be inserted in and removed from the running kernel whenever you
  want), say M here and read Documentation/modules.txt. The module
  will be called msdos.o.

vfat fs support
CONFIG_VFAT_FS
  This allows you to mount MSDOS partitions of your hard drive. It
  will let you use filenames in a way compatible with the long
  filenames used by Windows 95 and Windows NT fat-based (not NTFS)
  partitions. It does not support Windows 95 compressed filesystems.
  You cannot use the VFAT filesystem for your root partition; use
  UMSDOS instead. This option enlarges your kernel by about 10 kB and
  it only works if you said Y to the "fat fs support" above. Please
  read the file Documentation/filesystems/vfat.txt for details. If
  unsure, say N.

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called vfat.o.

umsdos: Unix like fs on top of std MSDOS fs
CONFIG_UMSDOS_FS
  Say Y here if you want to run Linux from within an existing DOS
  partition of your hard drive. The advantage of this is that you can
  get away without repartitioning your hard drive (which often implies
  backing everything up and restoring afterwards) and hence you're
  able to quickly try out Linux or show it to your friends; the
  disadvantage is that Linux becomes susceptible to DOS viruses and
  that UMSDOS is somewhat slower than ext2fs. Another use of umsdos
  is to write files with long unix filenames to MSDOS floppies; it
  also allows Unix-style softlinks and owner/permissions of files on
  MSDOS floppies. You will need a program called umssync in order to
  make use of umsdos; read Documentation/filesystems/umsdos.txt. 

  This option enlarges your kernel by about 25 kB and it only works if
  you said Y to both "fat fs support" and "msdos fs support" above. If
  you want to compile this as a module ( = code which can be inserted
  in and removed from the running kernel whenever you want), say M
  here and read Documentation/modules.txt. The module will be called
  umsdos.o. Note that the filesystem of your root partition cannot be
  a module, so this could be dangerous. If unsure, say N.

/proc filesystem support
CONFIG_PROC_FS
  This is a virtual filesystem providing information about the status
  of the system. "Virtual" means that it doesn't take up any space on
  your hard disk: the files are created on the fly by the kernel when
  you try to access them. Also, you cannot read the files with older
  version of the program less: you need to use more or cat. The
  filesystem is explained in the Kernel Hacker's Guide at
  http://www.redhat.com:8080/HyperNews/get/khg.html on the WWW (to
  browse the WWW, you need to have access to a machine on the Internet
  that has a program like lynx or netscape), and also on the proc(8)
  manpage ("man 8 proc").

  It's totally cool; for example, "cat /proc/interrupts" gives
  information about what the different IRQs are used for at the moment
  (there is a small number of Interrupt ReQuest lines in your computer
  that are used by the attached devices to gain the CPU's attention --
  often a source of trouble if two devices are mistakenly configured
  to use the same IRQ). This option will enlarge your kernel by about
  18 kB. Several programs depend on this, so everyone should say Y
  here.

NFS filesystem support
CONFIG_NFS_FS
  If you are connected to some other (usually local) Unix computer
  (using SLIP, PLIP, PPP or Ethernet) and want to mount files residing
  on that computer (the NFS server) using the Network File Sharing
  protocol, say Y. "Mounting files" means that the client can access
  the files with usual UNIX commands as if they were sitting on the
  client's hard disk. For this to work, the server must run the
  programs nfsd and mountd (but does not need to have NFS filesystem
  support enabled in its kernel). NFS is explained in the Network
  Administrator's Guide, available via FTP (user: anonymous) in
  ftp://sunsite.unc.edu/pub/Linux/docs/LDP, on its man page: "man
  nfs", and in the NFS-HOWTO.
  
  A superior but less widely used alternative to NFS is provided by
  the Coda filesystem; see "Coda filesystem support" below.

  If you say Y here, you should have said Y to TCP/IP networking also.
  This option would enlarge your kernel by about 27 kB. 

  This filesystem is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module is called nfs.o. If you want to compile it as a module,
  say M here and read Documentation/modules.txt. 

  If you are configuring a diskless machine which will mount its root
  filesystem over NFS at boot time, say Y here and to "Root file
  system on NFS" and to "IP: kernel level autoconfiguration". You
  cannot compile this driver as a module in this case. There are two
  packages designed for booting diskless machines over the net:
  netboot and etherboot, both available via FTP (user: anonymous) from
  ftp://sunsite.unc.edu/pub/Linux/system/boot/ethernet/ .

  If you don't know what all this is about, say N.

Root file system on NFS
CONFIG_ROOT_NFS
  If you want your Linux box to mount its whole root filesystem from
  some other computer over the net via NFS (presumably because your
  box doesn't have a hard disk), say Y. Read Documentation/nfsroot.txt
  for details. It is likely that in this case, you also want to say Y
  to "IP: kernel level autoconfiguration" so that your box can
  discover its network address at boot time. 
  
  Most people say N here. 

NFS server support
CONFIG_NFSD
  If you want your Linux box to act as a NFS *server*, so that other
  computers on your local network which support NFS can access certain
  directories on your box transparently, you have two options: you can
  use the self-contained user space program nfsd, in which case you
  should say N here, or you can say Y and use this new experimental
  kernel based NFS server. The advantage of the kernel based solution
  is that it is faster; it might not be completely stable yet, though.
  You will need the support software from the linux-nfs package
  available at ftp://ftp.mathematik.th-darmstadt.de/pub/linux/okir/.
  Please read the NFS-HOWTO, available via FTP (user: anonymous) from
  ftp://sunsite.unc.edu:/pub/Linux/docs/HOWTO. 

  The NFS server is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module is called nfsd.o. If you want to compile it as a module,
  say M here and read Documentation/modules.txt. If unsure, say N.

Emulate Sun NFS daemon
CONFIG_NFSD_SUN
  If you would like for the server to allow clients to access
  directories that are mount points on the local filesystem (this is
  how nfsd behaves on Sun systems), say yes here. If unsure, say N.

OS/2 HPFS filesystem support (read only)
CONFIG_HPFS_FS
  OS/2 is IBM's operating system for PC's, the same as Warp, and HPFS
  is the filesystem used for organizing files on OS/2 hard disk
  partitions. Say Y if you want to be able to read files from an OS/2
  HPFS partition of your hard drive. OS/2 floppies however are in
  regular MSDOS format, so you don't need this option in order to be
  able to read them. Read Documentation/filesystems/hpfs.txt. 

  This filesystem is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module is called hpfs.o. If you want to compile it as a module,
  say M here and read Documentation/modules.txt. If unsure, say N.

Windows NT NTFS support (read only)
CONFIG_NTFS_FS
  NTFS is the file system of Microsoft Windows NT. Say Y if you want
  to get read access to files on NTFS partitions of your hard drive.
  The Linux NTFS driver supports most of the mount options of the VFAT
  driver, see Documentation/filesystems/ntfs.txt. Saying Y here will
  give you read-only access to NTFS partitions.

  This code is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called ntfs.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

NTFS read-write support (experimental)
CONFIG_NTFS_RW
  If you say Y here, you will (hopefully) be able to write to NTFS
  file systems as well as read from them. The read-write support
  in NTFS is far from being complete and is not well tested. If you
  enable this, back up your NTFS volume first since it may get
  damaged.

  If unsure, say N.

System V and Coherent filesystem support
CONFIG_SYSV_FS
  SCO, Xenix and Coherent are commercial Unix systems for Intel
  machines. Saying Y here would allow you to read to and write from
  their floppies and hard disk partitions.

  If you have floppies or hard disk partitions like that, it is likely
  that they contain binaries from those other Unix systems; in order
  to run these binaries, you will want to install iBCS2 (Intel Binary
  Compatibility Standard is a kernel module which lets you run SCO,
  Xenix, Wyse, UnixWare, Dell Unix and System V programs under Linux
  and is often needed to run commercial software that's only available
  for those systems. It's available via FTP (user: anonymous) from
  ftp://tsx-11.mit.edu/pub/linux/BETA).

  If you only intend to mount files from some other Unix over the
  network using NFS, you don't need the System V filesystem support
  (but you need NFS filesystem support obviously). 

  Note that this option is generally not needed for floppies, since a
  good portable way to transport files and directories between unixes
  (and even other operating systems) is given by the tar program ("man
  tar" or preferably "info tar"). Note also that this option has
  nothing whatsoever to do with the option "System V IPC". Read about
  the System V filesystem in Documentation/filesystems/sysv-fs.txt.
  Saying Y here will enlarge your kernel by about 34 kB.

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called sysv.o. 

  If you haven't heard about all of this before, it's safe to say N.

Amiga FFS filesystem support
CONFIG_AFFS_FS
  The Fast File System (FFS) is the common filesystem used on hard
  disks by Amiga(tm) systems since AmigaOS Version 1.3 (34.20). Say Y
  if you want to be able to read and write files from and to an Amiga
  FFS partition on your hard drive. Amiga floppies however cannot be
  read with this driver due to an incompatibility of the floppy
  controller used in an Amiga and the standard floppy controller in
  PCs and workstations. Read Documentation/filesystems/affs.txt and
  fs/affs/Changes. 

  With this driver you can also mount disk files used by Bernd
  Schmidt's Un*X Amiga Emulator (http://www.freiburg.linux.de/~uae/;
  to browse the WWW, you need to have access to a machine on the
  Internet that has a program like lynx or netscape). If you want to
  do this, you will also need to say Y or M to "Loop device support",
  above.

  This filesystem is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module is called affs.o. If you want to compile it as a module,
  say M here and read Documentation/modules.txt. If unsure, say N.

Apple Macintosh filesystem support (experimental)
CONFIG_HFS_FS
  If you say Y here, you will be able to mount Macintosh-formatted
  floppy disks and hard drive partitions with full read-write access.
  Please read fs/hfs/HFS.txt to learn about the available mount
  options. 

  This filesystem support is also available as a module ( = code which
  can be inserted in and removed from the running kernel whenever you
  want). The module is called hfs.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

ROM filesystem support
CONFIG_ROMFS_FS
  This is a very small read-only filesystem mainly intended for
  initial ram disks of installation disks, but it could be used for
  other read-only media as well. Read
  Documentation/filesystems/romfs.txt for details. 

  This filesystem support is also available as a module ( = code which
  can be inserted in and removed from the running kernel whenever you
  want). The module is called romfs.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt. 

  If you don't know whether you need it, then you don't need it:
  answer N.

QNX filesystem support (EXPERIMENTAL)
CONFIG_QNX4FS_FS  
  This is the filesystem used by the operating system QNX 4. Say Y if
  you intend to mount QNX hard disks or floppies.

  This filesystem support is also available as a module ( = code which
  can be inserted in and removed from the running kernel whenever you
  want). The module is called qnx4.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt. 

  If unsure, say N.

Kernel automounter support
CONFIG_AUTOFS_FS
  The automounter is a tool to automatically mount remote filesystems
  on demand. This implementation is partially kernel-based to reduce
  overhead in the already-mounted case; this is unlike the BSD
  automounter (amd), which is a pure user space daemon.

  To use the automounter you need the user-space tools from
  ftp://ftp.kernel.org/pub/linux/daemons/autofs; you also want to
  answer Y to "NFS filesystem support", above.

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called autofs.o. 

  If you are not a part of a fairly large, distributed network, you
  probably do not need an automounter, and can say N here.

UFS filesystem support
CONFIG_UFS_FS
  BSD and derivate versions of Unix (such as SunOS, FreeBSD, NetBSD,
  OpenBSD and NeXTstep) use a filesystem called UFS. Some System V
  Unixes can create and mount hard disk partitions and diskettes using
  this filesystem as well. Saying Y here will allow you to read from
  and write to these partitions and diskettes.

  If you only intend to mount files from some other Unix over the
  network using NFS, you don't need the UFS filesystem support (but
  you need NFS filesystem support obviously). 

  Note that this option is generally not needed for floppies, since a
  good portable way to transport files and directories between unixes
  (and even other operating systems) is given by the tar program ("man
  tar" or preferably "info tar").

  When accessing NeXTstep files, you may need to convert them from the
  NeXT character set to the Latin1 character set; use the program
  recode ("info recode") for this purpose. 

  If you want to compile the UFS filesystem support as a module ( =
  code which can be inserted in and removed from the running kernel
  whenever you want), say M here and read Documentation/modules.txt.
  The module will be called ufs.o. 

  If you haven't heard about all of this before, it's safe to say N.

BSD disklabel (FreeBSD partition tables) support
CONFIG_BSD_DISKLABEL
  FreeBSD uses its own hard disk partition scheme on your PC. It
  requires only one entry in the primary partition table of your disk
  and manages it similarly to DOS extended partitions, putting in its
  first sector a new partition table in disklabel format. Saying Y
  here allows you to read these disklabels and further mount FreeBSD
  partitions read-only from within Linux if you have also said Y to
  "UFS filesystem support", above. If you don't know what all this
  is about, say N.

SMD disklabel (Sun partition tables) support
CONFIG_SMD_DISKLABEL
  Like most systems, SunOS uses its own hard disk partition table
  format, incompatible with all others. Saying Y here allows you to
  read these partition tables and further mount SunOS disks read-only
  from within Linux if you have also said Y to "UFS filesystem
  support", above. This is mainly used to carry data from a SPARC
  under SunOS to your Linux box via a removable medium like
  magneto-optical or ZIP drives; note however that a good portable way
  to transport files and directories between unixes (and even other
  operating systems) is given by the tar program ("man tar" or
  preferably "info tar"). If you don't know what all this is about,
  say N.

Solaris (x86) partition table support
CONFIG_SOLARIS_X86_PARTITION
  Like most systems, Solaris x86 uses its own hard disk partition
  table format, incompatible with all others. Saying Y here allows you
  to read these partition tables and further mount Solaris x86 disks
  read-only from within Linux if you have also said Y to "UFS
  filesystem support", above.

ADFS filesystem support (read only) (EXPERIMENTAL)
CONFIG_ADFS_FS
  The Acorn Disc Filing System is the standard filesystem of the
  RiscOS operating system which runs on Acorn's ARM-based Risc PC
  systems and the Acorn Archimedes range of machines. If you say Y
  here, Linux will be able to read from ADFS partitions on hard drives
  and from ADFS-formatted floppy discs.

  The ADFS partition should be the first partition (i.e.,
  /dev/[hs]d?1) on each of your drives.

  This code is also available as a module called adfs.o ( = code which
  can be inserted in and removed from the running kernel whenever you
  want). If you want to compile it as a module, say M here and read
  Documentation/modules.txt.

  If unsure, say N.

/dev/pts filesystem (experimental)
CONFIG_DEVPTS_FS
  You should say Y here if you said Y to "Unix98 PTY support" above.
  You'll then get a virtual filesystem which can be mounted on
  /dev/pts with "mount -t devpts". This, together with the pseudo
  terminal master multiplexer /dev/ptmx, is used for pseudo terminal
  support as described in the Open Group's Unix98 standard: in order
  to acquire a pseudo terminal, a process opens /dev/ptmx; the number
  of the pseudo terminal is then made available to the process and the
  pseudo terminal slave can be accessed as /dev/pts/<number>. What was
  traditionally /dev/ttyp2 will then be /dev/pts/2, for example. The
  GNU C library glibc 2.1 contains the requisite support for this mode
  of operation.

  This code is also available as a module called devpts.o ( = code
  which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt.

Macintosh partition map support
CONFIG_MAC_PARTITION
  Say Y here if you want your Linux system to be able to read the
  partition tables of Macintosh hard drives, and thus use partitions
  on those drives.

SMB filesystem support (to mount WfW shares etc..)
CONFIG_SMB_FS
  SMB (Server Message Block) is the protocol Windows for Workgroups
  (WfW), Windows 95, Windows NT and OS/2 Lan Manager use to share
  files and printers over local networks. Saying Y here allows you to
  mount their filesystems (often called "shares" in this context) and
  access them just like any other Unix directory. Currently, this
  works only if the Windows machines use TCP/IP as the underlying
  transport protocol, and not NetBEUI. For details, read
  Documentation/filesystems/smbfs.txt and the SMB-HOWTO, available via
  FTP (user: anonymous) from
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO.

  Note: if you just want your box to act as an SMB *server* and make
  files and printing services available to Windows clients (which need
  to have a TCP/IP stack), you don't need to say Y here; you can use
  the program samba (available via FTP (user: anonymous) in
  ftp://sunsite.unc.edu/pub/Linux/system/network/samba) for that.

  General information about how to connect Linux, Windows machines and
  Macs is on the WWW at http://www.eats.com/linux_mac_win.html (to
  browse the WWW, you need to have access to a machine on the Internet
  that has a program like lynx or netscape). 

  If you want to compile the SMB support as a module ( = code which
  can be inserted in and removed from the running kernel whenever you
  want), say M here and read Documentation/modules.txt. The module
  will be called smbfs.o. Most people say N, however.

SMB Win95 bug work-around
CONFIG_SMB_WIN95
  If you want to connect to a share exported by Windows 95, you should
  say Y here. The Windows 95 server contains a bug that makes listing
  directories unreliable. This option slows down the listing of
  directories. This makes the Windows 95 server a bit more stable.

Coda filesystem support
CONFIG_CODA_FS
  Coda is an advanced network filesystem, similar to NFS in that it
  enables you to mount filesystems of a remote server and access them
  with regular Unix commands as if they were sitting on your hard
  disk. Coda has several advantages over NFS: support for disconnected
  operation (e.g. for laptops), read/write server replication,
  security model for authentication and encryption, persistent client
  caches and write back caching.

  If you say Y here, your Linux box will be able to act as a Coda
  *client*. You will need user level code as well, both for the client
  and server. Servers are currently user level, i.e. need no kernel
  support. Please read Documentation/filesystems/coda.txt and check
  out the Coda home page http://www.coda.cs.cmu.edu (to browse the
  WWW, you need to have access to a machine on the Internet that has a
  program like lynx or netscape).

  If you want to compile the coda client support as a module ( = code
  which can be inserted in and removed from the running kernel
  whenever you want), say M here and read Documentation/modules.txt.
  The module will be called coda.o. 

NCP filesystem support (to mount NetWare volumes)
CONFIG_NCP_FS
  NCP (NetWare Core Protocol) is a protocol that runs over IPX and is
  used by Novell NetWare clients to talk to file servers. It is to IPX
  what NFS is to TCP/IP, if that helps. Saying Y here allows you to
  mount NetWare file server volumes and to access them just like any
  other Unix directory. For details, please read the file
  Documentation/filesystems/ncpfs.txt in the kernel source and the
  IPX-HOWTO on ftp://sunsite.unc.edu:/pub/Linux/docs/howto.

  You do not have to say Y here if you want your Linux box to act as a
  file *server* for Novell NetWare clients.

  General information about how to connect Linux, Windows machines and
  Macs is on the WWW at http://www.eats.com/linux_mac_win.html (to
  browse the WWW, you need to have access to a machine on the Internet
  that has a program like lynx or netscape). 

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called ncpfs.o. Say N unless you are connected to a Novell network.

Packet signatures
CONFIG_NCPFS_PACKET_SIGNING
  NCP allows packets to be signed for stronger security. If you want
  security, say Y. Normal users can leave it off. To be able to use
  packet signing you must use ncpfs > 2.0.12.

Proprietary file locking
CONFIG_NCPFS_IOCTL_LOCKING
  Allows locking of records on remote volumes. Say N unless you have
  special applications which are able to utilize this locking scheme.

Clear remove/delete inhibit when needed
CONFIG_NCPFS_STRONG
  Allows manipulation of files flagged as Delete or Rename Inhibit. To
  use this feature you must mount volumes with the ncpmount parameter
  "-s" (ncpfs-2.0.12 and newer). Say Y unless you are not mounting
  volumes with -f 444.

Use NFS namespace when available
CONFIG_NCPFS_NFS_NS
  Allows you to utilize NFS namespace on NetWare servers. It brings
  you case sensitive filenames. Say Y. You can disable it at
  mount-time with the `-N nfs' parameter of ncpmount.

Use OS2/LONG namespace when available
CONFIG_NCPFS_OS2_NS
  Allows you to utilize OS2/LONG namespace on NetWare servers.
  Filenames in this namespace are limited to 255 characters, they are
  case insensitive, and case in names is preserved. Say Y. You can
  disable it at mount time with the -N os2 parameter of ncpmount.

Allow mounting of volume subdirectories
CONFIG_NCPFS_MOUNT_SUBDIR
  Allows you to mount not only whole servers or whole volumes, but
  also subdirectories from a volume. It can be used to reexport data
  and so on. There is no reason to say N, so Y is recommended unless
  you count every byte.

  To utilize this feature you must use ncpfs-2.0.12 or newer.

NDS interserver authentication domains
CONFIG_NCPFS_NDS_DOMAINS
  This allows storing NDS private keys in kernel space where they
  can be used to authenticate another server as interserver NDS
  accesses need it. You must use ncpfs-2.0.12.1 or newer to utilize
  this feature. Say Y if you are using NDS connections to NetWare
  servers. Do not say Y if security is primary for you because root
  can read your session key (from /proc/kcore).

nls: Native language codepages and Unicode support
CONFIG_NLS
  This is required by the FAT and NTFS filesystems and by the ISO 9660
  filesystem when it is compiled with Joliet support. Joliet is a
  Microsoft extension for CDROMs that supports Unicode. This allows
  translation between different character sets. 

  When dealing with the FAT based filesystems, there are two character
  sets that are important. The first is the codepage. Codepages are
  character sets that are used by DOS to allow filenames to have
  native language characters when character sets were limited to 256
  characters. The codepage is the character set that is used to store
  native language characters on disk. The two most common codepages
  are 437 in the United States and 850 in much of Europe.

  The second important character set is the input/output character
  set. This is the character set that is displayed on the screen. In
  the United States, this will almost always be the ISO 8859-1
  character set. This is the default.

  Linux will only translate the FAT filenames, not the contents of the
  files.

nls codepage 437
CONFIG_NLS_CODEPAGE_437
  The Microsoft fat filesystem family can deal with filenames in
  native language character sets. These character sets are stored
  in so-called DOS codepages. You need to include the appropriate
  codepage if you want to be able to read/write these filenames on
  DOS/Windows partitions correctly. This does apply to the filenames
  only, not to the file contents. You can include several codepages;
  say Y here if you want to include the DOS codepage that is used in
  the United States and parts of Canada. This is recommended.

nls codepage 737
CONFIG_NLS_CODEPAGE_737
  The Microsoft fat filesystem family can deal with filenames in
  native language character sets. These character sets are stored
  in so-called DOS codepages. You need to include the appropriate
  codepage if you want to be able to read/write these filenames on
  DOS/Windows partitions correctly. This does apply to the filenames
  only, not to the file contents. You can include several codepages;
  say Y here if you want to include the DOS codepage that is used for
  Greek. If unsure, say N.

nls codepage 775
CONFIG_NLS_CODEPAGE_775
  The Microsoft fat filesystem family can deal with filenames in
  native language character sets. These character sets are stored
  in so-called DOS codepages. You need to include the appropriate
  codepage if you want to be able to read/write these filenames on
  DOS/Windows partitions correctly. This does apply to the filenames
  only, not to the file contents. You can include several codepages;
  say Y here if you want to include the DOS codepage that is used
  for the Baltic Rim Languages. If unsure, say N.

nls codepage 850
CONFIG_NLS_CODEPAGE_850
  The Microsoft fat filesystem family can deal with filenames in
  native language character sets. These character sets are stored in
  so-called DOS codepages. You need to include the appropriate
  codepage if you want to be able to read/write these filenames on
  DOS/Windows partitions correctly. This does apply to the filenames
  only, not to the file contents. You can include several codepages;
  say Y here if you want to include the DOS codepage that is used for
  much of Europe -- United Kingdom, Germany, Spain, Italy, and [add
  more countries here]. It has some characters useful to many European
  languages that are not part of the US codepage 437. 

  If unsure, say Y.

nls codepage 852
CONFIG_NLS_CODEPAGE_852
  The Microsoft fat filesystem family can deal with filenames in
  native language character sets. These character sets are stored in
  so-called DOS codepages. You need to include the appropriate
  codepage if you want to be able to read/write these filenames on
  DOS/Windows partitions correctly. This does apply to the filenames
  only, not to the file contents. You can include several codepages;
  say Y here if you want to include the Latin 2 codepage used by DOS
  for much of Central and Eastern Europe. It has all the required
  characters for these languages: Albanian, Croatian, Czech, English,
  Finnish, Hungarian, Irish, German, Polish, Romanian, Serbian (Latin
  transcription), Slovak, Slovenian, and Sorbian.

nls codepage 855
CONFIG_NLS_CODEPAGE_855
  The Microsoft fat filesystem family can deal with filenames in
  native language character sets. These character sets are stored in
  so-called DOS codepages. You need to include the appropriate
  codepage if you want to be able to read/write these filenames on
  DOS/Windows partitions correctly. This does apply to the filenames
  only, not to the file contents. You can include several codepages;
  say Y here if you want to include the DOS codepage for Cyrillic.

nls codepage 857
CONFIG_NLS_CODEPAGE_857
  The Microsoft fat filesystem family can deal with filenames in
  native language character sets. These character sets are stored in
  so-called DOS codepages. You need to include the appropriate
  codepage if you want to be able to read/write these filenames on
  DOS/Windows partitions correctly. This does apply to the filenames
  only, not to the file contents. You can include several codepages;
  say Y here if you want to include the DOS codepage for Turkish.

nls codepage 860
CONFIG_NLS_CODEPAGE_860
  The Microsoft fat filesystem family can deal with filenames in
  native language character sets. These character sets are stored in
  so-called DOS codepages. You need to include the appropriate
  codepage if you want to be able to read/write these filenames on
  DOS/Windows partitions correctly. This does apply to the filenames
  only, not to the file contents. You can include several codepages;
  say Y here if you want to include the DOS codepage for Portuguese.

nls codepage 861
CONFIG_NLS_CODEPAGE_861
  The Microsoft fat filesystem family can deal with filenames in
  native language character sets. These character sets are stored in
  so-called DOS codepages. You need to include the appropriate
  codepage if you want to be able to read/write these filenames on
  DOS/Windows partitions correctly. This does apply to the filenames
  only, not to the file contents. You can include several codepages;
  say Y here if you want to include the DOS codepage for Icelandic.

nls codepage 862
CONFIG_NLS_CODEPAGE_862
  The Microsoft fat filesystem family can deal with filenames in
  native language character sets. These character sets are stored in
  so-called DOS codepages. You need to include the appropriate
  codepage if you want to be able to read/write these filenames on
  DOS/Windows partitions correctly. This does apply to the filenames
  only, not to the file contents. You can include several codepages;
  say Y here if you want to include the DOS codepage for Hebrew.

nls codepage 863
CONFIG_NLS_CODEPAGE_863
  The Microsoft fat filesystem family can deal with filenames in
  native language character sets. These character sets are stored in
  so-called DOS codepages. You need to include the appropriate
  codepage if you want to be able to read/write these filenames on
  DOS/Windows partitions correctly. This does apply to the filenames
  only, not to the file contents. You can include several codepages;
  say Y here if you want to include the DOS codepage for Canadian
  French.

nls codepage 864
CONFIG_NLS_CODEPAGE_864
  The Microsoft fat filesystem family can deal with filenames in
  native language character sets. These character sets are stored in
  so-called DOS codepages. You need to include the appropriate
  codepage if you want to be able to read/write these filenames on
  DOS/Windows partitions correctly. This does apply to the filenames
  only, not to the file contents. You can include several codepages;
  say Y here if you want to include the DOS codepage for Arabic.

nls codepage 865
CONFIG_NLS_CODEPAGE_865
  The Microsoft fat filesystem family can deal with filenames in
  native language character sets. These character sets are stored in
  so-called DOS codepages. You need to include the appropriate
  codepage if you want to be able to read/write these filenames on
  DOS/Windows partitions correctly. This does apply to the filenames
  only, not to the file contents. You can include several codepages;
  say Y here if you want to include the DOS codepage for the Nordic
  European countries.

nls codepage 866
CONFIG_NLS_CODEPAGE_866
  The Microsoft fat filesystem family can deal with filenames in
  native language character sets. These character sets are stored in
  so-called DOS codepages. You need to include the appropriate
  codepage if you want to be able to read/write these filenames on
  DOS/Windows partitions correctly. This does apply to the filenames
  only, not to the file contents. You can include several codepages;
  say Y here if you want to include the DOS codepage for
  Cyrillic/Russian.

nls codepage 869
CONFIG_NLS_CODEPAGE_869
  The Microsoft fat filesystem family can deal with filenames in
  native language character sets. These character sets are stored in
  so-called DOS codepages. You need to include the appropriate
  codepage if you want to be able to read/write these filenames on
  DOS/Windows partitions correctly. This does apply to the filenames
  only, not to the file contents. You can include several codepages;
  say Y here if you want to include the DOS codepage for Greek.
###
### Why do we have two codepages for Greek and Cyrillic?
###

nls codepage 874
CONFIG_NLS_CODEPAGE_874
  The Microsoft fat filesystem family can deal with filenames in
  native language character sets. These character sets are stored in
  so-called DOS codepages. You need to include the appropriate
  codepage if you want to be able to read/write these filenames on
  DOS/Windows partitions correctly. This does apply to the filenames
  only, not to the file contents. You can include several codepages;
  say Y here if you want to include the DOS codepage for Thai.

nls iso8859-1
CONFIG_NLS_ISO8859_1
  If you want to display filenames with native language characters
  from the Microsoft fat filesystem family or from JOLIET CDROMs
  correctly on the screen, you need to include the appropriate
  input/output character sets. Say Y here for the Latin 1 character
  set, which covers most West European languages such as Albanian,
  Catalan, Danish, Dutch, English, Faeroese, Finnish, French, German,
  Galician, Irish, Icelandic, Italian, Norwegian, Portuguese, Spanish,
  Swedish, and Valencian. It is also the default for the US. If
  unsure, say Y.

nls iso8859-2
CONFIG_NLS_ISO8859_2
  If you want to display filenames with native language characters
  from the Microsoft fat filesystem family or from JOLIET CDROMs
  correctly on the screen, you need to include the appropriate
  input/output character sets. Say Y here for the Latin 2 character
  set, which works for most Latin-written Slavic and Central European
  languages: Czech, German, Hungarian, Polish, Rumanian, Croatian,
  Slovak, Slovene.

nls iso8859-3
CONFIG_NLS_ISO8859_3
  If you want to display filenames with native language characters
  from the Microsoft fat filesystem family or from JOLIET CDROMs
  correctly on the screen, you need to include the appropriate
  input/output character sets. Say Y here for the Latin 3 character
  set, which is popular with authors of Esperanto, Galician, Maltese,
  and Turkish.

nls iso8859-4
CONFIG_NLS_ISO8859_4
  If you want to display filenames with native language characters
  from the Microsoft fat filesystem family or from JOLIET CDROMs
  correctly on the screen, you need to include the appropriate
  input/output character sets. Say Y here for the Latin 4 character
  set which introduces letters for Estonian, Latvian, and
  Lithuanian. It is an incomplete predecessor of Latin 6.

nls iso8859-5
CONFIG_NLS_ISO8859_5
  If you want to display filenames with native language characters
  from the Microsoft fat filesystem family or from JOLIET CDROMs
  correctly on the screen, you need to include the appropriate
  input/output character sets. Say Y here for ISO8859-5, a Cyrillic
  character set with which you can type Bulgarian, Byelorussian,
  Macedonian, Russian, Serbian, and Ukrainian. Note that the charset
  KOI8-R is preferred in Russia.

nls iso8859-6
CONFIG_NLS_ISO8859_6
  If you want to display filenames with native language characters
  from the Microsoft fat filesystem family or from JOLIET CDROMs
  correctly on the screen, you need to include the appropriate
  input/output character sets. Say Y here for ISO8859-6, the Arabic
  character set.

nls iso8859-7
CONFIG_NLS_ISO8859_7
  If you want to display filenames with native language characters
  from the Microsoft fat filesystem family or from JOLIET CDROMs
  correctly on the screen, you need to include the appropriate
  input/output character sets. Say Y here for ISO8859-7, the Modern
  Greek character set.

nls iso8859-8
CONFIG_NLS_ISO8859_8
  If you want to display filenames with native language characters
  from the Microsoft fat filesystem family or from JOLIET CDROMs
  correctly on the screen, you need to include the appropriate
  input/output character sets. Say Y here for ISO8859-8, the Hebrew
  character set.

nls iso8859-9
CONFIG_NLS_ISO8859_9
  If you want to display filenames with native language characters
  from the Microsoft fat filesystem family or from JOLIET CDROMs
  correctly on the screen, you need to include the appropriate
  input/output character sets. Say Y here for the Latin 5 character
  set, and it replaces the rarely needed Icelandic letters in Latin 1
  with the Turkish ones. Useful in Turkey.

nls iso8859-10
CONFIG_NLS_ISO8859_10
  If you want to display filenames with native language characters
  from the Microsoft fat filesystem family or from JOLIET CDROMs
  correctly on the screen, you need to include the appropriate
  input/output character sets. Say Y here for the Latin 6 character
  set, which adds the last Inuit (Greenlandic) and Sami (Lappish)
  letters that were missing in Latin 4 to cover the entire Nordic
  area.

nls koi8-r
CONFIG_NLS_KOI8_R
  If you want to display filenames with native language characters
  from the Microsoft fat filesystem family or from JOLIET CDROMs
  correctly on the screen, you need to include the appropriate
  input/output character sets. Say Y here for the preferred Russian
  character set.

Virtual terminal
CONFIG_VT
  If you say Y here, you will get support for terminal devices with
  display and keyboard devices. These are called "virtual" because you
  can run several virtual terminals (also called virtual consoles) on
  one physical terminal. This is rather useful, for example one
  virtual terminal can collect system messages and warnings, another
  one can be used for a text-mode user session, and a third could run
  an X session, all in parallel. Switching between virtual terminals
  is done with certain key combinations, usually Alt-<function key>.

  The setterm command ("man setterm") can be used to change the
  properties (such as colors) of a virtual terminal.

  You need at least one virtual terminal device in order to make use
  of your keyboard and monitor. Therefore, only people configuring an
  embedded system would want to say N here in order to save some
  memory; the only way to log into such a system is then via a serial
  or network connection.

  If unsure, say Y, or else you won't be able to do much with your new
  shiny Linux system :-)

Support for console on virtual terminal
CONFIG_VT_CONSOLE
  The system console is the device which receives all kernel messages
  and warnings and which allows logins in single user mode. If you
  answer Y here, a virtual terminal (the device used to interact with
  a physical terminal) can be used as system console. This is the most
  common mode of operations, so you should say Y here unless you want
  the kernel messages be output only to a serial port (in which case
  you should say Y to "Console on serial port", below).

  If you do say Y here, by default the currently visible virtual
  terminal (/dev/tty0) will be used as system console. You can change
  that with a kernel command line option such as "console=tty3" which
  would use the third virtual terminal as system console. (Try "man
  bootparam" or see the documentation of your boot loader (lilo or
  loadlin) about how to pass options to the kernel at boot time. The
  lilo procedure is also explained in the SCSI-HOWTO, available via
  FTP (user: anonymous) in
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO.)

  If unsure, say Y.

Software generated cursor
CONFIG_SOFTCURSOR
  If you say Y here, you'll be able to do lots of nice things with the
  cursors of your virtual consoles -- for example turn them into
  non-blinking block cursors which are more visible on laptop screens,
  or change their colors depending on the virtual console they're on.
  See Documentation/VGA-softcursor.txt for more information.

Support for PowerMac keyboard
CONFIG_MAC_KEYBOARD
  This option allows you to use an ADB keyboard attached to your
  machine. Note that this disables any other (ie. PS/2) keyboard
  support, even if your machine is physically capable of using both at
  the same time.
  
  If you use an ADB keyboard (4 pin connector), say Y here.
  If you use a PS/2 keyboard (6 pin connector), say N here.

Standard/generic serial support
CONFIG_SERIAL
  This selects whether you want to include the driver for the standard
  serial ports. The standard answer is Y. People who might say N here
  are those that are setting up dedicated Ethernet WWW/FTP servers, or
  users that have one of the various bus mice instead of a serial
  mouse and don't intend to use their machine's standard serial port
  for anything. (Note that the Cyclades and Stallion multi serial port
  drivers do not need this driver built in for them to work.)

  If you want to compile this driver as a module, say M here and read
  Documentation/modules.txt. The module will be called serial.o.
  [WARNING: Do not compile this driver as a module if you are using
  non-standard serial ports, since the configuration information will
  be lost when the driver is unloaded. This limitation may be lifted
  in the future.]

  BTW1: If you have a mouseman serial mouse which is not recognized by
  the X window system, try running gpm first. 
  
  BTW2: If you intend to connect a so-called Winmodem to your
  machine's serial port, forget it. These modems are crippled and
  require proprietary drivers which are only available under Windows.

  Most people will say Y or M here, so that they can use serial mice,
  modems and similar devices connecting to the standard serial ports.

Support for console on serial port
CONFIG_SERIAL_CONSOLE
  If you say Y here, it will be possible to use a serial port as the
  system console (the system console is the device which receives all
  kernel messages and warnings and which allows logins in single user
  mode). This could be useful if some terminal or printer is connected
  to that serial port.

  Even if you say Y here, the currently visible virtual console
  (/dev/tty0) will still be used as the system console by default, but
  you can alter that using a kernel command line option such as
  "console=ttyS1". (Try "man bootparam" or see the documentation of
  your boot loader (lilo or loadlin) about how to pass options to the
  kernel at boot time. The lilo procedure is also explained in the
  SCSI-HOWTO, available via FTP (user: anonymous) in
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO.) 

  If you don't have a VGA card installed and you say Y here, the
  kernel will automatically use the first serial line, /dev/ttyS0, as
  system console.

  If unsure, say N.

Support for PowerMac serial ports
CONFIG_MAC_SERIAL
  If you have Macintosh style serial ports (8 pin mini-DIN), say Y
  here. If you also have regular serial ports and enable the driver
  for them, you can't currently use the serial console feature.

Comtrol Rocketport support
CONFIG_ROCKETPORT
  This is a driver for the Comtrol Rocketport cards which provide
  multiple serial ports. You would need something like this to connect
  more than two modems to your Linux box, for instance in order to
  become a dial-in server.

  If you want to compile this driver as a module, say M here and read
  Documentation/modules.txt. The module will be called rocket.o.

Digiboard Intelligent async support
CONFIG_DIGIEPCA
  This is a driver for Digi International's Xx, Xeve, and Xem series
  of cards which provide multiple serial ports. You would need
  something like this to connect more than two modems to your Linux
  box, for instance in order to become a dial-in server. This driver
  supports the original PC (ISA) boards as well as PCI, and EISA. If
  you have a card like this, say Y here and read the file
  Documentation/digiepca.txt.

  NOTE: There is another, separate driver for the Digiboard PC boards:
  "Digiboard PC/Xx Support" below. You should (and can) only select
  one of the two drivers. 

  If you want to compile this driver as a module, say M here and read
  Documentation/modules.txt. The module will be called epca.o.

Digiboard PC/Xx Support
CONFIG_DIGI
  This is a driver for the Digiboard PC/Xe, PC/Xi, and PC/Xeve cards
  that give you many serial ports. You would need something like this
  to connect more than two modems to your Linux box, for instance in
  order to become a dial-in server. If you have a card like that, say
  Y here and read the file Documentation/digiboard.txt.

  If you want to compile this driver as a module, say M here and read
  Documentation/modules.txt. The module will be called pcxx.o.

SDL RISCom/8 card support
CONFIG_RISCOM8
  This is a driver for the SDL Communications RISCom/8 multiport card,
  which gives you many serial ports. You would need something like
  this to connect more than two modems to your Linux box, for instance
  in order to become a dial-in server. If you have a card like that,
  say Y here and read the file Documentation/riscom8.txt.

  Also it's possible to say M here and compile this driver as kernel
  loadable module; the module will be called riscom8.o.

Specialix IO8+ card support
CONFIG_SPECIALIX
  This is a driver for the Specialix IO8+ multiport card (both the
  ISA and the PCI version) which gives you many serial ports. You 
  would need something like this to connect more than two modems to 
  your Linux box, for instance in order to become a dial-in server.

  If you have a card like that, say Y here and read the file
  Documentation/specialix.txt. Also it's possible to say M here and
  compile this driver as kernel loadable module which will be called
  specialix.o.

Specialix DTR/RTS pin is RTS
CONFIG_SPECIALIX_RTSCTS
  The Specialix card can only support either RTS or DTR. If you say N
  here, the driver will use the pin as "DTR" when the tty is in
  software handshake mode. If you say Y here or hardware handshake is
  on, it will always be RTS. Read the file Documentation/specialix.txt
  for more information.

Cyclades async mux support
CONFIG_CYCLADES
  This is a driver for a card that gives you many serial ports. You
  would need something like this to connect more than two modems to
  your Linux box, for instance in order to become a dial-in server.
  For information about the Cyclades-Z card, read
  drivers/char/README.cycladesZ.

  As of 1.3.9x kernels, this driver's minor numbers start at 0 instead
  of 32.

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called cyclades.o. 

  If you haven't heard about it, it's safe to say N.

Stallion multiport serial support 
CONFIG_STALDRV
  Stallion cards give you many serial ports. You would need something
  like this to connect more than two modems to your Linux box, for
  instance in order to become a dial-in server. If you say Y here, you
  will be asked for your specific card model in the next questions.
  Make sure to read drivers/char/README.stallion in this case. If you
  have never heard about all this, it's safe to say N.

Stallion EasyIO or EC8/32 support 
CONFIG_STALLION
  If you have an EasyIO or EasyConnection 8/32 multiport Stallion
  card, then this is for you; say Y. Make sure to read
  Documentation/stallion.txt. 

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called stallion.o.

Stallion EC8/64, ONboard, Brumby support
CONFIG_ISTALLION
  If you have an EasyConnection 8/64, ONboard, Brumby or Stallion
  serial multiport card, say Y here. Make sure to read
  Documentation/stallion.txt. 

  To compile it as a module ( = code which can be inserted in and
  removed from the running kernel whenever you want), say M here and
  read Documentation/modules.txt. The module will be called
  istallion.o.

Hayes ESP serial port support
CONFIG_ESPSERIAL
  This is a driver which supports Hayes ESP serial ports. Both single
  port cards and multiport cards are supported. Make sure to read
  Documentation/hayes-esp.txt. 

  To compile this driver as a module ( = code which can be inserted in
  and removed from the running kernel whenever you want), say M here
  and read Documentation/modules.txt. The module will be called esp.o.
  If unsure, say N.

Unix98 PTY support
CONFIG_UNIX98_PTYS
  A pseudo terminal (PTY) is a software device consisting of two
  halves: a master and a slave. The slave device behaves identical to
  a physical terminal; the master device is used by a process to
  read data from and write data to the slave, thereby emulating a
  terminal. Typical programs for the master side are xterm and telnet
  servers. 
  
  Linux has traditionally used the BSD-like names /dev/ptyxx for
  masters and /dev/ttyxx for slaves of pseudo terminals. This scheme
  has a number of problems. The GNU C library glibc 2.1 and later,
  however, supports the Unix98 naming standard: in order to acquire a
  pseudo terminal, a process opens /dev/ptmx; the number of the pseudo
  terminal is then made available to the process and the pseudo
  terminal slave can be accessed as /dev/pts/<number>. What was
  traditionally /dev/ttyp2 will then be /dev/pts/2, for example.

  The entries in /dev/pts/ are created on the fly by a virtual
  filesystem; therefore, if you say Y here you should say Y to
  "/dev/pts filesystem for Unix98 PTYs" as well.

  You should say Y here only if your C library is glibc 2.1 or later
  (equal to libc-6.1, check with "ls -l /lib/libc.so.*"). Read the
  instructions in Documentation/Changes.

Maximum number of Unix98 PTYs in use (0-2048)
CONFIG_UNIX98_PTY_COUNT
  The maximum number of Unix98 PTYs that can be used at any one time.
  The default is 256, and should be enough for desktop systems. Server
  machines which support incoming telnet/rlogin/ssh connections and/or
  serve several X terminals may want to increase this: every incoming
  connection and every xterm uses up one PTY.

  When not in use, each additional set of 256 PTYs occupy
  approximately 8 KB of kernel memory on 32-bit architectures.

Parallel printer support
CONFIG_PRINTER
  If you intend to attach a printer to the parallel port of your Linux
  box (as opposed to using a serial printer; if the connector at the
  printer has 9 or 25 holes ["female"], then it's serial), say Y. Also
  read the Printing-HOWTO, available via FTP (user: anonymous) in
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO.

  It is possible to share one parallel port among several devices
  (e.g. printer and ZIP drive) and it is safe to compile the
  corresponding drivers into the kernel. If you want to compile this
  driver as a module however ( = code which can be inserted in and
  removed from the running kernel whenever you want), say M here and
  read Documentation/modules.txt. The module will be called lp.o. 

  If you have several parallel ports, you should specify the base
  address for the port to be used by the printer with the "lp" kernel
  command line option. (Try "man bootparam" or see the documentation
  of your boot loader (lilo or loadlin) about how to pass options to
  the kernel at boot time. The lilo procedure is also explained in the
  SCSI-HOWTO, available via FTP (user: anonymous) in
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO.) The standard base
  addresses as well as the syntax of the "lp" command line option can
  be found in drivers/char/lp.c.

  If you have more than 3 printers, you need to increase the LP_NO
  variable in lp.c.

Support IEEE1284 status readback
CONFIG_PRINTER_READBACK
  If your printer conforms to IEEE 1284, it may be able to provide a
  status indication when you read from it (for example, with `cat
  /dev/lp1'). To use this feature, say Y here.

Mouse Support (not serial mice)
CONFIG_MOUSE
  This is for machines with a bus mouse or a PS/2 mouse as opposed to
  a serial mouse. Most people have a regular serial MouseSystem or
  Microsoft mouse (made by Logitech) that plugs into a COM port
  (rectangular with 9 or 25 pins). These people say N here. If you
  have something else, read the Busmouse-HOWTO, available via FTP
  (user: anonymous) in ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO and
  say Y here.

  If you have a laptop, you either have to check the documentation or
  experiment a bit to find out whether the trackball is a serial mouse
  or not; it's best to say Y here for you. 

  Note that the answer to this question won't directly affect the
  kernel: saying N will just cause this configure script to skip all
  the questions about non-serial mice. If unsure, say Y.

Logitech busmouse support
CONFIG_BUSMOUSE
  Logitech mouse connected to a proprietary interface card. It's
  generally a round connector with 9 pins. Note that the newer mice
  made by Logitech don't use the Logitech protocol anymore; for those,
  you don't need this option. You want to read the Busmouse-HOWTO,
  available via FTP (user: anonymous) in
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO.

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called busmouse.o. If you are unsure, say N and read the HOWTO
  nevertheless: it will tell you what you have.

PS/2 mouse (aka "auxiliary device") support
CONFIG_PSMOUSE
  The PS/2 mouse connects to a special mouse port that looks much like
  the keyboard port (small circular connector with 6 pins). This way,
  the mouse does not use any serial ports. This port can also be used
  for other input devices like light pens, tablets, keypads. Compaq,
  AST and IBM all use this as their mouse port on currently shipping
  machines. The trackballs of some laptops are PS/2 mice also. In
  particular, the C&T 82C710 mouse on TI Travelmates is a PS/2 mouse.

  Although PS/2 mice are not technically bus mice, they are explained
  in detail in the Busmouse-HOWTO, available via FTP (user: anonymous)
  in ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO. 

  When using a PS/2 mouse, you can get problems if you want to use the
  mouse both on the Linux console and under X. Using the "-R" option
  of the Linux mouse managing program gpm (available from
  ftp://sunsite.unc.edu:/pub/Linux/system/Daemons) solves this
  problem, or you can get the "mconv" utility also from sunsite.

C&T 82C710 mouse port support (as on TI Travelmate)
CONFIG_82C710_MOUSE
  This is a certain kind of PS/2 mouse used on the TI Travelmate. If
  you are unsure, try first to say N here and come back if the mouse
  doesn't work. Read the Busmouse-HOWTO, available via FTP (user:
  anonymous) in ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO.

PC110 digitizer pad support
CONFIG_PC110_PAD
  This drives the digitizer pad on the IBM PC110 palmtop (see
  http://toy.cabi.net; to browse the WWW, you need to have access to a
  machine on the Internet that has a program like lynx or
  netscape). It can turn the digitizer pad into a PS/2 mouse emulation
  with tap gestures or into an absolute pad. 

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called pc110pad.o.

Microsoft busmouse support
CONFIG_MS_BUSMOUSE
  These animals (also called Inport mice) are connected to an
  expansion board using a round connector with 9 pins. If this is what
  you have, say Y and read the Busmouse-HOWTO, available via FTP
  (user: anonymous) in ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO.

  If you are unsure, say N and read the HOWTO nevertheless: it will
  tell you what you have. Also be aware that several vendors talk
  about 'Microsoft busmouse' and actually mean PS/2 busmouse -- so
  count the pins on the connector.

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called msbusmouse.o. 

ATIXL busmouse support
CONFIG_ATIXL_BUSMOUSE
  This is a rare type of busmouse that is connected to the back of an
  ATI video card. Note that most ATI mice are actually Microsoft
  busmice. Read the Busmouse-HOWTO, available via FTP (user:
  anonymous) in ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO.

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called atixlmouse.o. 

  If you are unsure, say N and read the HOWTO nevertheless: it will
  tell you what you have.

Support for PowerMac ADB mouse
CONFIG_ADBMOUSE
  If you have an ADB mouse (4 pin connector) as is common on
  Macintoshes, say Y here.

QIC-02 tape support
CONFIG_QIC02_TAPE
  If you have a non-SCSI tape drive like that, say Y. Or, if you want
  to compile this driver as a module ( = code which can be inserted in
  and removed from the running kernel whenever you want), say M here
  and read Documentation/modules.txt. The module will be called
  tpqic02.o.

Do you want runtime configuration for QIC-02
CONFIG_QIC02_DYNCONF
  You can either configure this driver once and for all by editing a
  header file (include/linux/tpqic02.h), in which case you should
  say N, or you can fetch a program via anonymous FTP which is able
  to configure this driver during runtime. The program to do this is
  called 'qic02conf' and it is part of the tpqic02-support-X.Y.tar.gz
  support package.

  If you want to use the qic02conf program, say Y.

Floppy tape drive (QIC-80/40/3010/3020/TR-1/TR-2/TR-3) support
CONFIG_FTAPE
  If you have a tape drive that is connected to your floppy
  controller, say Y here. 

  Some tape drives (like the Seagate "Tape Store 3200" or the Iomega
  "Ditto 3200" or the Exabyte "Eagle TR-3") come with a "high speed"
  controller of their own. These drives (and their companion
  controllers) are also supported if you say Y here. 

  If you have a special controller (such as the CMS FC-10, FC-20,
  Mountain Mach-II, or any controller that is based on the Intel 82078
  FDC like the high speed controllers by Seagate and Exabyte and
  Iomega's "Ditto Dash") you must configure it by selecting the
  appropriate entries from the "Floppy tape controllers" sub-menu
  below and possibly modify the default values for the IRQ and DMA
  channel and the IO base in ftape's configuration menu. 

  If you want to use your floppy tape drive on a PCI-bus based system,
  please read the file drivers/char/ftape/README.PCI. 

  The ftape kernel driver is also available as a runtime loadable
  module ( = code which can be inserted in and removed from the
  running kernel whenever you want). If you want to compile it as a
  module, say M here and read Documentation/modules.txt. The module
  will be called ftape.o. 

  Note that the Ftape-HOWTO is out of date (sorry) and documents the
  older version 2.08 of this software but still contains useful
  information. There is a web page with more recent documentation at
  http://www-math.math.rwth-aachen.de/~LBFM/claus/ftape/ . This page
  always contains the latest release of the ftape driver and useful
  information (backup software, ftape related patches and
  documentation, FAQ). (To browse the WWW, you need to have access to
  a machine on the Internet that has a program like lynx or netscape.)
  Note that the file system interface has changed quite a bit compared
  to previous versions of ftape. Please read Documentation/ftape.txt.

The file system interface for ftape
CONFIG_ZFTAPE
  Normally, you want to say Y or M. DON'T say N here or you
  WON'T BE ABLE TO USE YOUR FLOPPY TAPE DRIVE.

  The ftape module itself no longer contains the routines necessary
  to interface with the kernel VFS layer (i.e. to actually write data
  to and read data from the tape drive). Instead the file system
  interface (i.e. the hardware independent part of the driver) has
  been moved to a separate module.

  If you say M zftape will be compiled as a runtime loadable
  module ( = code which can be inserted in and removed from the
  running kernel whenever you want). In this case you should read
  Documentation/modules.txt. The module will be called zftape.o.

  Regardless of whether you say Y or M here, an additional runtime
  loadable module called `zft-compressor.o' which contains code to
  support user transparent on-the-fly compression based on Ross
  William's lzrw3 algorithm will be produced. If you have enabled the
  kernel module loader (i.e. have said Y to "Kernel module loader
  support", above) then `zft-compressor.o' will be loaded
  automatically by zftape when needed.

  Despite its name, zftape does NOT use compression by default. The
  file Documentation/ftape.txt contains a short description of the
  most important changes in the file system interface compared to
  previous versions of ftape. The ftape home page
  http://www-math.math.rwth-aachen.de/~LBFM/claus/ftape/ contains
  further information (to browse the WWW, you need to have access to a
  machine on the Internet that has a program like lynx or netscape).

  IMPORTANT NOTE: zftape can read archives created by previous
  versions of ftape and provide file mark support (i.e. fast skipping
  between tape archives) but previous version of ftape will lack file
  mark support when reading archives produced by zftape.

Default block size for zftape
CONFIG_ZFT_DFLT_BLK_SZ
  If unsure leave this at its default value, i.e. 10240. Note that
  you specify only the default block size here. The block size can be
  changed at run time using the MTSETBLK tape operation with the
  MTIOCTOP ioctl (i.e. with "mt -f /dev/qft0 setblk #BLKSZ" from the
  shell command line).

  The probably most striking difference between zftape and previous
  versions of ftape is the fact that all data must be written or read
  in multiples of a fixed block size. The block size defaults to
  10240 which is what GNU tar uses. The values for the block size
  should be either 1 or multiples of 1024 up to a maximum value of
  63488 (i.e. 62 K). If you specify `1' then zftape's builtin
  compression will be disabled.

  Reasonable values are `10240' (GNU tar's default block size),
  `5120' (afio's default block size), `32768' (default block size some
  backup programs assume for SCSI tape drives) or `1' (no restriction
  on block size, but disables builtin compression).

Number of DMA buffers
CONFIG_FT_NR_BUFFERS
  Please leave this at `3' unless you REALLY know what you are doing.
  It is not necessary to change this value. Values below 3 make the
  proper use of ftape impossible, values greater than 3 are a waste of
  memory. You can change the amount of DMA memory used by ftape at
  runtime with "mt -f /dev/qft0 setdrvbuffer #NUMBUFFERS". Each buffer
  wastes 32 KB of memory. Please note that this memory cannot be
  swapped out.

Procfs entry for ftape
CONFIG_FT_PROC_FS
  Optional. Saying Y will result in creation of a directory
  `/proc/ftape' under the proc file system. The files can be viewed
  with your favorite pager (i.e. use "more /proc/ftape/history" or
  "less /proc/ftape/history" or simply "cat /proc/ftape/history"). The
  file will contain some status information about the inserted
  cartridge, the kernel driver, your tape drive, the floppy disk
  controller and the error history for the most recent use of the
  kernel driver. Saying Y will enlarge the size of the ftape driver
  by approximately 2 KB.

  WARNING: When compiling ftape as a module (i.e. saying M to
  "Floppy tape drive") it is dangerous to use ftape's proc file system
  interface. Accessing `/proc/ftape' while the module is unloaded will
  result in a kernel Oops. This cannot be fixed from inside ftape.

Controlling the amount of debugging output of ftape
CONFIG_FT_NORMAL_DEBUG
  This option controls the amount of debugging output the ftape driver
  is ABLE to produce; it does not increase or diminish the debugging
  level itself. If unsure, leave this at its default setting,
  i.e. choose "Normal".

  Ftape can print lots of debugging messages to the system console
  resp. kernel log files. Reducing the amount of possible debugging
  output reduces the size of the kernel module by some kb, so it might
  be a good idea to use "None" for emergency boot floppies.

  If you want to save memory then the following strategy is
  recommended: leave this option at its default setting "Normal" until
  you know that the driver works as expected, afterwards reconfigure
  the kernel, this time specifying "Reduced" or "None" and recompile
  and install the kernel as usual. Note that choosing "Excessive"
  debugging output does not increase the amount of debugging output
  printed to the console but only makes it possible to produce
  "Excessive" debugging output.

  Please read Documentation/ftape.txt for a short description
  how to control the amount of debugging output.

The floppy drive controller for ftape
CONFIG_FT_STD_FDC
  Only change this setting if you have a special controller. If you
  didn't plug any add-on card into your computer system but just
  plugged the floppy tape cable into the already existing floppy drive
  controller then you don't want to change the default setting,
  i.e. choose "Standard".

  Choose "MACH-2" if you have a Mountain Mach-2 controller.
  Choose "FC-10/FC-20" if you have a Colorado FC-10 or FC-20
  controller.
  Choose "Alt/82078" if you have another controller that is located at
  an IO base address different from the standard floppy drive
  controller's base address of `0x3f0', or uses an IRQ (interrupt)
  channel different from `6', or a DMA channel different from
  `2'. This is necessary for any controller card that is based on
  Intel's 82078 FDC such as Seagate's, Exabyte's and Iomega's "high
  speed" controllers.

  If you choose something other than "Standard" then please make
  sure that the settings for the IO base address and the IRQ and DMA
  channel in the configuration menus below are correct. Use the manual
  of your tape drive to determine the correct settings!

  If you are already successfully using your tape drive with another
  operating system then you definitely should use the same settings
  for the IO base, the IRQ and DMA channel that have proven to work
  with that other OS.

  Note that this menu lets you specify only the default setting for
  the hardware setup. The hardware configuration can be changed at
  boot time (when ftape is compiled into the kernel, i.e. if you
  have said Y to "Floppy tape drive") or module load time (i.e. if you
  have said M to "Floppy tape drive").

  Please read also the file Documentation/ftape.txt which
  contains a short description of the parameters that can be set at
  boot or load time. If you want to use your floppy tape drive on a
  PCI-bus based system, please read the file
  drivers/char/ftape/README.PCI.

IO base of the floppy disk controller used with Ftape
CONFIG_FT_FDC_BASE
  You don't need to specify a value if the following default
  settings for the base IO address are correct:
  <<< MACH-2     : 0x1E0 >>>
  <<< FC-10/FC-20: 0x180 >>>
  <<< Secondary  : 0x370 >>>
  Secondary refers to a secondary FDC controller like the "high speed"
  controllers delivered by Seagate or Exabyte or Iomega's Ditto Dash.
  Please make sure that the setting for the IO base address
  specified here is correct. USE THE MANUAL OF YOUR TAPE DRIVE OR
  CONTROLLER CARD TO DETERMINE THE CORRECT SETTING. If you are already
  successfully using the tape drive with another operating system then
  you definitely should use the same settings for the IO base that has
  proven to work with that other OS.

  Note that this menu lets you specify only the default setting for
  the IO base. The hardware configuration can be changed at boot time
  (when ftape is compiled into the kernel, i.e. if you specified Y to
  "Floppy tape drive") or module load time (i.e. if you have said M to
  "Floppy tape drive").

  Please read also the file Documentation/ftape.txt which contains a
  short description of the parameters that can be set at boot or load
  time.

IRQ channel for the floppy disk controller used with Ftape
CONFIG_FT_FDC_IRQ
  You don't need to specify a value if the following default
  settings for the interrupt channel are correct:
  <<< MACH-2     : 6 >>>
  <<< FC-10/FC-20: 9 >>>
  <<< Secondary  : 6 >>>
  Secondary refers to secondary a FDC controller like the "high speed"
  controllers delivered by Seagate or Exabyte or Iomega's Ditto Dash.
  Please make sure that the setting for the IO base address
  specified here is correct. USE THE MANUAL OF YOUR TAPE DRIVE OR
  CONTROLLER CARD TO DETERMINE THE CORRECT SETTING. If you are already
  successfully using the tape drive with another operating system then
  you definitely should use the same settings for the IO base that has
  proven to work with that other OS.

  Note that this menu lets you specify only the default setting for
  the IRQ channel. The hardware configuration can be changed at boot
  time (when ftape is compiled into the kernel, i.e. if you said Y to
  "Floppy tape drive") or module load time (i.e. if you said M to
  "Floppy tape drive").

  Please read also the file Documentation/ftape.txt which contains a
  short description of the parameters that can be set at boot or load
  time.

DMA channel for the floppy disk controller used with Ftape
CONFIG_FT_FDC_DMA
  You don't need to specify a value if the following default
  settings for the DMA channel are correct:
  <<< MACH-2     : 2 >>>
  <<< FC-10/FC-20: 3 >>>
  <<< Secondary  : 2 >>>
  Secondary refers to a secondary FDC controller like the "high speed"
  controllers delivered by Seagate or Exabyte or Iomega's Ditto Dash.
  Please make sure that the setting for the IO base address
  specified here is correct. USE THE MANUAL OF YOUR TAPE DRIVE OR
  CONTROLLER CARD TO DETERMINE THE CORRECT SETTING. If you are already
  successfully using the tape drive with another operating system then
  you definitely should use the same settings for the IO base that has
  proven to work with that other OS.

  Note that this menu lets you specify only the default setting for
  the DMA channel. The hardware configuration can be changed at boot
  time (when ftape is compiled into the kernel, i.e. if you said Y to
  "Floppy tape drive") or module load time (i.e. if you said M to
  "Floppy tape drive").

  Please read also the file Documentation/ftape.txt which contains a
  short description of the parameters that can be set at boot or load
  time.

FDC FIFO Threshold before requesting DMA service
CONFIG_FT_FDC_THR
  Set the FIFO threshold of the FDC. If this is higher the DMA
  controller may serve the FDC after a higher latency time. If this is
  lower, fewer DMA transfers occur leading to less bus contention.
  You may try to tune this if ftape annoys you with "reduced data
  rate because of excessive overrun errors" messages. However, this
  doesn't seem to have too much effect.

  If unsure, don't touch the initial value, i.e. leave it at "8".

FDC maximum data rate
CONFIG_FT_FDC_MAX_RATE
  With some motherboard/FDC combinations ftape will not be able to
  run your FDC/tape drive combination at the highest available
  speed. If this is the case you'll encounter "reduced data rate
  because of excessive overrun errors" messages and lots of retries
  before ftape finally decides to reduce the data rate.

  In this case it might be desirable to tell ftape beforehand that
  it need not try to run the tape drive at the highest available
  speed. If unsure, leave this disabled, i.e. leave it at 2000
  bits/sec.

MTRR control and configuration
CONFIG_MTRR
  On Intel Pentium Pro and Pentium II systems the Memory Type Range
  Registers (MTRRs) may be used to control processor access to memory
  ranges. This is most useful when you have a video (VGA) card on a
  PCI or AGP bus. Enabling write-combining allows bus write transfers
  to be combined into a larger transfer before bursting over the
  PCI/AGP bus. This can increase performance of image write operations
  2.5 times or more. This option creates a /proc/mtrr file which may
  be used to manipulate your MTRRs. Typically the X server should use
  this. This should have a reasonably generic interface so that
  similar control registers on other processors can be easily
  supported.

  Saying Y here also fixes a problem with buggy SMP BIOSes which only
  set the MTRRs for the boot CPU and not the secondary CPUs. This can
  lead to all sorts of problems.

  In general you should compile this into the kernel, rather than as a
  loadable module, because the BIOS fix needs to be done early in the
  boot sequence. If you compile this as a module, the BIOS fix will be
  delayed until when you load the module. You do this at your own
  risk.

  See Documentation/mtrr.txt for more information.

Main CPU frequency, only for DEC alpha machine
CONFIG_FT_ALPHA_CLOCK
  On some DEC Alpha machines the CPU clock frequency cannot be
  determined automatically, so you need to specify it here ONLY if
  running a DEC Alpha, otherwise this setting has no effect.

Zilog serial support
CONFIG_SUN_ZS
  This driver does not exist at this point, so you might as well 
  say N.

Advanced Power Management
CONFIG_APM
  APM is a BIOS specification for saving power using several different
  techniques. This is mostly useful for battery powered laptops with
  APM compliant BIOSes. If you say Y here, the system time will be
  reset after a USER RESUME operation, the /proc/apm device will
  provide battery status information, and user-space programs will
  receive notification of APM "events" (e.g., battery status change).

  Supporting software is available; for more information, read the
  Battery Powered Linux mini-HOWTO, available via FTP (user:
  anonymous) from ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO/mini.

  This driver does not spin down disk drives (see the hdparm(8)
  manpage ("man 8 hdparm") for that), and it doesn't turn off
  VESA-compliant "green" monitors. 

  This driver does not support the TI 4000M TravelMate and the ACER
  486/DX4/75 because they don't have compliant BIOSes. Many "green"
  desktop machines also don't have compliant BIOSes, and this driver
  will cause those machines to panic during the boot phase (typically,
  these machines are using a data segment of 0040, which is reserved
  for the Linux kernel). 

  If you are running Linux on a laptop, you may also want to read the
  Linux Laptop home page on the WWW at
  http://www.cs.utexas.edu/users/kharker/linux-laptop/ (to browse the
  WWW, you need to have access to a machine on the Internet that has a
  program like lynx or netscape). 

  Generally, if you don't have a battery in your machine, there isn't
  much point in using this driver and you should say N. If you get
  random kernel OOPSes or reboots that don't seem to be related to
  anything, try disabling/enabling this option (or disabling/enabling
  APM in your BIOS). 

  Some other things you should try when experiencing seemingly random,
  "weird" problems:

   1) make sure that you have enough swap space and that it is
      enabled. 
   2) pass the "no-hlt" option to the kernel 
   3) switch on floating point emulation in the kernel and pass
      the "no387" option to the kernel
   4) pass the "floppy=nodma" option to the kernel
   5) pass the "mem=4M" option to the kernel (thereby disabling 
      all but the first 4 MB of RAM)
   6) make sure that the CPU is not over clocked.
   7) read the sig11 FAQ at http://www.bitwizard.nl/sig11/
   8) disable the cache from your BIOS settings
   9) install a fan for the video card or exchange video RAM
   10) install a better fan for the CPU
   11) exchange RAM chips 
   12) exchange the motherboard.

Ignore USER SUSPEND
CONFIG_APM_IGNORE_USER_SUSPEND
  This option will ignore USER SUSPEND requests. On machines with a
  compliant APM BIOS, you want to say N. However, on the NEC Versa M
  series notebooks, it is necessary to say Y because of a BIOS bug.

Enable APM at boot time
CONFIG_APM_DO_ENABLE
  Enable APM features at boot time. From page 36 of the APM BIOS
  specification: "When disabled, the APM BIOS does not automatically
  power manage devices, enter the Standby State, enter the Suspend
  State, or take power saving steps in response to CPU Idle calls."
  This driver will make CPU Idle calls when Linux is idle (unless this
  feature is turned off -- see "Do CPU IDLE calls", below). This
  should always save battery power, but more complicated APM features
  will be dependent on your BIOS implementation. You may need to turn
  this option off if your computer hangs at boot time when using APM
  support, or if it beeps continuously instead of suspending. Turn
  this off if you have a NEC UltraLite Versa 33/C or a Toshiba
  T400CDT. This is off by default since most machines do fine without
  this feature.

Do CPU IDLE calls
CONFIG_APM_CPU_IDLE
  Enable calls to APM CPU Idle/CPU Busy inside the kernel's idle loop.
  On some machines, this can activate improved power savings, such as
  a slowed CPU clock rate, when the machine is idle. These idle calls
  are made after the idle loop has run for some length of time (e.g.,
  333 mS). On some machines, this will cause a hang at boot time or
  whenever the CPU becomes idle. (On machines with more than one CPU,
  this option does nothing.)

Enable console blanking using APM
CONFIG_APM_DISPLAY_BLANK
  Enable console blanking using the APM. Some laptops can use this to
  turn off the LCD backlight when the screen blanker of the Linux
  virtual console blanks the screen. Note that this is only used by
  the virtual console screen blanker, and won't turn off the backlight
  when using the X Window system. This also doesn't have anything to
  do with your VESA-compliant power-saving monitor. Further, this
  option doesn't work for all laptops -- it might not turn off your
  backlight at all, or it might print a lot of errors to the console,
  especially if you are using gpm.

Power off on shutdown 
CONFIG_APM_POWER_OFF
  Enable the ability to power off the computer after the Linux kernel
  is halted. You will need software (e.g., a suitable version of the
  halt(8) command ("man 8 halt")) to cause the computer to power down.
  Recent versions of the sysvinit package available from
  ftp://sunsite.unc.edu/pub/Linux/system/daemons/init/ (user:
  anonymous) contain support for this ("halt -p" shuts down Linux and
  powers off the computer, if executed from runlevel 0). As with the
  other APM options, this option may not work reliably with some APM
  BIOS implementations.

Ignore multiple suspend/standby events
CONFIG_APM_IGNORE_MULTIPLE_SUSPEND
  This option is necessary on the IBM Thinkpad 560, but should work on
  all other laptops. When the APM BIOS returns multiple suspend or
  standby events while one is already being processed they will be
  ignored. Without this the Thinkpad 560 has troubles with the user
  level daemon apmd, and with the PCMCIA package pcmcia-cs.

Watchdog Timer Support 
CONFIG_WATCHDOG
  If you say Y here (and to one of the following options) and create a
  character special file /dev/watchdog with major number 10 and minor
  number 130 using mknod ("man mknod"), you will get a watchdog, i.e.:
  subsequently opening the file and then failing to write to it for
  longer than 1 minute will result in rebooting the machine. This
  could be useful for a networked machine that needs to come back
  online as fast as possible after a lock-up. There's both a watchdog
  implementation entirely in software (which can sometimes fail to
  reboot the machine) and a driver for hardware watchdog boards, which
  are more robust and can also keep track of the temperature inside
  your computer. For details, read Documentation/watchdog.txt in the
  kernel source.

  The watchdog is usually used together with the watchdog daemon 
  which is available via FTP (user: anonymous) from
  ftp://tsx-11.mit.edu/pub/linux/sources/sbin/. This daemon can also
  monitor NFS connections and can reboot the machine when the process
  table is full.

  If unsure, say N.

Disable watchdog shutdown on close
CONFIG_WATCHDOG_NOWAYOUT
  The default watchdog behaviour (which you get if you say N here) is
  to stop the timer if the process managing it closes the file
  /dev/watchdog. It's always remotely possible that this process might
  get killed. If you say Y here, the watchdog cannot be stopped once
  it has been started.

WDT Watchdog timer
CONFIG_WDT
  If you have a WDT500P or WDT501P watchdog board, say Y here,
  otherwise N. It is not possible to probe for this board, which means
  that you have to set the IO port and IRQ it uses in the kernel
  source at the top of drivers/char/wdt.c. 

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called wdt.o.

WDT501 features
CONFIG_WDT_501
  Saying Y here and creating a character special file /dev/temperature
  with major number 10 and minor number 131 ("man mknod") will give
  you a thermometer inside your computer: reading from
  /dev/temperature yields one byte, the temperature in degrees
  Fahrenheit. This works only if you have a WDT501P watchdog board
  installed.

Fan Tachometer
CONFIG_WDT_501_FAN
  Enable the Fan Tachometer on the WDT501. Only do this if you have a
  fan tachometer actually set up.

Software Watchdog
CONFIG_SOFT_WATCHDOG
  A software monitoring watchdog. This will fail to reboot your system
  from some situations that the hardware watchdog will recover
  from. Equally it's a lot cheaper to install. 

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  If you want to compile it as a module, say M here and read
  Documentation/modules.txt. The module will be called softdog.o.

Berkshire Products PC Watchdog
CONFIG_PCWATCHDOG
  This is the driver for the Berkshire Products PC Watchdog card.
  This card simply watches your kernel to make sure it doesn't freeze,
  and if it does, it reboots your computer after a certain amount of
  time. This driver is like the WDT501 driver but for different
  hardware. Please read Documentation/pcwd-watchdog.txt. The PC
  watchdog cards can be ordered from http://www.berkprod.com. Some
  example rc.local files are available from ftp://ftp.bitgate.com. 

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module is called pcwd.o. If you want to compile it as a module,
  say M here and read Documentation/modules.txt. 

  Most people will say N.

Acquire SBC Watchdog Timer
CONFIG_ACQUIRE_WDT
  This is the driver for the hardware watchdog on the PSC-6x86 Single
  Board Computer produced by Acquire Inc (and others). This watchdog
  simply watches your kernel to make sure it doesn't freeze, and if
  it does, it reboots your computer after a certain amount of time.

  This driver is like the WDT501 driver but for different hardware.
  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module is called pscwdt.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt. Most people
  will say N.

Enhanced Real Time Clock Support
CONFIG_RTC
  If you say Y here and create a character special file /dev/rtc with
  major number 10 and minor number 135 using mknod ("man mknod"), you
  will get access to the real time clock built into your computer.
  Every PC has such a clock built in. It can be used to generate
  signals from as low as 1Hz up to 8192Hz, and can also be used as a
  24 hour alarm. It reports status information via the file /proc/rtc
  and its behaviour is set by various ioctls on /dev/rtc.

  People running SMP (multiprocessor) versions of Linux should say Y
  here to read and set the RTC clock in a SMP compatible
  fashion. (They should also read Documentation/smp and
  Documentation/IO-APIC.txt and the SMP-FAQ on the WWW at
  http://www.irisa.fr/prive/mentre/smp-faq/ (to browse the WWW, you
  need to have access to a machine on the Internet that has a program
  like lynx or netscape).)

  If you think you have a use for such a device (such as periodic data
  sampling), then say Y here, and read Documentation/rtc.txt for
  details.

Tadpole ANA H8 Support
CONFIG_H8
  The Hitachi H8/337 is a microcontroller used to deal with the power
  and thermal environment. If you say Y here, you will be able to
  communicate with it via a character special device. 

  If unsure, say N.

/dev/nvram support
CONFIG_NVRAM
  If you say Y here and create a character special file /dev/nvram
  with major number 10 and minor number 144 using mknod ("man mknod"),
  you get read and write access to the 50 bytes of non-volatile memory
  in the real time clock (RTC), which is contained in every PC and
  most Ataris. This memory is conventionally called "CMOS RAM" on PCs
  and "NVRAM" on Ataris. /dev/nvram may be used to view settings
  there, or to change them (with some utility). It could also be used
  to frequently save a few bits of very important data that may not be
  lost over power-off and for which writing to disk is too insecure.
  On Atari machines, /dev/nvram is always configured and does not need
  to be selected.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called nvram.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

Joystick support
CONFIG_JOYSTICK
  If you have a joystick, you can say Y here to enable generic
  joystick support. You will also need to say Y or M to at least one
  of the hardware specific joystick drivers. This will make the
  joysticks available as /dev/jsX devices. Please read the file
  Documentation/joystick.txt which contains more information and the
  location of the joystick package that you'll need.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called joystick.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

Classic PC analog joysticks
CONFIG_JOY_ANALOG
  Say Y here if you have an analog joystick or gamepad that connects
  to the PC gameport. This supports many different types, including
  joysticks with throttle control, and with CHF / FCS / 6-button
  extensions. For more information on how to use the driver please
  read Documentation/joystick.txt

FPGaming and MadCatz A3D controllers
CONFIG_JOY_ASSASIN
  Say Y here if you have an FPGaming Assasin 3D, MadCatz Panther or
  MadCatz Panther XL. For more information on how to use the driver
  please read Documentation/joystick.txt

Gravis GrIP gamepads
CONFIG_JOY_GRAVIS
  Say Y here if you have a Gravis GamePad Pro. For more information
  on how to use the driver please read Documentation/joystick.txt

PDPI Lightning L4 gamecards
CONFIG_JOY_LIGHTNING
  Say Y here if you have a PDPI Lightning L4 gamecard and an analog
  joystick or gamepad connected to it. For more information on how to
  use the driver please read Documentation/joystick.txt

Logitech Digital joysticks
CONFIG_JOY_LOGITECH
  Say Y here if you have a Logitech WingMan Extreme Digital,
  Logitech ThunderPad Digital or Logitech CyberMan 2. For more
  information on how to use the driver please read
  Documentation/joystick.txt

Microsoft SideWinder, Genius Digital joysticks
CONFIG_JOY_SIDEWINDER
  Say Y here if you have a Microsoft SideWinder 3d Pro, Microsoft
  SideWinder Precision Pro, Microsoft SideWinder Force Feedback Pro,
  Microsoft Sidewinder GamePad or Genius Flight2000 F-23 Digital. For
  more information on how to use the driver please read
  Documentation/joystick.txt

ThrustMaster DirectConnect (BSP) joysticks
CONFIG_JOY_THRUSTMASTER
  Say Y here if you have a ThrustMaster Millenium 3D Inceptor,
  ThrustMaster 3D Rage Pad, or ThrustMaster WCS III. For more
  information on how to use the driver please read
  Documentation/joystick.txt

NES, SNES, PSX, Multisystem gamepads
CONFIG_JOY_CONSOLE
  Say Y here if you have a Nintendo Entertainment System gamepad,
  Super Nintendo Entertainment System gamepad, Sony PlayStation
  gamepad or a Multisystem -- Atari, Amiga, Commodore, Amstrad CPC
  joystick. For more information on how to use the driver please read
  Documentation/joystick.txt

Sega, Multisystem gamepads
CONFIG_JOY_DB9
  Say Y here if you have a Sega Master System gamepad, Sega Genesis
  gamepad, Sega Saturn gamepad, or a Multisystem -- Atari, Amiga,
  Commodore, Amstrad CPC joystick. For more information on how to use
  the driver please read Documentation/joystick.txt

TurboGraFX Multisystem joystick interface
CONFIG_JOY_TURBOGRAFX
  Say Y here if you have the TurboGraFX interface by Steffen Schwenke,
  and want to use it with Multiststem -- Atari, Amiga, Commodore,
  Amstrad CPC joystick. For more information on how to use the driver
  please read Documentation/joystick-parport.txt

Amiga joysticks
CONFIG_JOY_AMIGA
  Say Y here if you have an Amiga with a digital joystick connected
  to it. For more information on how to use the driver please read
  Documentation/joystick.txt

Atomwide Serial Support
CONFIG_ATOMWIDE_SERIAL
  If you have an Atomwide Serial card for an Acorn system, say Y to
  this option. The driver can handle 1, 2, or 3 port cards.
  If unsure, say N

The Serial Port Dual Serial Port
CONFIG_DUALSP_SERIAL
  If you have the Serial Port's dual serial card for an Acorn system,
  say Y to this option. If unsure, say N

Sound card support
CONFIG_SOUND
  If you have a sound card in your computer, i.e. if it can say more
  than an occasional beep, say Y. Be sure to have all the information
  about your sound card and its configuration down (I/O port,
  interrupt and DMA channel), because you will be asked for it. You
  want to read the Sound-HOWTO, available via FTP (user: anonymous)
  from ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO. There is also some
  information in various README files in drivers/sound, esp. in
  Readme.cards which you should read first to find out whether your
  card is supported by Linux, and, if yes, which driver to use.

  If you have a PnP sound card and you want to configure it at boot
  time using the ISA PnP tools (read
  http://www.roestock.demon.co.uk/isapnptools/ (to browse the WWW, you
  need to have access to a machine on the Internet that has a program
  like lynx or netscape)), then you need to compile the sound card
  support as a module ( = code which can be inserted in and removed
  from the running kernel whenever you want) and load that module
  after the PnP configuration is finished. To do this, say M here and
  read Documentation/modules.txt as well as
  drivers/sound/Readme.modules; the module will be called sound.o.

  I'm told that even without a sound card, you can make your computer
  say more than an occasional beep, by programming the PC speaker.
  Kernel patches and supporting utilities to do that are in the pcsp
  package, available at http://www.imladris.demon.co.uk/pcsp/.

OSS sound modules
CONFIG_SOUND_OSS
  OSS is the Open Sound System suite of sound card drivers. They make
  sound programming easier since they provide a common API. Say Y or M
  here (the module will be called sound.o) if you haven't found a
  driver for your sound card above, then pick your driver from the
  list below.
 
Support for Aztech Sound Galaxy (non-PnP) cards
CONFIG_SOUND_SGALAXY
  This module initializes the older non Plug and Play sound galaxy
  cards from Aztech. It supports the Waverider Pro 32 - 3D and the
  Galaxy Washington 16.

Yamaha OPL3-SA1 audio controller
CONFIG_SOUND_OPL3SA1
  Say Y or M if you have a Yamaha OPL3-SA1 sound chip, which is
  usually built into motherboards. Read Documentation/sound/OPL3-SA
  for details.

ProAudioSpectrum 16 support
CONFIG_SOUND_PAS
  Answer Y only if you have a Pro Audio Spectrum 16, ProAudio Studio
  16 or Logitech SoundMan 16 sound card. Don't answer Y if you have
  some other card made by Media Vision or Logitech since they are not
  PAS16 compatible.

100% Sound Blaster compatibles (SB16/32/64, ESS, Jazz16) support
CONFIG_SOUND_SB
  Answer Y if you have an original Sound Blaster card made by
  Creative Labs or a 100% hardware compatible clone (like the
  Thunderboard or SM Games). If your card was in the list of supported
  cards look at the card specific instructions in the
  drivers/sound/Readme.cards file before answering this question. For
  an unknown card you may answer Y if the card claims to be
  Sound Blaster-compatible. 

  You can say M here to compile this driver as a module; the module is
  called sb.o.

  You should also say Y here for cards based on the Avance Logic
  ALS-007 chip (read Documentation/sound/ALS007) and for ESS1688 and
  ESS1868 cards (read Documentation/sound/ESS1868). If you have an SB
  AWE 32 or SB AWE 64, say Y here and also to "Additional lowlevel
  drivers" and to "SB32/AWE support" below. If you have an IBM Mwave
  card, say Y here and read Documentation/sound/mwave.
  
  Please read Documentation/sound/Soundblaster.

Generic OPL2/OPL3 FM synthesizer support
CONFIG_SOUND_ADLIB
  Answer Y if your card has a FM chip made by Yamaha (OPL2/OPL3/OPL4).
  Answering Y is usually a safe and recommended choice, however some
  cards may have software (TSR) FM emulation. Enabling FM support with
  these cards may cause trouble (I don't currently know of any such
  cards, however). 

  Please read the file Documentation/sound/OPL3 if your card has an
  OPL3 chip.

  If unsure, say Y.
  

#Loopback MIDI device support
#CONFIG_SOUND_VMIDI
###
### somebody please fill this in.
###
#
Gravis Ultrasound support
CONFIG_SOUND_GUS
  Say Y here for any type of Gravis Ultrasound card, including
  the GUS or GUS MAX. See also Documentation/sound/ultrasound for
  more information on configuring this card with modules.

MPU-401 support (NOT for SB16)
CONFIG_SOUND_MPU401
  Be careful with this question. The MPU401 interface is supported by
  all sound cards. However, some natively supported cards have their
  own driver for MPU401. Enabling this MPU401 option with these cards
  will cause a conflict. Also, enabling MPU401 on a system that
  doesn't really have a MPU401 could cause some trouble. If your card
  was in the list of supported cards, look at the card specific
  instructions in the drivers/sound/Readme.cards file. It's safe to
  answer Y if you have a true MPU401 MIDI interface card.

6850 UART support
CONFIG_SOUND_UART6850
  This option enables support for MIDI interfaces based on the 6850
  UART chip. This interface is rarely found on sound cards. It's safe
  to answer N to this question.

VIDC Sound
CONFIG_VIDC_SOUND
  Say Y here for ARM systems with the VIDC video controller and 16-bit
  Linear sound DACs. If unsure, say N.

PSS (AD1848, ADSP-2115, ESC614) support
CONFIG_SOUND_PSS
  Answer Y or M if you have an Orchid SW32, Cardinal DSP16, Beethoven
  ADSP-16 or some other card based on the PSS chipset (AD1848 codec +
  ADSP-2115 DSP chip + Echo ESC614 ASIC CHIP). For more information on
  how to compile it into the kernel or as a module see the file
  Documentation/sound/PSS.

Enable PSS mixer (Beethoven ADSP-16 and other compatible)
CONFIG_PSS_MIXER
  Answer Y for Beethoven ADSP-16. You may try to say Y also for other
  cards if they have master volume, bass, treble, and you can't
  control it under Linux. If you answer N for Beethoven ADSP-16, you
  can't control master volume, bass, treble and synth volume.

  If you said M to "PSS support" above, you may enable or disable this
  PSS mixer with the module parameter pss_mixer. For more information
  see the file Documentation/sound/PSS.

Have DSPxxx.LD firmware file
CONFIG_PSS_HAVE_BOOT
  If you have the DSPxxx.LD file or SYNTH.LD file for you card, say Y
  to include this file. Without this file the synth device (OPL) may
  not work.

Full pathname of DSPxxx.LD firmware file
CONFIG_PSS_BOOT_FILE
  Enter the full pathname of your DSPxxx.LD file or SYNTH.LD file,
  starting from /.

16 bit sampling option of GUS (_NOT_ GUS MAX)
CONFIG_SOUND_GUS16
  Answer Y if you have installed the 16 bit sampling daughtercard on
  your GUS. Answer N if you have a GUS MAX, since saying Y here
  disables GUS MAX support.

GUS MAX support
CONFIG_SOUND_GUSMAX
  Answer Y only if you have a Gravis Ultrasound MAX.

Microsoft Sound System support
CONFIG_SOUND_MSS
  Again think carefully before answering Y to this question. It's safe
  to answer Y if you have the original Windows Sound System card made
  by Microsoft or Aztech SG 16 Pro (or NX16 Pro). Also you may say Y
  in case your card is NOT among these:

     ATI Stereo F/X, AdLib, Audio Excell DSP16, Cardinal DSP16,
     Ensoniq SoundScape (and compatibles made by Reveal and Spea),
     Gravis Ultrasound, Gravis Ultrasound ACE, Gravis Ultrasound Max,
     Gravis Ultrasound with 16 bit option, Logitech Sound Man 16,
     Logitech SoundMan Games, Logitech SoundMan Wave, MAD16 Pro (OPTi
     82C929), Media Vision Jazz16, MediaTriX AudioTriX Pro, Microsoft
     Windows Sound System (MSS/WSS), Mozart (OAK OTI-601), Orchid
     SW32, Personal Sound System (PSS), Pro Audio Spectrum 16, Pro
     Audio Studio 16, Pro Sonic 16, Roland MPU-401 MIDI interface,
     Sound Blaster 1.0, Sound Blaster 16, Sound Blaster 16ASP, Sound
     Blaster 2.0, Sound Blaster AWE32, Sound Blaster Pro, TI TM4000M
     notebook, ThunderBoard, Turtle Beach Tropez, Yamaha FM
     synthesizers (OPL2, OPL3 and OPL4), 6850 UART MIDI Interface.

  For cards having native support in VoxWare, consult the card
  specific instructions in drivers/sound/Readme.cards. Some drivers
  have their own MSS support and saying Y to this option will cause a
  conflict.

Ensoniq Soundscape support
CONFIG_SOUND_SSCAPE
  Answer Y if you have a sound card based on the Ensoniq SoundScape
  chipset. Such cards are being manufactured at least by Ensoniq, Spea
  and Reveal (Reveal makes also other cards).

MediaTriX AudioTriX Pro support
CONFIG_SOUND_TRIX
  Answer Y if you have the AudioTriX Pro sound card manufactured
  by MediaTrix.

Have TRXPRO.HEX firmware file
CONFIG_TRIX_HAVE_BOOT
  The MediaTrix AudioTrix Pro has an on-board microcontroller which
  needs to be initialized by downloading the code from the file
  TRXPRO.HEX in the DOS driver directory. If you don't have the
  TRXPRO.HEX file handy you may skip this step. However, the SB and
  MPU-401 modes of AudioTrix Pro will not work without this file!

Full pathname of TRXPRO.HEX firmware file
CONFIG_TRIX_BOOT_FILE
  Enter the full pathname of your TRXPRO.HEX file, starting from /.

Support for OPTi MAD16 and/or Mozart based cards
CONFIG_SOUND_MAD16
  Answer Y if your card has a Mozart (OAK OTI-601) or MAD16 (OPTi
  82C928 or 82C929 or 82C931) audio interface chip. For the 82C931,
  please read drivers/sound/README.C931. These chips are currently
  quite common so it's possible that many no-name cards have one of
  them. In addition the MAD16 chip is used in some cards made by known
  manufacturers such as Turtle Beach (Tropez), Reveal (some models)
  and Diamond (latest ones). Note however that the Tropez sound cards
  have their own driver; if you have one of those, say N here and Y or
  M to "Full support for Turtle Beach WaveFront", below. 

  See also Documentation/sound/Opti and Documentation/sound/MAD16 for
  more information on setting these cards up as modules.

Full support for Turtle Beach WaveFront synth/sound cards
CONFIG_SOUND_WAVEFRONT
  Answer Y or M if you have a Tropez Plus, Tropez or Maui sound card
  and read the files Documentation/sound/Wavefront and
  Documentation/sound/Tropez+.
  
Support MIDI in older MAD16 based cards (requires SB)
CONFIG_MAD16_OLDCARD
  Answer Y (or M) if you have an older card based on the C928 or
  Mozart chipset and you want to have MIDI support. If you enable this
  option you also need to enable support for Sound Blaster.

Support for Crystal CS4232 based (PnP) cards
CONFIG_SOUND_CS4232
  Say Y here if you have a card based on the Crystal CS4232 chip set,
  which uses its own Plug and Play protocol. 

  See Documentation/sound/CS4232 for more information on configuring
  this card.

Support for Yamaha OPL3-SA[2,3,x] based (PnP) cards
CONFIG_SOUND_OPL3SA2
  Say Y or M here if you have such a sound card.

Support for Turtle Beach Wave Front (Maui, Tropez) synthesizers
CONFIG_SOUND_MAUI
  Say Y here if you have a Turtle Beach Wave Front, Maui, or Tropez
  sound card.

Have OSWF.MOT firmware file
CONFIG_MAUI_HAVE_BOOT
  Turtle Beach Maui and Tropez sound cards have a microcontroller
  which needs to be initialized prior to use. OSWF.MOT is a file
  distributed with the card's DOS/Windows drivers. Answer Y if you
  have this file.

Full pathname of OSWF.MOT firmware file
CONFIG_MAUI_BOOT_FILE
  Enter the full pathname of your OSWF.MOT file, starting from /.

Support for Turtle Beach MultiSound Classic, Tahiti, Monterey
CONFIG_SOUND_MSNDCLAS
  Say M here if you have a Turtle Beach MultiSound Classic, Tahiti or
  Monterey (not for the Pinnacle or Fiji). 

  See Documentation/sound/MultiSound for important information about
  this driver.

Full pathname of MSNDINIT.BIN firmware file
CONFIG_MSNDCLAS_INIT_FILE
  The MultiSound cards have two firmware files which are required for
  operation, and are not currently included. These files can be
  obtained from Turtle Beach. See Documentation/sound/MultiSound for
  information on how to obtain this.

Full pathname of MSNDPERM.BIN firmware file
CONFIG_MSNDCLAS_PERM_FILE
  The MultiSound cards have two firmware files which are required for
  operation, and are not currently included. These files can be
  obtained from Turtle Beach. See Documentation/sound/MultiSound for
  information on how to obtain this.

Support for Turtle Beach MultiSound Pinnacle, Fiji
CONFIG_SOUND_MSNDPIN
  Say M here if you have a Turtle Beach MultiSound Pinnacle or Fiji.
  See Documentation/sound/MultiSound for important information about
  this driver.

Full pathname of PNDSPINI.BIN firmware file
CONFIG_MSNDPIN_INIT_FILE
  The MultiSound cards have two firmware files which are required for
  operation, and are not currently included. These files can be
  obtained from Turtle Beach. See Documentation/sound/MultiSound for
  information on how to obtain this.

Full pathname of PNDSPERM.BIN firmware file
CONFIG_MSNDPIN_PERM_FILE
  The MultiSound cards have two firmware files which are required for
  operation, and are not currently included. These files can be
  obtained from Turtle Beach. See Documentation/sound/MultiSound for
  information on how to obtain this.

MSND Pinnacle have S/PDIF I/O
CONFIG_MSNDPIN_DIGITAL
  If you have the S/PDIF daughter board for the Pinnacle or Fiji,
  answer Y here; otherwise, say N. If you have this, you will be able
  to play and record from the S/PDIF port (digital signal). See
  Documentation/sound/MultiSound for information on how to make use of
  this capability.

MSND Pinnacle non-PnP Mode
CONFIG_MSNDPIN_NONPNP
  The Pinnacle and Fiji card resources can be configured either with
  PnP, or through a configuration port. Say Y here if your card is NOT
  in PnP mode. For the Pinnacle, configuration in non-PnP mode allows
  use of the IDE and joystick peripherals on the card as well; these
  do not show up when the card is in PnP mode. Specifying zero for any
  resource of a device will disable the device. If you are running the
  card in PnP mode, you must say N here and use isapnptools to
  configure the card's resources.

MSND Pinnacle config port
CONFIG_MSNDPIN_CFG
  This is the port which the Pinnacle and Fiji uses to configure the
  card's resources when not in PnP mode. If your card is in PnP mode,
  then be sure to say N to the previous option, "MSND Pinnacle Non-PnP
  Mode".

MSND buffer size (kB)
CONFIG_MSND_FIFOSIZE
  Configures the size of each audio buffer, in kilobytes, for
  recording and playing in the MultiSound drivers (both the Classic
  and Pinnacle). Larger values reduce the chance of data overruns at
  the expense of overall latency. If unsure, use the default.

/dev/dsp and /dev/audio support
CONFIG_SOUND_AUDIO
  If you say Y here, you will get the /dev/dsp and /dev/audio devices;
  these are the analog-digital and digital-analog converter devices
  and are very useful, so say Y.

MIDI interface support
CONFIG_SOUND_MIDI
  Answering N disables /dev/midixx devices and access to any MIDI
  ports using /dev/sequencer and /dev/music. This option also affects
  any MPU401 and/or General MIDI compatible devices. Answer Y.

FM synthesizer (YM3812/OPL-3) support
CONFIG_SOUND_YM3812
  Answer Y here, unless you know you will not need the option.

Sun Audio support
CONFIG_SUN_AUDIO
  This is support for the sound cards on Sun workstations. The code
  does not exist yet, so you might as well say N here.

Additional low level drivers
CONFIG_LOWLEVEL_SOUND
  If you need additional low level sound drivers which have not yet
  appeared, say Y. The answer to this question does not directly
  affect the kernel; saying Y will simply cause this configure script
  to present you with more options. If unsure, say Y.

ACI mixer (miroPCM12)
CONFIG_ACI_MIXER
  Audio Command Interface (ACI) driver. ACI is a protocol used to
  communicate with the microcontroller on some sound cards produced by
  miro, e.g. the miroSOUND PCM12 and PCM20. The main function of the
  ACI is to control the mixer and to get a product identification.
  This Voxware ACI driver currently only supports the ACI functions on
  the miroSOUND PCM12 card. On the PCM20, ACI also controls the radio
  tuner on this card, however this is not yet supported in this
  software.

SB32/AWE support
CONFIG_AWE32_SYNTH
  Say Y here if you have a Sound Blaster SB32, AWE32-PnP, SB AWE64 or
  similar sound card. See drivers/sound/lowlevel/README.awe,
  Documentation/sound/AWE32 and the Soundblaster-AWE mini-HOWTO,
  available via FTP (user: anonymous) from
  ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO/mini for more info.

Gallant's Audio Excel DSP 16 support (SC-6000 and SC-6600)
CONFIG_AEDSP16
  Answer Y if you have a Gallant's Audio Excel DSP 16 card. This
  driver supports Audio Excel DSP 16 but not the III nor PnP versions
  of this card.

  The Gallant's Audio Excel DSP 16 card can emulate either an SBPro or
  a Microsoft Sound System card, so you should have said Y to either
  "100% Sound Blaster compatibles (SB16/32/64, ESS, Jazz16) support"
  or "Microsoft Sound System support", above, and you need to answer
  the "MSS emulation" and "SBPro emulation" questions below
  accordingly. You should say Y to one and only one of these two
  questions.

  Read the drivers/sound/lowlevel/README.aedsp16 file and the head of
  drivers/sound/lowlevel/aedsp16.c as well as
  Documentation/sound/AudioExcelDSP16 to get more information about
  this driver and its configuration.

SC-6600 based audio cards (new Audio Excel DSP 16)
CONFIG_SC6600
  The SC6600 is the new version of DSP mounted on the Audio Excel DSP
  16 cards. Find in the manual the FCC ID of your audio card and
  answer Y if you have an SC6600 DSP.

Audio Excel DSP 16 (MSS emulation)
CONFIG_AEDSP16_MSS
  Answer Y if you want your audio card to emulate Microsoft Sound
  System. You should then say Y to "Microsoft Sound System support"
  and say N to "Audio Excel DSP 16 (SBPro emulation)".

Audio Excel DSP 16 (SBPro emulation)
CONFIG_AEDSP16_SBPRO
  Answer Y if you want your audio card to emulate Sound Blaster Pro.
  You should then say Y to "100% Sound Blaster compatibles
  (SB16/32/64, ESS, Jazz16) support" and N to "Audio Excel DSP 16 (MSS
  emulation)".

Ensoniq ES1370 based PCI sound cards
CONFIG_SOUND_ES1370
  Say Y or M if you have a PCI sound card utilizing the Ensoniq
  ES1370 chipset, such as Ensoniq's AudioPCI (non-97). To find
  out if your sound card uses an ES1370 without removing your
  computer's cover, use lspci -n and look for the PCI ID 
  1274:5000. Since Ensoniq was bought by Creative Labs,
  Sound Blaster 64/PCI models are either ES1370 or ES1371 based.
  This driver differs slightly from OSS/Free, so PLEASE READ
  Documentation/sound/es1370.

Joystick support at boot time
CONFIG_SOUND_ES1370_JOYPORT_BOOT
  Say Y here to use the joystick port of your sound card.

Ensoniq ES1371 based PCI sound cards
CONFIG_SOUND_ES1371
  Say Y or M if you have a PCI sound card utilizing the Ensoniq
  ES1371 chipset, such as Ensoniq's AudioPCI97. To find out if
  your sound card uses an ES1371 without removing your computer's
  cover, use lspci -n and look for the PCI ID 1274:1371. Since
  Ensoniq was bought by Creative Labs, Sound Blaster 64/PCI
  models are either ES1370 or ES1371 based. This driver differs
  slightly from OSS/Free, so PLEASE READ Documentation/sound/es1371.

S3 SonicVibes based PCI sound cards
CONFIG_SOUND_SONICVIBES
  Say Y or M if you have a PCI sound card utilizing the S3
  SonicVibes chipset. To find out if your sound card uses a
  SonicVibes chip without removing your computer's cover, use
  lspci -n and look for the PCI ID 5333:CA00. This driver 
  differs slightly from OSS/Free, so PLEASE READ
  Documentation/sound/sonicvibes.

Are you using a crosscompiler
CONFIG_CROSSCOMPILE
  Say Y here if you are compiling the kernel on a different
  architecture than the one it is intended to run on.

Build fp exception handler module
CONFIG_MIPS_FPE_MODULE
  Build the floating point exception handler module. This option is
  only useful for people working on the floating point exception
  handler. If you don't, say N.

Remote GDB kernel debugging
CONFIG_REMOTE_DEBUG
  If you say Y here, it will be possible to remotely debug the MIPS
  kernel using gdb. This enlarges your kernel image disk size by
  several megabytes and requires a machine with more than 16 MB,
  better 32 MB RAM to avoid excessive linking time. This is only
  useful for kernel hackers. If unsure, say N.

Magic System Request Key support
CONFIG_MAGIC_SYSRQ
  If you say Y here, you will have some control over the system even
  if the system crashes for example during kernel debugging (e.g., you
  will be able to flush the buffer cache to disk, reboot the system
  immediately or dump some status information). This is accomplished
  by pressing various keys while holding SysRq (Alt+PrintScreen). The
  keys are documented in Documentation/sysrq.txt. Don't say Y unless
  you really know what this hack does.

ISDN subsystem
CONFIG_ISDN
  ISDN ("Integrated Services Digital Networks", called RNIS in France)
  is a special type of fully digital telephone service; it's mostly
  used to connect to your Internet service provider (with SLIP or
  PPP). The main advantage is that the speed is higher than ordinary
  modem/telephone connections, and that you can have voice
  conversations while downloading stuff. It only works if your
  computer is equipped with an ISDN card and both you and your service
  provider purchased an ISDN line from the phone company. For details,
  read http://alumni.caltech.edu/~dank/isdn/ on the WWW. (To browse
  the WWW, you need to have access to a machine on the Internet that
  has a program like lynx or netscape.)

  This driver allows you to use an ISDN-card for networking
  connections and as dialin/out device. The isdn-tty's have a built in
  AT-compatible modem emulator. Network devices support autodial,
  channel-bundling, callback and caller-authentication without having
  a daemon running. A reduced T.70 protocol is supported with tty's
  suitable for German BTX. On D-Channel, the protocols EDSS1
  (Euro-ISDN) and 1TR6 (German style) are supported. See
  Documentation/isdn/README for more information. 

  If you want to compile the ISDN code as a module ( = code which can
  be inserted in and removed from the running kernel whenever you
  want), say M here and read Documentation/modules.txt. The module
  will be called isdn.o. If unsure, say N.

Support synchronous PPP
CONFIG_ISDN_PPP
  Over digital connections such as ISDN, there is no need to
  synchronize sender and recipient's clocks with start and stop bits
  as is done over analog telephone lines. Instead, one can use
  "synchronous PPP". Saying Y here will include this protocol. This
  protocol is used by Cisco and Sun for example. So you want to say Y
  here if the other end of your ISDN connection supports it. You will
  need a special version of pppd (called ipppd) for using this
  feature. See Documentation/isdn/README.syncppp and
  Documentation/isdn/syncPPP.FAQ for more information.

Support generic MP (RFC 1717)
CONFIG_ISDN_MPP
  With synchronous PPP enabled, it is possible to increase throughput
  by bundling several ISDN-connections, using this protocol. See
  Documentation/isdn/README.syncppp for more information.

Use VJ-compression with synchronous PPP
CONFIG_ISDN_PPP_VJ
  This enables Van Jacobson header compression for synchronous PPP.
  Say Y if the other end of the connection supports it.

Support audio via ISDN
CONFIG_ISDN_AUDIO
  If you say Y here, the modem-emulator will support a subset of the
  EIA Class 8 Voice commands. Using a getty with voice-support
  (mgetty+sendfax by gert@greenie.muc.de with an extension, available
  with the ISDN utility package for example), you will be able to use
  your Linux box as an ISDN-answering machine. Of course, this must be
  supported by the lowlevel driver also. Currently, the HiSax driver
  is the only voice-supporting driver. See
  Documentation/isdn/README.audio for more information.

X.25 PLP on top of ISDN (EXPERIMENTAL)
CONFIG_ISDN_X25
  This experimental feature provides the X.25 protocol over ISDN
  connections. See Documentation/isdn/README.x25 for more information
  if you are thinking about using this.

ICN 2B and 4B support
CONFIG_ISDN_DRV_ICN
  This enables support for two kinds of ISDN-cards made by a German
  company called ICN. 2B is the standard version for a single ISDN
  line with two B-channels, 4B supports two ISDN lines. For running
  this card, additional firmware is necessary, which has to be
  downloaded into the card using a utility which is distributed
  separately. See Documentation/isdn/README and README.icn for more
  information. 

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called icn.o.

isdnloop support
CONFIG_ISDN_DRV_LOOP
  This driver provides a virtual ISDN card. Its primary purpose is
  testing of linklevel features or configuration without getting
  charged by your service-provider for lots of phone calls.
  You need will need the loopctrl utility from the latest isdn4k-utils
  package to set up this driver.

HiSax SiemensChipSet driver support
CONFIG_ISDN_DRV_HISAX
  This is a driver supporting the Siemens chipset on various
  ISDN-cards (like AVM A1, Elsa ISDN cards, Teles S0-16.0, Teles
  S0-16.3, Teles S0-8, Teles/Creatix PnP, ITK micro ix1 and many
  compatibles). 

  HiSax is just the name of this driver, not the name of any hardware.
  
  If you have a card with such a chipset, you should say Y here and
  also to the configuration option of the driver for your particular
  card, below.

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called hisax.o. See Documentation/isdn/README.HiSax for more
  information on using this driver.

HiSax Support for Teles 16.0/8.0
CONFIG_HISAX_16_0
  This enables HiSax support for the Teles ISDN-cards S0-16.0, S0-8
  and many compatibles. 

  See Documentation/isdn/README.HiSax on how to configure it using the
  different cards, a different D-channel protocol, or non-standard
  IRQ/port/shmem settings.

HiSax Support for Teles 16.3 or PNP or PCMCIA
CONFIG_HISAX_16_3
  This enables HiSax support for the Teles ISDN-cards S0-16.3 the
  Teles/Creatix PnP and the Teles PCMCIA.
  
  See Documentation/isdn/README.HiSax on how to configure it using the
  different cards, a different D-channel protocol, or non-standard
  IRQ/port settings.

HiSax Support for Teles 16.3c
CONFIG_HISAX_TELES3C
  This enables HiSax support for the Teles ISDN-cards 16.3c.
  
  See Documentation/isdn/README.HiSax on how to configure it using the
  different cards, a different D-channel protocol, or non-standard
  IRQ/port settings.

HiSax Support for AVM A1 (Fritz)
CONFIG_HISAX_AVM_A1
  This enables HiSax support for the AVM A1 (aka "Fritz").
  
  See Documentation/isdn/README.HiSax on how to configure it using the
  different cards, a different D-channel protocol, or non-standard
  IRQ/port settings.

HiSax Support for Elsa ISA cards
CONFIG_HISAX_ELSA
  This enables HiSax support for the Elsa Mircolink ISA cards, for the
  Elsa Quickstep series cards and Elsa PCMCIA.

  See Documentation/isdn/README.HiSax on how to configure it using the
  different cards, a different D-channel protocol, or non-standard
  IRQ/port settings.

HiSax Support for ITK ix1-micro Revision 2
CONFIG_HISAX_IX1MICROR2
  This enables HiSax support for the ITK ix1-micro Revision 2 card.

  See Documentation/isdn/README.HiSax on how to configure it using the
  different cards, a different D-channel protocol, or non-standard
  IRQ/port settings.

HiSax Support for Eicon.Diehl Diva cards
CONFIG_HISAX_DIEHLDIVA
  This enables HiSax support for the Eicon.Diehl Diva none PRO
  versions passive ISDN cards.

  See Documentation/isdn/README.HiSax on how to configure it using the
  different cards, a different D-channel protocol, or non-standard
  IRQ/port settings.

HiSax Support for ASUSCOM cards
CONFIG_HISAX_ASUSCOM
  This enables HiSax support for the AsusCom and their OEM versions
  passive ISDN cards.

  See Documentation/isdn/README.HiSax on how to configure it using the
  different cards, a different D-channel protocol, or non-standard
  IRQ/port settings.

HiSax Support for TELEINT cards
CONFIG_HISAX_TELEINT
  This enables HiSax support for the TELEINT SA1 semiactiv ISDN card.

  See Documentation/isdn/README.HiSax on how to configure it using the
  different cards, a different D-channel protocol, or non-standard
  IRQ/port settings.

HiSax Support for Sedlbauer speed card/win-star
CONFIG_HISAX_SEDLBAUER
  This enables HiSax support for the Sedlbauer passive ISDN cards.

  See Documentation/isdn/README.HiSax on how to configure it using the
  different cards, a different D-channel protocol, or non-standard
  IRQ/port settings.

HiSax Support for USR Sportster internal TA
CONFIG_HISAX_SPORTSTER
  This enables HiSax support for the USR Sportster internal TA card.

  See Documentation/isdn/README.HiSax on how to configure it using a
  different D-channel protocol, or non-standard IRQ/port settings.

HiSax Support for MIC card
CONFIG_HISAX_MIC
  This enables HiSax support for the ITH MIC card. 

  See Documentation/isdn/README.HiSax on how to configure it using a
  different D-channel protocol, or non-standard IRQ/port settings.

HiSax Support for NETjet card
CONFIG_HISAX_NETJET
  This enables HiSax support for the NetJet from Traverse
  Technologies.

  See Documentation/isdn/README.HiSax on how to configure it using a
  different D-channel protocol, or non-standard IRQ/port settings.

HiSax Support for Niccy PnP/PCI card
CONFIG_HISAX_NICCY
  This enables HiSax support for the Dr. Neuhaus Niccy PnP or PCI. 

  See Documentation/isdn/README.HiSax on how to configure it using a
  different D-channel protocol, or non-standard IRQ/port settings.

HiSax Support for Am7930 (EXPERIMENTAL)
CONFIG_HISAX_AMD7930
  This enables HiSax support for the AMD7930 chips on some SPARCs.
  This code is not finished yet.

HiSax Support for EURO/DSS1
CONFIG_HISAX_EURO
  Say Y or N according to the D-channel protocol which your local
  telephone service company provides.

  NOTE: If you say Y here and you have only one ISDN card installed,
  you cannot say Y to "HiSax Support for German 1TR6", below. And vice
  versa.

Support for German tariff info
CONFIG_DE_AOC
  If you want that the HiSax hardware driver sends messages to the
  upper level of the isdn code on each AOCD (Advice Of Charge, During
  the call -- transmission of the fee information during a call) and
  on each AOCE (Advice Of Charge, at the End of the call --
  transmission of fee information at the end of the call), say Y here.
  This works only in Germany.

Support for Australian Microlink service (not for std. EURO)
CONFIG_HISAX_ML
  If you are in Australia and connected to the Microlink telephone
  network, enable this, because there are little differences in
  protocol.
  
  Please don't enable this in other countries.

HiSax Support for US/NI-1 (not released yet)
CONFIG_HISAX_NI1
  Say Y or N according to the D-channel protocol which your local
  telephone service company provides.

HiSax Support for German 1TR6
CONFIG_HISAX_1TR6
  Say Y or N according to the D-channel protocol which your local
  telephone service company provides.

  NOTE: If you say Y here and you have only one ISDN card installed,
  you cannot say Y to "HiSax Support for EURO/DSS1", above. And vice
  versa.

PCBIT-D support
CONFIG_ISDN_DRV_PCBIT
  This enables support for the PCBIT ISDN-card. This card is
  manufactured in Portugal by Octal. For running this card, additional
  firmware is necessary, which has to be downloaded into the card
  using a utility which is distributed separately. See
  Documentation/isdn/README and Documentation/isdn/README.pcbit for
  more information. 

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called pcbit.o.

Spellcaster support (EXPERIMENTAL)
CONFIG_ISDN_DRV_SC
  This enables support for the Spellcaster BRI ISDN boards. This
  driver currently builds only in a modularized version ( = code which
  can be inserted in and removed from the running kernel whenever you
  want, details in Documentation/modules.txt); the module will be
  called sc.o. See Documentation/isdn/README.sc and
  http://www.spellcast.com for more information (to browse the WWW,
  you need to have access to a machine on the Internet that has a
  program like lynx or netscape).

AVM-B1 with CAPI2.0 support
CONFIG_ISDN_DRV_AVMB1
  This enables support for the AVM B1 ISDN networking cards. In
  addition, a CAPI (Common ISDN Application Programming Interface, a
  standard making it easy for programs to access ISDN hardware, see
  http://www.capi.org/; to browse the WWW, you need to have access to
  a machine on the Internet that has a program like lynx or netscape)
  interface for this card is provided. In order to use this card,
  additional firmware is necessary, which has to be downloaded into
  the card using a utility which is distributed separately. Please
  read the file Documentation/isdn/README.avmb1. 

  This code is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called avmb1.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

Verbose reason code reporting (kernel size +=7K)
CONFIG_ISDN_DRV_AVMB1_VERBOSE_REASON
  If you say Y here, the AVM B1 driver will give verbose reasons for
  disconnecting. This will increase the size of the kernel by 7 KB. If
  unsure, say Y.

IBM Active 2000 support (EXPERIMENTAL)
CONFIG_ISDN_DRV_ACT2000
  Say Y here if you have an IBM Active 2000 ISDN card. In order to use
  this card, additional firmware is necessary, which has to be loaded
  into the card using a utility which is part of the latest
  isdn4k-utils package. Please read the file
  Documentation/isdn/README.act2000 for more information.

Support for AP1000 multicomputer
CONFIG_AP1000
  This enables support for a SPARC based parallel multi-computer
  called AP1000+. For details on our efforts to port Linux to this
  machine see http://cap.anu.edu.au/cap/projects/linux (to browse the
  WWW, you need to have access to a machine on the Internet that has a
  program like lynx or netscape) or mail to hackers@cafe.anu.edu.au

Support for Sun4 architecture
CONFIG_SUN4
  Say Y here if, and only if, your machine is a Sun4. Note that
  a kernel compiled with this option will run only on Sun4.
  (And the current version will probably work only on sun4/330.)

SPARC ESP SCSI support
CONFIG_SCSI_SUNESP
  This is the driver for the Sun ESP SCSI host adapter. The ESP
  chipset is present in most SPARC-based computers.

SPARC /dev/openprom compatibility driver
CONFIG_SUN_OPENPROMIO
  This driver provides user programs with an interface to the SPARC
  PROM device tree. The driver implements a SunOS-compatible
  interface and a NetBSD-compatible interface. 

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M and read Documentation/modules.txt. If unsure, say Y.

#Mostek real time clock support
#CONFIG_SUN_MOSTEK_RTC
#
#Siemens SAB82532 serial support
#CONFIG_SAB82532
###
### Please someone fill these in.
###

#
# m68k-specific kernel options
# Documented by Chris Lawrence <quango@themall.net> et al.
#
Amiga support
CONFIG_AMIGA
  This option enables support for the Amiga series of computers. If
  you plan to use this kernel on an Amiga, say Y here and browse the
  material available in Documentation/m68k; otherwise say N.

Atari support
CONFIG_ATARI
  This option enables support for the 68000-based Atari series of
  computers (including the TT, Falcon and Medusa). If you plan to use
  this kernel on an Atari, say Y here and browse the material
  available in Documentation/m68k; otherwise say N.

Hades support
CONFIG_HADES
  This option enables support for the Hades Atari clone. If you plan
  to use this kernel on a Hades, say Y here; otherwise say N.

Macintosh support
CONFIG_MAC
  This option enables support for the Apple Macintosh series of
  computers (yes, there is experimental support now, at least for part
  of the series).
  
  Say N unless you're willing to code the remaining necessary support.
  ;)

# CONFIG_APOLLO, etc. coming soon (?)

68020 support
CONFIG_M68020
  If you anticipate running this kernel on a computer with a MC68020
  processor, say Y. Otherwise, say N. Note that the 68020 requires a
  68851 MMU (Memory Management Unit) to run Linux/m68k.

68030 support
CONFIG_M68030
  If you anticipate running this kernel on a computer with a MC68030
  processor, say Y. Otherwise, say N. Note that a MC68EC030 will not
  work, as it does not include an MMU (Memory Management Unit).

68040 support
CONFIG_M68040
  If you anticipate running this kernel on a computer with a MC68LC040
  or MC68040 processor, say Y. Otherwise, say N. Note that an
  MC68EC040 will not work, as it does not include an MMU (Memory
  Management Unit).

Use -m68040 flag for 68040 specific optimizations
CONFIG_OPTIMIZE_040
  If you will only be running this kernel on a 68040-series processor,
  this will make the kernel run somewhat faster. However, it will no
  longer run on a 68020 or 68030, no matter whether you included 68020
  and 68030 support or not. Say N unless the only processor you are
  compiling support for is the 68040 (or 68LC040).

68060 support
CONFIG_M68060
  If you anticipate running this kernel on a computer with a MC68060
  processor, say Y. Otherwise, say N.

Use -m68060 flag for 68060 specific optimizations
CONFIG_OPTIMIZE_060
  If you will only be running this kernel on a 68060-series processor,
  this will make the kernel run somewhat faster. However, it will no
  longer run on a 68020, 68030 or 68040, no matter whether you
  included support for those processors or not. Say N unless the only
  processor you are compiling support for is the 68060.

Advanced processor options
CONFIG_ADVANCED_CPU
  This gives you access to some advanced options for the CPU. The
  defaults should be fine for most users, but these options may make
  it possible for you to improve performance somewhat if you know what
  you are doing. Most users should say N to this question.

Use read-modify-write instructions
CONFIG_RMW_INSNS
  This allows to use certain instructions that work with indivisible
  read-modify-write bus cycles. While this is faster than the
  workaround of disabling interrupts, it can conflict with DMA 
  ( = direct memory access) on many Amiga systems, and it is also said
  to destabilize other machines. It is very likely that this will
  cause serious problems on any Amiga or Atari Medusa if set. The only
  configuration where it should work are 68030-based Ataris, where it
  apparently improves performance. But you've been warned! Unless you
  really know what you are doing, say N. Try Y only if you're quite
  adventurous.

Amiga AutoConfig Identification
CONFIG_ZORRO
  This enables support for automatic identification of Amiga expansion
  cards that obey the AutoConfig(tm) specification.
  Say Y if you want your expansion cards to be identified on bootup;
  it will enlarge your kernel by about 10 KB. The identification
  information is also available through /proc/zorro (say Y to
  "/proc filesystem support"!).

  Note that even if you say N here, you can still use your expansion
  cards. If in doubt, say Y.

Amiga OCS chipset support
CONFIG_AMIFB_OCS
  This enables support for the original Agnus and Denise video chips,
  found in the Amiga 1000 and most A500's and A2000's. If you intend
  to run Linux on any of these systems, say Y; otherwise say N.

Amiga ECS chipset support
CONFIG_AMIFB_ECS
  This enables support for the Enhanced Chip Set, found in later
  A500's, later A2000's, the A600, the A3000, the A3000T and CDTV. If
  you intend to run Linux on any of these systems, say Y; otherwise
  say N.

Amiga AGA chipset support
CONFIG_AMIFB_AGA
  This enables support for the Advanced Graphics Architecture (also
  known as the AGA or AA) Chip Set, found in the A1200, A4000, A4000T
  and CD32. If you intend to run Linux on any of these systems, say Y;
  otherwise say N.

Amiga GSP (TMS340x0) support
CONFIG_AMIGA_GSP
  Include support for Amiga graphics cards that use the Texas
  Instruments TMS340x0 GSP (Graphics Signal Processor) chips. Say Y
  if you want to use a DMI Resolver or Commodore A2410 (Lowell)
  graphics card on an Amiga; otherwise, say N.

DMI Resolver support
CONFIG_GSP_RESOLVER
  Include support in the kernel for the DMI Resolver graphics card. If
  you have one, say Y; otherwise, say N.

A2410 support
CONFIG_GSP_A2410
  Include support in the kernel for the Commodore/University of Lowell
  A2410 graphics card. If you have one, say Y; otherwise, say N.

Amiga Zorro II ramdisk support
CONFIG_AMIGA_Z2RAM
  This enables support for using Chip RAM and Zorro II RAM as a
  ramdisk or as a swap partition. Say Y if you want to include this
  driver in the kernel. This driver is also available as a module 
  ( = code which can be inserted in and removed from the running
  kernel whenever you want). The module is called z2ram.o. If you want
  to compile it as a module, say M here and read
  Documentation/modules.txt.

Atari ST-RAM swap support
CONFIG_STRAM_SWAP
  This enables support for using (parts of) ST-RAM as swap space,
  instead of as normal system memory. This can first enhance system
  performance if you have lots of alternate RAM (compared to the size
  of ST-RAM), because executable code always will reside in faster
  memory. ST-RAM will remain as ultra-fast swap space. On the other
  hand, it allows much improved dynamic allocations of ST-RAM buffers
  for device driver modules (e.g. floppy, ACSI, SLM printer, DMA
  sound). The probability that such allocations at module load time
  fail is drastically reduced.

Atari ACSI support
CONFIG_ATARI_ACSI
  This enables support for the Atari ACSI interface. The driver
  supports hard disks and CD-ROMs, which have 512-byte sectors, or can
  be switched to that mode. Due to the ACSI command format, only disks
  up to 1 GB are supported. Special support for certain ACSI to SCSI
  adapters, which could relax that, isn't included yet. The ACSI
  driver is also the basis for certain other drivers for devices
  attached to the ACSI bus: Atari SLM laser printer, BioNet-100
  Ethernet, and PAMsNet Ethernet. If you want to use one of these
  devices, you need ACSI support, too. 

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called acsi.o.

Probe all LUNs on each ACSI device
CONFIG_ACSI_MULTI_LUN
  If you have a ACSI device that supports more than one LUN (Logical
  Unit Number), e.g. a CD jukebox, you should say Y here so that all
  will be found by the ACSI driver. An ACSI device with multiple LUNs
  acts logically like multiple ACSI devices. The vast majority of ACSI
  devices have only one LUN, and so most people can say N here and
  should in fact do so, because it is safer.

Atari SLM laser printer support
CONFIG_ATARI_SLM
  If you have an Atari SLM laser printer, say Y to include support for
  it in the kernel. Otherwise, say N. This driver is also available as
  a module ( = code which can be inserted in and removed from the
  running kernel whenever you want). The module will be called
  acsi_slm.o. Be warned: the driver needs much ST-RAM and can cause
  problems due to that fact!

A3000 WD33C93A support
CONFIG_A3000_SCSI
  If you have an Amiga 3000 and have SCSI devices connected to the
  built-in SCSI controller, say Y. Otherwise, say N. This driver is
  also available as a module ( = code which can be inserted in and
  removed from the running kernel whenever you want). The module is
  called wd33c93.o. If you want to compile it as a module, say M here
  and read Documentation/modules.txt.

A2091 WD33C93A support
CONFIG_A2091_SCSI
  If you have a Commodore A2091 SCSI controller, say Y. Otherwise,
  say N. This driver is also available as a module ( = code which can
  be inserted in and removed from the running kernel whenever you
  want). The module is called wd33c93.o. If you want to compile it as
  a module, say M here and read Documentation/modules.txt.

GVP Series II WD33C93A support
CONFIG_GVP11_SCSI
  If you have a Great Valley Products Series II SCSI controller,
  answer Y. Also say Y if you have a later model of GVP SCSI
  controller (such as the GVP A4008 or a Combo board). Otherwise,
  answer N. This driver does NOT work for the T-Rex series of
  accelerators from TekMagic and GVP-M.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you
  want). The module will be called gvp11.o. If you want to compile it
  as a module, say M here and read Documentation/modules.txt.

Cyberstorm SCSI support
CONFIG_CYBERSTORM_SCSI
  If you have an Amiga with an original (MkI) Phase5 Cyberstorm
  accelerator board and the optional Cyberstorm SCSI controller,
  answer Y. Otherwise, say N.

Cyberstorm II SCSI support
CONFIG_CYBERSTORMII_SCSI
  If you have an Amiga with a Phase5 Cyberstorm MkII accelerator board
  and the optional Cyberstorm SCSI controller, say Y. Otherwise,
  answer N.

Blizzard 2060 SCSI support
CONFIG_BLZ2060_SCSI
  If you have an Amiga with a Phase5 Blizzard 2060 accelerator board
  and want to use the onboard SCSI controller, say Y. Otherwise,
  answer N.

Blizzard 1230IV/1260 SCSI support
CONFIG_BLZ1230_SCSI
  If you have an Amiga 1200 with a Phase5 Blizzard 1230IV or Blizzard
  1260 accelerator, and the optional SCSI module, say Y. Otherwise,
  say N.

Blizzard PowerUP 603e+ SCSI support
CONFIG_BLZ603EPLUS_SCSI
  If you have an Amiga 1200 with a Phase5 Blizzard PowerUP 603e+
  accelerator, say Y. Otherwise, say N.

Fastlane SCSI support
CONFIG_FASTLANE_SCSI
  If you have the Phase5 Fastlane Z3 SCSI controller, or plan to use
  one in the near future, say Y to this question. Otherwise, say N.

Atari native SCSI support
CONFIG_ATARI_SCSI
  If you have an Atari with built-in NCR5380 SCSI controller (TT,
  Falcon, ...) say Y to get it supported. Of course also, if you have
  a compatible SCSI controller (e.g. for Medusa). This driver is also
  available as a module ( = code which can be inserted in and removed
  from the running kernel whenever you want). The module is called
  atari_scsi.o. If you want to compile it as a module, say M here and
  read Documentation/modules.txt. This driver supports both styles of
  NCR integration into the system: the TT style (separate DMA), and
  the Falcon style (via ST-DMA, replacing ACSI). It does NOT support
  other schemes, like in the Hades (without DMA).

Long delays for Toshiba CD-ROMs
CONFIG_ATARI_SCSI_TOSHIBA_DELAY
  This option increases the delay after a SCSI arbitration to
  accommodate some flaky Toshiba CD-ROM drives. Say Y if you intend to
  use a Toshiba CD-ROM drive; otherwise, the option is not needed and
  would impact performance a bit, so say N.

Hades SCSI DMA emulator (EXPERIMENTAL)
CONFIG_TT_DMA_EMUL
  This option enables code which emulates the TT SCSI DMA chip on the
  Hades. This increases the SCSI transfer rates at least ten times
  compared to PIO transfers. Note that this code is experimental and
  has only been tested on a Hades with a 68060 processor. Before you
  use this, make backups of your entire hard disk.

Ariadne support
CONFIG_ARIADNE
  If you have a Village Tronic Ariadne Ethernet adapter, say Y.
  Otherwise, say N.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you
  want). The module is called ariadne.o. If you want to compile it as
  a module, say M here and read Documentation/modules.txt.

Ariadne II support
CONFIG_ARIADNE2
  If you have a Village Tronic Ariadne II Ethernet adapter, say Y.
  Otherwise, say N.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you
  want). The module is called ariadne2.o. If you want to compile it as
  a module, say M here and read Documentation/modules.txt.

A2065 support
CONFIG_A2065
  If you have a Commodore A2065 Ethernet adapter, say Y. Otherwise,
  say N.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you
  want). The module is called a2065.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

Hydra support
CONFIG_HYDRA
  If you have a Hydra Ethernet adapter, say Y. Otherwise, say N.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you
  want). The module is called hydra.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

Atari Lance support
CONFIG_ATARILANCE
  Say Y to include support for several Atari Ethernet adapters based
  on the AMD Lance chipset: RieblCard (with or without battery), or
  PAMCard VME (also the version by Rhotron, with different addresses).

BioNet-100 support
CONFIG_ATARI_BIONET
  Say Y to include support for BioData's BioNet-100 Ethernet adapter
  for the ACSI port. The driver works (has to work...) with a polled
  I/O scheme, so it's rather slow :-(

PAMsNet support
CONFIG_ATARI_PAMSNET
  Say Y to include support for the PAMsNet Ethernet adapter for the
  ACSI port ("ACSI node"). The driver works (has to work...) with a
  polled I/O scheme, so it's rather slow :-(

Multiface Card III parallel support
CONFIG_MULTIFACE_III_LP
  If you have a Multiface III card for your Amiga, and want to use its
  parallel port in Linux, say Y. Otherwise, say N.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module is called lp_m68k.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

Amiga mouse support
CONFIG_AMIGAMOUSE
  If you want to be able to use an Amiga mouse in Linux, say Y. 

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module is called amigamouse.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

Amiga Copper Console
CONFIG_COPCON
  This configures the console to use the Amiga's graphics coprocessor
  for scrolling, instead of using the CPU. This option markedly
  improves response times in the high color modes (5 bitplanes and
  up). If you would like to use this, say Y; otherwise, say N.

Atari mouse support
CONFIG_ATARIMOUSE
  If you want to be able to use an Atari mouse in Linux, say Y. 

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module is called atarimouse.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

Atari MFP serial support
CONFIG_ATARI_MFPSER
  If you like to use the MFP serial ports ("Modem1", "Serial1") under
  Linux, say Y. The driver equally supports all kinds of MFP serial
  ports and automatically detects whether Serial1 is available. 

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  If you want to compile it as a module, say M here and read
  Documentation/modules.txt. 

  Note for Falcon users: You also have an MFP port, it's just not
  wired to the outside... But you could use the port under Linux.

Atari SCC serial support
CONFIG_ATARI_SCC
  If you have serial ports based on a Zilog SCC chip (Modem2, Serial2,
  LAN) and like to use them under Linux, say Y. All built-in SCC's are
  supported (TT, MegaSTE, Falcon), and also the ST-ESCC. If you have
  two connectors for channel A (Serial2 and LAN), they are visible as
  two separate devices.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  If you want to compile it as a module, say M here and read
  Documentation/modules.txt.

Atari SCC serial DMA support
CONFIG_ATARI_SCC_DMA
  This enables DMA support for receiving data on channel A of the SCC.
  If you have a TT you may say Y here and read
  drivers/char/atari_SCC.README. All other users should say N here,
  because only the TT has SCC-DMA, even if your machine keeps claiming
  so at boot time.

Atari MIDI serial support
CONFIG_ATARI_MIDI
  If you want to use your Atari's MIDI port in Linux, say Y.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you
  want). If you want to compile it as a module, say M here and read
  Documentation/modules.txt.

Atari DSP56k Digital Signal Processor support
CONFIG_ATARI_DSP56K
  If you want to be able to use the DSP56001 in Falcons, say Y. This
  driver is still experimental, and if you don't know what it is, or
  if you don't have this processor, just say N.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  If you want to compile it as a module, say M here and read
  Documentation/modules.txt.

Amiga builtin serial support
CONFIG_AMIGA_BUILTIN_SERIAL
  If you want to use your Amiga's built-in serial port in Linux,
  answer Y.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you
  want). If you want to compile it as a module, say M here and read
  Documentation/modules.txt.

GVP IO-Extender support
CONFIG_GVPIOEXT
  If you want to use a GVP IO-Extender serial card in Linux, say Y.
  Otherwise, say N.

Multiface Card III serial support
CONFIG_MULTIFACE_III_TTY
  If you want to use a Multiface III card's serial port in Linux,
  answer Y.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  If you want to compile it as a module, say M here and read
  Documentation/modules.txt.

Amiga or Atari DMA sound support
CONFIG_DMASOUND
  If you want to use the internal audio of your Atari or Amiga in
  Linux, answer Y to this question. This will provide a Sun-like
  /dev/audio, compatible with the Linux/i386 sound system. Otherwise,
  say N.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you
  want). If you want to compile it as a module, say M here and read
  Documentation/modules.txt.

MSDOS partition support
CONFIG_MSDOS_PARTITION
  This option enables support for using hard disks that were
  partitioned on an MS-DOS system. This may be useful if you are
  sharing a hard disk between i386 and m68k Linux boxes, for example.
  Say Y if you need this feature; users who are only using their
  system-native partitioning scheme can say N here.

Processor Type
CONFIG_6xx
  There are two types of PowerPC chips supported. The more common
  types (601,603,604,740,750) and the embedded versions (821 and 860).
  Unless you are building a kernel for one of the embedded boards
  using the 821 or 860 choose 6xx.

Machine Type
CONFIG_PMAC
  Linux currently supports several different kinds of PowerPC-based
  machines: Apple Power Macintoshes and clones (such as the Motorola
  Starmax series), PReP (PowerPC Reference Platform) machines such as
  the Motorola PowerStack, Amiga Power-Up systems (APUS), CHRP and the
  embedded MBX boards from Motorola. Currently, a single kernel binary
  only supports one type or the other. However, there is very early
  work on support for CHRP, PReP and PowerMac's from a single binary.

Support for Open Firmware device tree in /proc
CONFIG_PROC_DEVICETREE
  This option adds a device-tree directory under /proc which contains
  an image of the device tree that the kernel copies from Open
  Firmware. If unsure, say Y here.

MESH (Power Mac internal SCSI) support
CONFIG_SCSI_MESH
  Many Power Macintoshes and clones have a MESH (Macintosh Enhanced
  SCSI Hardware) SCSI bus adaptor (the 7200 doesn't, but all of the
  other Power Macintoshes do). Say Y to include support for this SCSI
  adaptor. This driver is also available as a module called mesh.o
  ( = code which can be inserted in and removed from the running
  kernel whenever you want). If you want to compile it as a module,
  say M here and read Documentation/modules.txt.

Maximum synchronous transfer rate
CONFIG_SCSI_MESH_SYNC_RATE
  On Power Macintoshes (and clones) where the MESH SCSI bus adaptor
  drives a bus which is entirely internal to the machine (such as the
  7500, 7600, 8500, etc.), the MESH is capable of synchronous
  operation at up to 10 MB/s. On machines where the SCSI bus
  controlled by the MESH can have external devices connected, it is
  usually rated at 5 MB/s. 5 is a safe value here unless you know the
  MESH SCSI bus is internal only; in that case you can say 10. Say 0
  to disable synchronous operation.

53C94 (Power Mac external SCSI) support
CONFIG_SCSI_MAC53C94
  On Power Macintoshes (and clones) with two SCSI buses, the external
  SCSI bus is usually controlled by a 53C94 SCSI bus adaptor. Older
  machines which only have one SCSI bus, such as the 7200, also use
  the 53C94. Say Y to include support for the 53C94. 

  This driver is also available as a module called mac53c94.o ( = code
  which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt.

MACE (Power Mac Ethernet) support
CONFIG_MACE
  Power Macintoshes and clones with Ethernet built-in on the
  motherboard will usually use a MACE (Medium Access Control for
  Ethernet) interface. Say Y to include support for the MACE chip.

BMAC (G3 ethernet) support
CONFIG_BMAC
  Say Y for support of BMAC Ethernet interfaces. These are used on G3
  computers. 

Video For Linux
CONFIG_VIDEO_DEV
  Support for audio/video capture and overlay devices and FM radio
  cards. The exact capabilities of each device vary. User tools for
  this are available from
  ftp://ftp.uk.linux.org/pub/linux/video4linux.

  If you are interested in writing a driver for such an audio/video
  device or user software interacting with such a driver, please read
  the file Documentation/video4linux/API.html.

  This driver is also available as a module called videodev.o ( = code
  which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt.

AIMSlab RadioTrack (aka RadioReveal) support
CONFIG_RADIO_RTRACK
  Choose Y here if you have one of these FM radio cards, and then fill
  in the port address below.

  Note that newer AIMSlab RadioTrack cards have a different chipset
  and are not supported by this driver. For these cards, use the
  RadioTrack II driver below.

  In order to control your radio card, you will need to use programs
  that are compatible with the Video for Linux API. Information on 
  this API and pointers to "v4l" programs may be found on the WWW at
  http://roadrunner.swansea.uk.linux.org/v4l.shtml; to browse the WWW,
  you need to have access to a machine on the Internet that has a 
  program like lynx or netscape. More information is contained in the
  file Documentation/video4linux/radiotrack.txt.

  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called radio-aimslab.o.

RadioTrack i/o port
CONFIG_RADIO_RTRACK_PORT
  Enter either 0x30f or 0x20f here. The card default is 0x30f, if you
  haven't changed the jumper setting on the card.

AIMSlab RadioTrack II support
CONFIG_RADIO_RTRACK2
  Choose Y here if you have this FM radio card, and then fill in the 
  port address below.

  In order to control your radio card, you will need to use programs
  that are compatible with the Video for Linux API. Information on 
  this API and pointers to "v4l" programs may be found on the WWW at
  http://roadrunner.swansea.uk.linux.org/v4l.shtml; to browse the WWW,
  you need to have access to a machine on the Internet that has a 
  program like lynx or netscape.

  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called radio-rtrack2.o.

RadioTrack II i/o port
CONFIG_RADIO_RTRACK2_PORT
  Enter either 0x30c or 0x20c here. The card default is 0x30c, if you
  haven't changed the jumper setting on the card.

Aztech/Packard Bell Radio
CONFIG_RADIO_AZTECH
  Choose Y here if you have one of these FM radio cards, and then fill
  in the port address below.
  
  In order to control your radio card, you will need to use programs
  that are compatible with the Video for Linux API. Information on 
  this API and pointers to "v4l" programs may be found on the WWW at
  http://roadrunner.swansea.uk.linux.org/v4l.shtml; to browse the WWW,
  you need to have access to a machine on the Internet that has a 
  program like lynx or netscape.

  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called radio-aztech.o.

Aztech/Packard Bell radio card i/o port
CONFIG_RADIO_AZTECH_PORT
  Enter either 0x350 or 0x358 here. The card default is 0x350, if you
  haven't changed the setting of jumper JP3 on the card. Removing the
  jumper sets the card to 0x358.

SF16FMI Radio
CONFIG_RADIO_SF16FMI
  Choose Y here if you have one of these FM radio cards, and then fill
  in the port address below.

  In order to control your radio card, you will need to use programs
  that are compatible with the Video for Linux API. Information on 
  this API and pointers to "v4l" programs may be found on the WWW at
  http://roadrunner.swansea.uk.linux.org/v4l.shtml; to browse the WWW,
  you need to have access to a machine on the Internet that has a 
  program like lynx or netscape.

  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called radio-sf16fmi.o

SF16FMI I/O port (0x284 or 0x384)
CONFIG_RADIO_SF16FMI_PORT
  Enter the I/O port of your SF16FMI radio card.

Zoltrix Radio
CONFIG_RADIO_ZOLTRIX
  Choose Y here if you have one of these FM radio cards, and then fill
  in the port address below.

  In order to control your radio card, you will need to use programs
  that are compatible with the Video for Linux API. Information on 
  this API and pointers to "v4l" programs may be found on the WWW at
  http://roadrunner.swansea.uk.linux.org/v4l.shtml; to browse the WWW,
  you need to have access to a machine on the Internet that has a 
  program like lynx or netscape.

  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called radio-zoltrix.o

ZOLTRIX I/O port (0x20c or 0x30c)
CONFIG_RADIO_ZOLTRIX_PORT
  Enter the I/O port of your Zoltrix radio card.

Miro PCM20 Radio
CONFIG_RADIO_MIROPCM20
  Choose Y here if you have one of these FM radio cards, and then fill
  in the port address below.

  In order to control your radio card, you will need to use programs
  that are compatible with the Video for Linux API. Information on 
  this API and pointers to "v4l" programs may be found on the WWW at
  http://roadrunner.swansea.uk.linux.org/v4l.shtml; to browse the WWW,
  you need to have access to a machine on the Internet that has a 
  program like lynx or netscape.

  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called radio-miropcm20.o

BT848 Video For Linux
CONFIG_VIDEO_BT848
  Support for BT848 based frame grabber/overlay boards. This includes
  the Miro, Hauppauge and STB boards. Please read the material in
  Documentation/video4linux/bttv for more information.

  This driver is also available as a module called bttv.o ( = code
  which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt.

SAA5249 Teletext processor
CONFIG_VIDEO_SAA5249
  Support for I2C bus based teletext using the SAA5249 chip. At the
  moment this is only useful on some European WinTV cards.

  This driver is also available as a module called saa5249.o ( = code
  which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt.

Quickcam BW Video For Linux
CONFIG_VIDEO_BWQCAM
  Say Y have if you the black and white version of the QuickCam
  camera. See the next option for the color version. 

  This driver is also available as a module called bw-qcam.o ( = code
  which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt.

Colour QuickCam Video For Linux
CONFIG_VIDEO_CQCAM
  This is the video4linux driver for the colour version of the
  Connectix Quickcam. If you have one of these cameras, say Y here,
  otherwise say N. This driver does not work with the original
  monochrome Quickcam, Quickcam VC or QuickClip. It is also available
  as a module (c-qcam.o).

Mediavision Pro Movie Studio Video For Linux
CONFIG_VIDEO_PMS
  Say Y if you have such a thing. This driver is also available as a
  module called pms.o ( = code which can be inserted in and removed
  from the running kernel whenever you want). If you want to compile
  it as a module, say M here and read Documentation/modules.txt.

CPU Optimization
CONFIG_CPU_ARM2
  This selects the processor type of your CPU. This is only used to
  determine C compiler optimization options, and can affect the
  compatibility of the kernel on other processors. If you specify
  ARM6, the kernel should work on all 32-bit processors. If you
  specify ARM2, ARM250 or ARM3, it should work on all 26-bit
  processors. If you're not sure, set it to "None".

ARM System type
CONFIG_ARCH_ARC
  This selects what ARM system you wish to build the kernel for. It
  also selects to some extent the CPU type. If you are unsure what
  to set this option to, please consult any information supplied with
  your system.

Build Tools Selection
CONFIG_BINUTILS_NEW
  Say Y here if and only if you're using GCC 2.8.1/EGCS with a
  binutils version >= 2.8.1 to compile the kernel (check with "gcc
  --version" and "ld -v").

Compile kernel with frame pointer
CONFIG_FRAME_POINTER
  If you say Y here, the resulting kernel will be slightly larger, but
  it will give useful debugging/error results. If you don't debug the
  kernel, you can say N.

#
# A couple of things I keep forgetting:
#   capitalize: AppleTalk, Ethernet, DMA, FTP, Internet, Intel, IRQ, 
#               Linux, NetWare, NFS, PCI, SCSI, SPARC
#   two words:  hard drive, hard disk, sound card, home page
#   other:      it's safe to save; daemon; use --, not - or ---
#
# This is used by Emacs' spell checker ispell.el:
#
# LocalWords:  CONFIG coprocessor DX Pentium SX lilo loadlin HOWTO ftp sunsite
# LocalWords:  unc edu docs emu README kB BLK DEV FD Thinkpad fd MFM RLL IDE gz
# LocalWords:  cdrom diskless netboot nfs xzvf ATAPI MB ide pavia rubini pl pd
# LocalWords:  HD CDROMs IDECD NEC MITSUMI filesystem XT XD PCI BIOS cezar ATEN
# LocalWords:  ISA EISA Microchannel VESA BIOSes IPC SYSVIPC ipc Ctrl dmesg hlt
# LocalWords:  BINFMT Linkable http ac uk jo html GCC SPARC AVANTI CABRIOLET EB
# LocalWords:  netscape gcc LD CC toplevel MODVERSIONS insmod rmmod modprobe IP
# LocalWords:  genksyms INET loopback gatewaying ethernet PPP ARP Arp MEMSIZE
# LocalWords:  howto multicasting MULTICAST MBONE firewalling ipfw ACCT resp ip
# LocalWords:  proc acct IPIP encapsulator decapsulator klogd PCTCP RARP EXT PS
# LocalWords:  telnetting subnetted NAGLE rlogin NOSR ttyS TGA techinfo mbone nl
# LocalWords:  Mb SKB IPX Novell dosemu Appletalk DDP ATALK vmalloc visar ehome
# LocalWords:  SD CHR scsi thingy SG CD LUNs LUN jukebox Adaptec BusLogic EATA
# LocalWords:  buslogic DMA DPT ATT eata dma PIO UltraStor fdomain umsdos ext
# LocalWords:  QLOGIC qlogic TMC seagate Trantor ultrastor FASST wd NETDEVICES
# LocalWords:  unix BBS linux CSLIP PLIP Kirch's LDP CSlip SL SCC IRQ csustan
# LocalWords:  Turbo Laplink plip NCSA port's ReQuest IRQs EQL SMC AMD PCnet NE
# LocalWords:  COM ELPLUS Com EtherLinkIII VLB Arcnet Cabletron DEPCA DE carlos
# LocalWords:  depca EtherWorks EWRK ewrk SEEQ EtherExpress EEXPRESS NI xxx dia
# LocalWords:  EtherExpress WaveLAN wavelan PCLAN HPLAN VG SK Ansel Xen de ZNET
# LocalWords:  PCMCIA cb stanford pcmcia LAN TEC RealTek ATP atp DLINK NetTools
# LocalWords:  TR Sony CDU caddyless cdu Mitsumi MCD cd mcd XA MultiSession CDA
# LocalWords:  Matsushita Panasonic SBPCD Soundblaster Longshine sbpcd Aztech
# LocalWords:  Okano Wearnes AZTCD CDD SE aztcd sonycd Goldstar GSCD Philips fs
# LocalWords:  LMS OPTCD Sanyo SJCD minix faqs xiafs XIA msdos mtools Cichocki
# LocalWords:  std softlinks umssync NetworkFileSharing nfsd mountd CDs HPFS TI
# LocalWords:  hpfs SYSV SCO iBCS Wyse WordPerfect tsx mit unixes sysv NR irisa
# LocalWords:  SMB WfW Cyclades async mux Logitech busmouse MouseSystem aka AST
# LocalWords:  PSMOUSE Compaq trackballs Travelmate Inport ATIXL ATI busmice ld
# LocalWords:  gpm config QIC DYNCONF FTAPE Stor Ftape ftape pcsndrv manpage NT
# LocalWords:  readprofile diskdrives org com masq EtherTalk tcp netrom sunacm
# LocalWords:  misc AIC aic pio scc Portmaster eql GIS PhotoCDs MCDX Perell PG
# LocalWords:  mcdx gscd optcd sjcd ISP hdparm Workgroups Lan samba PARIDE PCD
# LocalWords:  filesystems smbfs ATA ppp PCTech RZ www powerquest txt CMD ESDI
# LocalWords:  chipset FB multicast MROUTE appletalk ifconfig IBMTR multiport
# LocalWords:  Multisession STALDRV EasyIO EC EasyConnection ISTALLION ONboard
# LocalWords:  Brumby pci TNC cis ohio faq usenet NETLINK dev hydra ca Tyne mem
# LocalWords:  carleton Deskstation DECstation SUNFD JENSEN Noname XXXM SLiRP
# LocalWords:  pppd Zilog ZS SRM bootloader ez mainmenu rarp ipfwadm paride pcd
# LocalWords:  RTNETLINK mknod xos MTU lwared Macs mac netatalk macs cs Wolff
# LocalWords:  dartmouth flowerpt MultiMaster FlashPoint tudelft etherexpress
# LocalWords:  ICL EtherTeam ETH IDESCSI TXC SmartRAID SmartCache httpd sjc dlp
# LocalWords:  thesphere TwoServers BOOTP DHCP ncpfs BPQETHER BPQ MG HIPPI cern
# LocalWords:  bsd comp SPARCstation le SunOS ie Gracilis PackeTwin PT pt LU FX
# LocalWords:  FX TEAC CR LCS mS ramdisk IDETAPE cmd fperllo encis tcfs unisa
# LocalWords:  Vertos Genoa Funai hsfs NCP NetWare tgz APM apm ioctls UltraLite
# LocalWords:  TravelMate CDT LCD backlight VC RPC Mips AXP barlow cdrecord pg
# LocalWords:  PMAX MILO Alphas Multia Tseng linuxelf endian mipsel mips drv HT
# LocalWords:  kerneld callouts AdvanSys advansys Admin WDT DataStor EP verden
# LocalWords:  wdt hdb hdc bugfix SiS vlb Acculogic CSA DTC dtc Holtek ht QDI
# LocalWords:  QD qd UMC umc ALI ali lena fnet fr azstarnet axplinux cdr fb MDA
# LocalWords:  Avanti XL AlphaStations Jensen DECpc AXPpci UDB Cabriolet MCA RC
# LocalWords:  AlphaPC mca AOUT OUTput PPro sipx gwdg lo nwe FourPort Boca unm
# LocalWords:  Keepalive linefill RELCOM keepalive analogue CDR conf CDI INIT
# LocalWords:  OPTi isp irq noisp VFAT vfat NTFS losetup dmsdosfs dosfs ISDN MP
# LocalWords:  NOWAYOUT behaviour dialin isdn callback BTX Teles ICN EDSS Cisco
# LocalWords:  ipppd syncppp RFC MPP VJ downloaded icn NICCY Creatix shmem ufr
# LocalWords:  ibp md ARCnet ether encap NDIS arcether ODI Amigas AmiTCP NetBSD
# LocalWords:  initrd tue util DES funet des OnNet BIOSP smc Travan Iomega CMS
# LocalWords:  FC DC dc PPA IOMEGA's ppa RNFS FMV Fujitsu ARPD arpd loran layes
# LocalWords:  FRAD indiana framerelay DLCI DCLIs Sangoma SDLA mrouted sync sec
# LocalWords:  Starmode Metricom MosquitoNet mosquitonet kbit nfsroot Digiboard
# LocalWords:  DIGI Xe Xeve digiboard UMISC touchscreens mtu ethernets HBAs MEX
# LocalWords:  Shifflett netcom js jshiffle WIC DECchip ELCP EtherPower dst RTC
# LocalWords:  rtc SMP lp Digi Intl RightSwitch DGRS dgrs AFFS Amiga UFS SDL AP
# LocalWords:  Solaris RISCom riscom syncPPP PCBIT pcbit sparc anu au artoo MFB
# LocalWords:  hitchcock Crynwr cnam pktdrvr NCSA's CyDROM CyCDROM FreeBSD NeXT
# LocalWords:  NeXTstep disklabel disklabels SMD FFS tm AmigaOS diskfiles Un IQ
# LocalWords:  Bernd informatik rwth aachen uae affs multihosting bytecode java
# LocalWords:  applets applet JDK ncsa cabi SNI Alphatronix readme LANs scarab
# LocalWords:  winsock RNIS caltech OSPF honour Honouring Mbit LocalTalk DEFRAG
# LocalWords:  localtalk download Packetwin Baycom baycom interwork ASCII JNT
# LocalWords:  Camtec proxying indyramp defragment defragmented UDP FAS FASXX
# LocalWords:  FastSCSI SIO FDC qlogicfas QLogic qlogicisp setbaycom ife ee LJ
# LocalWords:  ethz ch Travelmates ProAudioSpectrum ProAudio SoundMan SB SBPro
# LocalWords:  Thunderboard SM OPL FM ADLIB TSR Gravis MPU PSS ADI SW DSP codec
# LocalWords:  ADSP ESC ASIC daughtercard GUSMAX MSS NX AdLib Excell Ensoniq YM
# LocalWords:  SoundScape Spea MediaTriX AudioTriX WSS OTI ThunderBoard VoxWare
# LocalWords:  Soundscape SSCAPE TRIX MediaTrix PnP Maui dsp midixx EIA getty
# LocalWords:  mgetty sendfax gert greenie muc lowlevel Lasermate LanManager io
# LocalWords:  OOPSes trackball binghamton mobileip ncr IOMAPPED settags ns ser
# LocalWords:  setsync NEGO MPARITY autotuning prefetch PIIX cdwrite utils rc
# LocalWords:  PCWATCHDOG berkprod bitgate boldt ucsb jf kyoto jp euc Tetsuyasu 
# LocalWords:  YAMADA tetsu cauchy nslab ntt nevod perm su doc kaf kheops wsc
# LocalWords:  traduc Bourgin dbourgin menuconfig kfill READMEs HOWTOs Virge WA
# LocalWords:  IDEDISK IDEFLOPPY EIDE firewalls QMAGIC ZMAGIC LocalWords opti
# LocalWords:  SVGATextMode vga svga Xkernel syr jmwobus comfaqs dhcp flakey GD
# LocalWords:  IPv IPng interoperability ipng ipv radio's tapr pkthome PLP nano
# LocalWords:  Ses Mhz sethdlc SOUNDMODEM WindowsSoundSystem smdiag pcf inka ES
# LocalWords:  smmixer ptt circ soundmodem MKISS FDDI DEFEA DEFPA DEFXX redhat
# LocalWords:  HyperNews khg mconv sed lina wuftpd MicroChannel netlink irc cum
# LocalWords:  raudio RealAudio PPROP NETBIOS GUI IBMMCA ELMC Racal Interlan fi
# LocalWords:  eth shapecfg src esp PCWD PREVSTAT bootparam sig bitwizard SBC
# LocalWords:  downloads AFSK TCM FP Karn KA FSK RUH LinkSys cron mouseman LLC
# LocalWords:  SyQuest SyQuest's CCITT MicroSolutions BPCD bpcd ESPSERIAL PROM
# LocalWords:  SUNESP openprom OPENPROMIO quango themall al TT MC MMU LC RMW AA
# LocalWords:  INSNS Ataris AutoConfig ZORRO OCS AMIFB Agnus Denise ECS CDTV GB
# LocalWords:  AGA Cybervision CYBER GSP TMS DMI Zorro ACSI ROMs SLM BioNet GVP
# LocalWords:  PAMsNet TekMagic Cyberstorm MkI CYBERSTORMII MkII BLZ onboard cx
# LocalWords:  Village Tronic ATARILANCE RieblCard PAMCard VME MFP sangoma LAPB
# LocalWords:  Rhotron BioData's Multiface AMIGAMOUSE COPCON Amiga's bitplanes
# LocalWords:  ATARIMOUSE MFPSER SCC's MegaSTE ESCC Atari's GVPIOEXT DMASOUND
# LocalWords:  fdutils cisco univercd rpcg htm iface lapb LAPBETHER tpqic qic
# LocalWords:  SYNTH xd en binfmt aout ipip terra ipx sd sr sg wic framebuffer
# LocalWords:  ibmmca lapbether mkiss dlci sdla fmv eepro eexpress ni hp ne es
# LocalWords:  ibmtr isofs ROMFS romfs pcxx cyclades istallion psaux msbusmouse
# LocalWords:  atixlmouse sbin softdog pcwd USS Lite ACI miroSOUND PCM miroPCM
# LocalWords:  microcontroller miro Voxware downloading teles acsi slm gvp ltpc
# LocalWords:  atari ariadne amigamouse atarimouse builtin IPDDP maths bradford
# LocalWords:  AppleTalk Farallon PhoneNet Zubkoff lnz SCCB HAPN WANs vesafb nt
# LocalWords:  wanrouter WANPIPE multiprotocol Mbps wanpipe EtherWORKS nodma SC
# LocalWords:  smp HiSax SiemensChipSet Siemens AVM Elsa ITK hisax PCC MICROR
# LocalWords:  Mircolink EURO DSS Spellcaster BRI sc spellcast Digiboards GPIO
# LocalWords:  SYMBIOS COMPAT SDMS rev ASUS Tekram HX VX API ibmmcascsi ASY asy
# LocalWords:  loader's PCnetPCI automounter AUTOFS amd autofs VT Gallant's Pnp
# LocalWords:  AEDSP aedsp enskip tik Sysctl sysctl PARPORT parport pnp IDs EPP
# LocalWords:  Autoprobe bart patrickr HDLS READBACK AB usr DAMA DS SparQ aten
# LocalWords:  Symbios PCscsi tmscsim RoamAbout GHz Hinds contrib mathematik ok
# LocalWords:  darmstadt okir DIGIEPCA International's Xem digiepca epca bootup
# LocalWords:  zorro CAPI AVMB capi avmb VP SYN syncookies EM em pc Ethertalk
# LocalWords:  Dayna DL Daynatalk LT PhoneNET ATB Daystar queueing CMDS SCBs ls
# LocalWords:  SCB STATS Thinnet ThunderLAN TLAN Netelligent NetFlex tlan james
# LocalWords:  caldera Preload Preloading slowdowns schoebel uni NBD nbd prog
# LocalWords:  stuttgart rdist TRANS hostnames mango jukeboxes ESS userland PD
# LocalWords:  hardlinked NAMETRANS env mtab fstab umount nologin runlevel gid
# LocalWords:  transname filespace adm Nodename hostname uname Kernelname bootp
# LocalWords:  KERNNAME kname ktype kernelname Kerneltype KERNTYPE Alt RX mdafb
# LocalWords:  dataless kerneltype SYSNAME Comtrol Rocketport palmtop fbset EGS
# LocalWords:  nvram SYSRQ SysRq PrintScreen sysrq NVRAMs NvRAM Shortwave RTTY
# LocalWords:  HFMODEM shortwave Sitor Amtor Pactor GTOR hfmodem hayes TX TMOUT
# LocalWords:  IDEPCI IDEDMA idedma PDC pdc TRM trm raidtools luthien nuclecu
# LocalWords:  unam mx miguel koobera uic EMUL solaris pp ieee lpsg co DMAs TOS
# LocalWords:  BLDCONFIG preloading jumperless BOOTINIT modutils multipath GRE
# LocalWords:  misconfigured autoconfiguration IPGRE ICMP tracert ipautofw PIM
# LocalWords:  netis rlynch autofw ipportfw monmouth ipsubs portforwarding pimd
# LocalWords:  portfw PIMSM netweb usc pim pf EUI aggregatable PB decapsulate
# LocalWords:  ipddp Decapsulation DECAP bool HAMRADIO tcpdump af CDs tx FBCON
# LocalWords:  ethertap multisession PPC MMIO GDT GDTH ICP gdth hamradio  bpp
# LocalWords:  lmh weejock AIMSlab RadioTrack RTRACK HZP OptoSCC TRX rx TRXECHO
# LocalWords:  DMASCC paccomm dmascc addr cfg oevsv oe kib picpar FDX baudrate
# LocalWords:  baudrates fdx HDX hdx PSK kanren frforum QoS SCHED CBQ SCH sched
# LocalWords:  sch cbq CSZ Shenker Zhang csz SFQ sfq TBF tbf PFIFO fifo PRIO RW
# LocalWords:  prio Micom xIO dwmw rimi OMIRR omirr omirrd unicode ntfs cmu NIC
# LocalWords:  Braam braam Schmidt's freiburg nls codepages codepage Romanian
# LocalWords:  Slovak Slovenian Sorbian Nordic iso Catalan Faeroese Galician SZ
# LocalWords:  Valencian Slovene Esperanto Estonian Latvian Byelorussian KOI mt
# LocalWords:  charset Inuit Greenlandic Sami Lappish koi SOFTCURSOR softcursor
# LocalWords:  Specialix specialix DTR RTS RTSCTS cycladesZ Exabyte ftape's inr
# LocalWords:  Iomega's LBFM claus ZFTAPE VFS zftape zft William's lzrw DFLT kb
# LocalWords:  MTSETBLK MTIOCTOP qft setblk zftape's tar's afio's setdrvbuffer
# LocalWords:  Procfs Exabyte's THR FCD sysvinit init PSC pscwdt VMIDI Euro SAB
# LocalWords:  Mostek Fastlane PowerMac PReP PMAC PowerPC Macintoshes Starmax
# LocalWords:  PowerStack Starmaxes MCOMMON DEVICETREE ATY IMS IMSTT videodev
# LocalWords:  BT Hauppauge STB bttv Quickcam BW BWQCAM bw qcam Mediavision PMS
# LocalWords:  pms Avatar Freecom Imation Superdisk BPCK bpck COMM comm DSTR ru
# LocalWords:  dstr EPAT EPEZ epat EPIA epia FreeCom FRPW frpw KingByte KBIC HW
# LocalWords:  KingByte's kbic OnSpec ValuStore FASTROUTE fastroute FLOWCONTROL
# LocalWords:  struct APIC realtime OSs LynxOS CNC tmp cvf HFS hfs ADFS Risc os
# LocalWords:  adfs ncpmount namespace SUBDIR reexport NDS kcore FT SPX spx DAT
# LocalWords:  interserver BLKSZ NUMBUFFERS apmd Tadpole ANA roestock QuickCam
# LocalWords:  isapnptools Colour CQCAM colour Connectix QuickClip prive mentre
# LocalWords:  KMOD kmod conformant utexas kharker UnixWare Mwave cgi cl ts ibm
# LocalWords:  eXchange threepio oakland simtel pre ULTRAMCA EtherLink isa luik
# LocalWords:  EtherLink OpenBSD pts DEVPTS devpts ptmx ttyp glibc readback SA
# LocalWords:  mwave OLDCARD isdnloop linklevel loopctrl Eicon Diehl DIEHLDIVA
# LocalWords:  ASUSCOM AsusCom TELEINT semiactiv Sedlbauer Sportster TA MIC ITH
# LocalWords:  NETjet NetJet Niccy Neuhaus sparcs AOC AOCD AOCE Microlink SAA
# LocalWords:  teletext WinTV saa iproute tc Quadra Performa PowerBook tor AUN
# LocalWords:  setserial compsoc steve Econet econet AUNUDP psched TEQL TLE CLS
# LocalWords:  teql FW Ingres TwistedPair MTRR MTRRs mtrr cfs crypto TD ktti KT
# LocalWords:  PHd ICS ipchains adelaide rustcorp syslog Cumana steganography
# LocalWords:  AcornSCSI EcoSCSI EESOX EESOXSCSI Powertec POWERTECSCSI dec SF
# LocalWords:  RadioReveal gatekeeper aimslab aztech FMI sf fmi RTL rtl cesdis
# LocalWords:  Yellowfin gsfc nasa gov yellowfin pcnet Mylex LNE lne EtherH hs
# LocalWords:  EBSA chattr RiscOS Winmodem AGP Atomwide DUALSP pcsp robinson CT
# LocalWords:  SGALAXY Waverider DSPxxx TRXPRO AudioTrix OSWF MOT CFB DSY kbps
# LocalWords:  tuwien kkudielk LVD mega lun MAXTAGS Gbps arcnet Olicom SKTR SNA
# LocalWords:  SysKonnect sktr sna etherboot ufs NetBEUI MultiSound MSNDCLAS GX
# LocalWords:  MSNDINIT MSNDPERM MSNDPIN PNDSPINI PNDSPERM Ensoniq's RetinaZ SS
# LocalWords:  AudioPCI lspci SonicVibes sonicvibes SPARCs roadrunner CLgen UPA
# LocalWords:  swansea shtml Zoltrix zoltrix BINUTILS EGCS binutils VIDC DACs
# LocalWords:  CyberVision Cirrus PowerBooks Topcat SBUS CGsix TurboGX BWtwo SS
# LocalWords:  CGthree TCX unswapable vfb fbcon hicolor truecolor AFB ILBM SOC
# LocalWords:  IPLAN gracilis Fibre SBus SparcSTORAGE SV jnewbigin swin QNX qnx
# LocalWords:  PTY PTYS ptyxx ttyxx PTYs ssh sb Avance ALS pss pvv kerneli hd
# LocalWords:  synth WaveFront MSND NONPNP AudioExcelDSP STRAM APUS CHRP MBX Nx
# LocalWords:  PowerMac's BMAC radiotrack rtrack miropcm OFFBOARD HPT UDMA DVD
# LocalWords:  hpt fokus gmd Cyrix DXL SLC DLC NexGen MediaGX GXm IDT WinChip
# LocalWords:  MMX MII valkyrie mdacon vdolive VDOLive cuseeme CU hippi rrunner
# LocalWords:  SeeMe ipmasqadm juanjox ipmarkfw markfw TNCs Microdyne rhine lib
# LocalWords:  libc jsX gamepad gameport CHF FCS FPGaming MadCatz ASSASIN GrIP
# LocalWords:  Assasin gamepads GamePad PDPI gamecards gamecard WingMan BSP WCS
# LocalWords:  ThunderPad CyberMan SideWinder ThrustMaster DirectConnect NES XF
# LocalWords:  Millenium SNES PSX Multisystem Nintendo PlayStation Amstrad CPC
# LocalWords:  Sega TurboGraFX Steffen Schwenke Multiststem PDIF FIFOSIZE EPLUS
# LocalWords:  PowerUP RoadRunner tahallah dos functionkey setterm imladris Woz
# LocalWords:  PowerMacs Winbond Algorithmics ALGOR algor ECOFF IRIX SGI SGI's
# LocalWords:  gfx virtualized Xpmac mklinux XFree FBDev Woodhouse mvhi Seeq fp
# LocalWords:  SGISEEQ HIgh ADB ADBMOUSE crosscompiler CROSSCOMPILE FPE GDB gdb
# LocalWords:  JOYPORT rp spoofing DawiControl NOGENSUPP EEPROM HSSI
