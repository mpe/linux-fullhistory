This is the CIFS VFS support for Linux.  It supports many advanced network filesystem
features such as heirarchical dfs like filesystem, hardlinks, locking and more.
It was designed to comply with the SNIA CIFS Technical Reference (which supersedes
the 1992 X/Open SMB Standard) as well as to perform best practice practical
interoperability with Windows 2000, Windows XP, Samba and equivalent 
servers.  

For questions or bug reports please contact sfrench@samba.org (sfrench@us.ibm.com)

Build instructions:
==================
extract the kernel from http://www.cifs.bkbits.net/linux-2.5 or 
http://www.cifs.bkbits.net/linux-2.4  
make menuconfig (or make xconfig)
select cifs from within the network filesystem choices
save and exit
make dep
make modules  (or "make" if you did not select CIFS VFS to be built as a module)

Installation instructions:
=========================
If you have built the CIFS vfs as module (successfully)you
simply type "make modules_install" (or if you prefer manually copy the file to
the modules directory e.g. /lib/modules/2.4.10-4GB/kernel/fs/cifs/cifs.o).

If you have built the CIFS vfs into the kernel itself, follow the instructions
for your distribution on how to install a new kernel (usually you
would simply type "make install").

If you do not have the utility mount.cifs (in the Samba 3.0 source tree and on the
CIFS VFS web site) copy it to the directory /sbin (or the same directory in which 
mount.smbfs resides).  Although no helper software is required, the installation
of mount.cifs is recommended.  Eventually the Samba 3.0 utility program "net" 
may also be helpful since it may someday provide easier mount syntax for users used 
to Windows e.g.
	 net use <mount point> <UNC name or cifs URL> 	 
and there will likely be other helper programs available ala smbmount to provide
additional optional function in the future.  Note that running Winbind on all
of your Linux clients is useful in mapping Uids and Gids consistently to the
proper network user.	

Samba Considerations
====================
To get the maximum benefit from the CIFS VFS, we recommend using a server that
supports the SNIA CIFS Unix Extensions standard (e.g. Samba 2.2.5 or Samba 3.0)
but the CIFS vfs works fine with a wide variety of CIFS servers.  Note that the
uid, gid and file permissions will display default values if you do not have
a server that supports the Unix extensions for CIFS (such as Samba 2.2.3 or
later).   To enable the Unix CIFS Extensions in the Samba server, add the line:
	unix extensions = yes
to your smb.conf file on the server.  Note that the following smb.conf settings are
also useful (on the Samba server) when the majority of clients are Unix
or Linux:
	case sensitive = yes
	delete readonly = yes
Some administrators also change the "map archive" and the "create mask" parameters
from their defaults. For more information on these see the manual pages 
("man smb.conf") on the Samba server system.  Note that the cifs vfs, unlike the
smbfs vfs, does not read the smb.conf on the client system (the few optional settings
are passed in on mount via -o parameters instead).

Use instructions:
================
Once the CIFS VFS support is built into the kernel or installed as a module (cifs.o),
you can use mount syntax like the following to access Samba or Windows servers:
  mount -t cifs //9.53.216.11/e$ /mnt -o user=myname,pass=mypassword
after -o the following cifs vfs specific options are supported:
  user=<username>
  pass=<password>
  domain=<domain name>
TCP names (in addition to ip addresses) will be available when the mount helper
(mount.cifs) is complete

Restrictions
============
Servers must support the NTLM SMB dialect (which is the most recent, supported by Samba
and Windows NT, 2000 and XP and many other SMB/CIFS servers) and servers must support
either "pure-TCP" (port 445 TCP/IP CIFS connections) or RFC 1001/1002 support for
"Netbios-Over-TCP/IP."  Neither of these is likely to be a problem as most servers
support this.  IPv6 support is planned for the future.

Misc /proc/fs/cifs Flags and Debug Info
=======================================
Various experimental features and tracing can be enabled by changing flags in /proc/fs/cifs (after
the cifs module has been installed or built into the kernel, e.g. insmod cifs).  To enable
a feature you can set it to 1 e.g. to enable tracing to the kernel message log you can do
"echo 1 > /proc/fs/cifs/cifsFYI" and "echo 1 > /proc/fs/cifs/traceSMB"
Also note that "cat /proc/fs/cifs/DebugData" will display some information about the currently
active sessions and the shares that are mounted. Currently the ntlmv2 enablement and packet
signing will not work since they the implementation is not quite complete, so do not enable
these flags unless you are doing specific testing.  Enabling extended security works to
Windows 2000 Workstations and XP but not to Windows 2000 server or Samba since it does not
usually send "raw NTLMSSP" (instead it sends NTLMSSP encapsulated in SPNEGO/GSSAPI, which
support is not complete in the CIFS VFS yet).
