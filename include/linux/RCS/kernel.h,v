head     1.2;
branch   ;
access   ;
symbols  ;
locks    tytso:1.2; strict;
comment  @ * @;


1.2
date     91.12.01.09.22.22;  author tytso;  state Exp;
branches ;
next     1.1;

1.1
date     91.11.21.08.56.53;  author tytso;  state Exp;
branches ;
next     ;


desc
@@


1.2
log
@Patches sent to Linus
@
text
@/*
 * 'kernel.h' contains some often-used function prototypes etc
 */
void verify_area(void * addr,int count);
volatile void panic(const char * str);
int printf(const char * fmt, ...);
int printk(const char * fmt, ...);
int tty_write(unsigned ch,char * buf,int count);

/*
 * This is defined as a macro, but at some point this might become a
 * real subroutine that sets a flag if it returns true (to do
 * BSD-style accounting where the process is flagged if it uses root
 * privs).  The implication of this is that you should do normal
 * permissions checks first, and check suser() last.
 */
#define suser() (current->euid == 0)
@


1.1
log
@Initial revision
@
text
@d9 9
@
